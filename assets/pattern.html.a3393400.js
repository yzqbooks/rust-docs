import{r as p,a as t,b as s,d as e,w as o,F as c,e as n,c as l,o as u}from"./app.a489c551.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const i={},k=s("h1",{id:"\u6A21\u5F0F",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u6A21\u5F0F","aria-hidden":"true"},"#"),n(" \u6A21\u5F0F")],-1),d=n("\u6A21\u5F0F\uFF0C\u662FRust\u53E6\u4E00\u4E2A\u5F3A\u5927\u7684\u7279\u6027\u3002\u5B83\u53EF\u4EE5\u88AB\u7528\u5728"),m=s("code",null,"let",-1),b=n("\u548C"),g=s("code",null,"match",-1),h=n("\u8868\u8FBE\u5F0F\u91CC\u9762\u3002\u76F8\u4FE1\u5927\u5BB6\u5E94\u8BE5\u8FD8\u8BB0\u5F97\u6211\u4EEC\u5728"),y=n("\u590D\u5408\u7C7B\u578B"),x=n("\u4E2D\u63D0\u5230\u7684\u5173\u4E8E\u5728let\u8868\u8FBE\u5F0F\u4E2D\u89E3\u6784\u5143\u7EC4\u7684\u4F8B\u5B50\uFF0C\u5B9E\u9645\u4E0A\u8FD9\u5C31\u662F\u4E00\u4E2A\u6A21\u5F0F\u3002"),v=l(`<div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0u8</span><span class="token punctuation">,</span> <span class="token number">1u8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=</span> tup<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u800C\u4E14\u6211\u4EEC\u9700\u8981\u77E5\u9053\u7684\u662F\uFF0C\u5982\u679C\u4E00\u4E2A\u6A21\u5F0F\u4E2D\u51FA\u73B0\u4E86\u548C\u5F53\u524D\u4F5C\u7528\u57DF\u4E2D\u5DF2\u5B58\u5728\u7684\u540C\u540D\u7684\u7ED1\u5B9A\uFF0C\u90A3\u4E48\u5B83\u4F1A\u8986\u76D6\u6389\u5916\u90E8\u7684\u7ED1\u5B9A\u3002\u6BD4\u5982\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token char">&#39;c&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> c <span class="token punctuation">{</span>
    x <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;x: {} c: {}&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;x: {}&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5B83\u7684\u8F93\u51FA\u7ED3\u679C\u662F:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>x: c c: c
x: 1
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5728\u4EE5\u4E0A\u4EE3\u7801\u4E2D\uFF0Cmatch\u4F5C\u7528\u57DF\u91CC\u7684<code>x</code>\u8FD9\u4E2A\u7ED1\u5B9A\u88AB\u8986\u76D6\u6210\u4E86<code>&#39;c&#39;</code>\uFF0C\u800C\u51FA\u4E86\u8FD9\u4E2A\u4F5C\u7528\u57DF\uFF0C\u7ED1\u5B9A<code>x</code>\u53C8\u6062\u590D\u4E3A<code>1</code>\u3002\u8FD9\u548C\u53D8\u91CF\u7ED1\u5B9A\u7684\u884C\u4E3A\u662F\u4E00\u81F4\u7684\u3002</p><h2 id="\u66F4\u5F3A\u5927\u7684\u89E3\u6784" tabindex="-1"><a class="header-anchor" href="#\u66F4\u5F3A\u5927\u7684\u89E3\u6784" aria-hidden="true">#</a> \u66F4\u5F3A\u5927\u7684\u89E3\u6784</h2><p>\u5728\u4E0A\u4E00\u8282\u91CC\uFF0C\u6211\u4EEC\u521D\u6B65\u4E86\u89E3\u4E86\u6A21\u5F0F\u5339\u914D\u5728\u89E3\u6784<code>enum</code>\u65F6\u5019\u7684\u4FBF\u5229\u6027\uFF0C\u4E8B\u5B9E\u4E0A\uFF0C\u5728Rust\u4E2D\u6A21\u5F0F\u53EF\u4EE5\u88AB\u7528\u6765\u5BF9\u4EFB\u4F55\u590D\u5408\u7C7B\u578B\u8FDB\u884C\u89E3\u6784\u2014\u2014struct/tuple/enum\u3002\u73B0\u5728\u6211\u4EEC\u8981\u8BB2\u8FF0\u4E00\u4E2A\u590D\u6742\u70B9\u7684\u4F8B\u5B50\uFF0C\u5BF9<code>struct</code>\u8FDB\u884C\u89E3\u6784\u3002</p><p>\u9996\u5148\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5BF9\u4E00\u4E2A\u7ED3\u6784\u4F53\u8FDB\u884C\u6807\u51C6\u7684\u89E3\u6784\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Point</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">,</span>
    y<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> point <span class="token operator">=</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">match</span> point <span class="token punctuation">{</span>
    <span class="token class-name">Point</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span> <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;({},{})&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6700\u7EC8\uFF0C\u6211\u4EEC\u62FF\u5230\u4E86<code>Point</code>\u5185\u90E8\u7684\u503C\u3002\u6709\u4EBA\u8BF4\u4E86\uFF0C\u90A3\u6211\u60F3\u6539\u4E2A\u540D\u5B57\u600E\u4E48\u529E\uFF1F \u5F88\u7B80\u5355\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>:</code>\u6765\u5BF9\u4E00\u4E2Astruct\u7684\u5B57\u6BB5\u8FDB\u884C\u91CD\u547D\u540D\uFF0C\u5982\u4E0B:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Point</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">,</span>
    y<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> point <span class="token operator">=</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">match</span> point <span class="token punctuation">{</span>
    <span class="token class-name">Point</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> x1<span class="token punctuation">,</span> y<span class="token punctuation">:</span> y1<span class="token punctuation">}</span> <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;({},{})&quot;</span><span class="token punctuation">,</span> x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u53E6\u5916\uFF0C\u6709\u7684\u65F6\u5019\u6211\u4EEC\u5176\u5B9E\u53EA\u5BF9\u67D0\u4E9B\u5B57\u6BB5\u611F\u5174\u8DA3\uFF0C\u5C31\u53EF\u4EE5\u7528<code>..</code>\u6765\u7701\u7565\u5176\u4ED6\u5B57\u6BB5\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Point</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">,</span>
    y<span class="token punctuation">:</span> <span class="token keyword">i64</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> point <span class="token operator">=</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> point <span class="token punctuation">{</span>
    <span class="token class-name">Point</span> <span class="token punctuation">{</span> y<span class="token punctuation">,</span> <span class="token punctuation">..</span> <span class="token punctuation">}</span> <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;y is {}&quot;</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u5FFD\u7565\u548C\u5185\u5B58\u7BA1\u7406" tabindex="-1"><a class="header-anchor" href="#\u5FFD\u7565\u548C\u5185\u5B58\u7BA1\u7406" aria-hidden="true">#</a> \u5FFD\u7565\u548C\u5185\u5B58\u7BA1\u7406</h2><p>\u603B\u7ED3\u4E00\u4E0B\uFF0C\u6211\u4EEC\u9047\u5230\u4E86\u4E24\u79CD\u4E0D\u540C\u7684\u6A21\u5F0F\u5FFD\u7565\u7684\u60C5\u51B5\u2014\u2014<code>_</code>\u548C<code>..</code>\u3002\u8FD9\u91CC\u8981\u6CE8\u610F\uFF0C\u6A21\u5F0F\u5339\u914D\u4E2D\u88AB\u5FFD\u7565\u7684\u5B57\u6BB5\u662F\u4E0D\u4F1A\u88AB<code>move</code>\u7684\uFF0C\u800C\u4E14\u5B9E\u73B0<code>Copy</code>\u7684\u4E5F\u4F1A\u4F18\u5148\u88ABCopy\u800C\u4E0D\u662F\u88AB<code>move</code>\u3002</p><p>\u8BF4\u7684\u6709\u70B9\u62D7\u53E3\uFF0C\u4E0A\u4EE3\u7801\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> tuple<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">u32</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;five&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> s<span class="token punctuation">)</span> <span class="token operator">=</span> tuple<span class="token punctuation">;</span>

<span class="token comment">// \u4EE5\u4E0B\u884C\u5C06\u5BFC\u81F4\u7F16\u8BD1\u9519\u8BEF\uFF0C\u56E0\u4E3AString\u7C7B\u578B\u5E76\u672A\u5B9E\u73B0Copy, \u6240\u4EE5tuple\u88AB\u6574\u4F53move\u6389\u4E86\u3002</span>
<span class="token comment">// println!(&quot;Tuple is: {:?}&quot;, tuple);</span>

<span class="token keyword">let</span> tuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;five&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5FFD\u7565String\u7C7B\u578B\uFF0C\u800Cu32\u5B9E\u73B0\u4E86Copy\uFF0C\u5219tuple\u4E0D\u4F1A\u88ABmove</span>
<span class="token keyword">let</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token operator">=</span> tuple<span class="token punctuation">;</span>

<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Tuple is: {:?}&quot;</span><span class="token punctuation">,</span> tuple<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="\u8303\u56F4\u548C\u591A\u91CD\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u8303\u56F4\u548C\u591A\u91CD\u5339\u914D" aria-hidden="true">#</a> \u8303\u56F4\u548C\u591A\u91CD\u5339\u914D</h2><p>\u6A21\u5F0F\u5339\u914D\u53EF\u4EE5\u88AB\u7528\u6765\u5339\u914D\u5355\u79CD\u53EF\u80FD\uFF0C\u5F53\u7136\u4E5F\u5C31\u80FD\u88AB\u7528\u6765\u5339\u914D\u591A\u79CD\u60C5\u51B5\uFF1A</p><h3 id="\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#\u8303\u56F4" aria-hidden="true">#</a> \u8303\u56F4</h3><p>\u5728\u6A21\u5F0F\u5339\u914D\u4E2D\uFF0C\u5F53\u6211\u60F3\u8981\u5339\u914D\u4E00\u4E2A\u6570\u5B57(\u5B57\u7B26)\u8303\u56F4\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7528<code>...</code>\u6765\u8868\u793A\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> x <span class="token punctuation">{</span>
    <span class="token number">1</span> <span class="token punctuation">...</span> <span class="token number">10</span> <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E00\u5230\u5341&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    _ <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\u5176\u5B83&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token char">&#39;w&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> c <span class="token punctuation">{</span>
    <span class="token char">&#39;a&#39;</span> <span class="token punctuation">...</span> <span class="token char">&#39;z&#39;</span> <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C0F\u5199\u5B57\u6BCD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token char">&#39;A&#39;</span> <span class="token punctuation">...</span> <span class="token char">&#39;Z&#39;</span> <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\u5927\u5199\u5B57\u6BCD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    _ <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\u5176\u4ED6\u5B57\u7B26&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="\u591A\u91CD\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u591A\u91CD\u5339\u914D" aria-hidden="true">#</a> \u591A\u91CD\u5339\u914D</h3><p>\u5F53\u6211\u4EEC\u53EA\u662F\u5355\u7EAF\u7684\u60F3\u8981\u5339\u914D\u591A\u79CD\u60C5\u51B5\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>|</code> \u6765\u5206\u9694\u591A\u4E2A\u5339\u914D\u6761\u4EF6</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> x <span class="token punctuation">{</span>
    <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E00\u6216\u4E8C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    _ <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;\u5176\u4ED6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="ref-\u548C-ref-mut" tabindex="-1"><a class="header-anchor" href="#ref-\u548C-ref-mut" aria-hidden="true">#</a> ref \u548C ref mut</h2><p>\u524D\u9762\u6211\u4EEC\u4E86\u89E3\u5230\uFF0C\u5F53\u88AB\u6A21\u5F0F\u5339\u914D\u547D\u4E2D\u7684\u65F6\u5019\uFF0C\u672A\u5B9E\u73B0<code>Copy</code>\u7684\u7C7B\u578B\u4F1A\u88AB\u9ED8\u8BA4\u7684move\u6389\uFF0C\u56E0\u6B64\uFF0C\u539Fowner\u5C31\u4E0D\u518D\u6301\u6709\u5176\u6240\u6709\u6743\u3002\u4F46\u662F\u6709\u4E9B\u65F6\u5019\uFF0C\u6211\u4EEC\u53EA\u60F3\u8981\u4ECE\u4E2D\u62FF\u5230\u4E00\u4E2A\u53D8\u91CF\u7684\uFF08\u53EF\u53D8\uFF09\u5F15\u7528\uFF0C\u800C\u4E0D\u60F3\u5C06\u5176move\u51FA\u4F5C\u7528\u57DF\uFF0C\u600E\u4E48\u505A\u5462\uFF1F\u7B54\uFF1A\u7528<code>ref</code>\u6216\u8005<code>ref mut</code>\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> <span class="token keyword">mut</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> x <span class="token punctuation">{</span>
    <span class="token keyword">ref</span> <span class="token keyword">mut</span> mr <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;mut ref :{}&quot;</span><span class="token punctuation">,</span> mr<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5F53\u7136\u4E86\u2026\u2026\u5728let\u8868\u8FBE\u5F0F\u91CC\u4E5F\u80FD\u7528</span>
<span class="token keyword">let</span> <span class="token keyword">ref</span> <span class="token keyword">mut</span> mrx <span class="token operator">=</span> x<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u53D8\u91CF\u7ED1\u5B9A" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF\u7ED1\u5B9A" aria-hidden="true">#</a> \u53D8\u91CF\u7ED1\u5B9A</h2><p>\u5728\u6A21\u5F0F\u5339\u914D\u7684\u8FC7\u7A0B\u5185\u90E8\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7528<code>@</code>\u6765\u7ED1\u5B9A\u4E00\u4E2A\u53D8\u91CF\u540D\uFF0C\u8FD9\u5728\u590D\u6742\u7684\u6A21\u5F0F\u5339\u914D\u4E2D\u662F\u518D\u65B9\u4FBF\u4E0D\u8FC7\u7684\uFF0C\u6BD4\u5982\u4E00\u4E2A\u5177\u540D\u7684\u8303\u56F4\u5339\u914D\u5982\u4E0B\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">1u32</span><span class="token punctuation">;</span>
<span class="token keyword">match</span> x <span class="token punctuation">{</span>
    e <span class="token operator">@</span> <span class="token number">1</span> <span class="token punctuation">...</span> <span class="token number">5</span> <span class="token operator">|</span> e <span class="token operator">@</span> <span class="token number">10</span> <span class="token punctuation">...</span> <span class="token number">15</span> <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;get:{}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">,</span>
    _ <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5982\u4EE3\u7801\u6240\u793A\uFF0Ce\u7ED1\u5B9A\u4E86x\u7684\u503C\u3002</p><p>\u5F53\u7136\uFF0C\u53D8\u91CF\u7ED1\u5B9A\u662F\u4E00\u4E2A\u6781\u5176\u6709\u7528\u7684\u8BED\u6CD5\uFF0C\u4E0B\u9762\u662F\u4E00\u4E2A\u6765\u81EA\u5B98\u65B9doc\u91CC\u7684\u4F8B\u5B50\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">&quot;Steve&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> x<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">Person</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">Person</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">match</span> x <span class="token punctuation">{</span>
    <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">Person</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token keyword">ref</span> a <span class="token operator">@</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">..</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">,</span>
    _ <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8F93\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Some(&quot;Steve&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="\u540E\u7F6E\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u540E\u7F6E\u6761\u4EF6" aria-hidden="true">#</a> \u540E\u7F6E\u6761\u4EF6</h2><p>\u4E00\u4E2A\u540E\u7F6E\u7684if\u8868\u8FBE\u5F0F\u53EF\u4EE5\u88AB\u653E\u5728match\u7684\u6A21\u5F0F\u4E4B\u540E\uFF0C\u88AB\u79F0\u4E3A<code>match guards</code>\u3002\u4F8B\u5982\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

<span class="token keyword">match</span> x <span class="token punctuation">{</span>
    <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">5</span> <span class="token keyword">if</span> y <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;yes&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    _ <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;no&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u731C\u4E00\u4E0B\u4E0A\u9762\u4EE3\u7801\u7684\u8F93\u51FA\uFF1F</p><p>\u7B54\u6848\u662F<code>no</code>\u3002\u56E0\u4E3Aguard\u662F\u540E\u7F6E\u6761\u4EF6\uFF0C\u662F\u6574\u4E2A\u5339\u914D\u7684\u540E\u7F6E\u6761\u4EF6\uFF1A\u6240\u4EE5\u4E0A\u9762\u7684\u5F0F\u5B50\u8868\u8FBE\u7684\u903B\u8F91\u5B9E\u9645\u4E0A\u662F\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// \u4F2A\u4EE3\u7801\u8868\u793A
IF y AND (x IN List[4, 5])
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,43);function w(q,f){const a=p("RouterLink");return u(),t(c,null,[k,s("p",null,[d,m,b,g,h,e(a,{to:"/RustPrimer/type/compound-types.html"},{default:o(()=>[y]),_:1}),x]),v],64)}var S=r(i,[["render",w],["__file","pattern.html.vue"]]);export{S as default};
