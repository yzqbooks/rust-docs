import{r as t,a as o,b as n,d as e,F as c,c as s,e as a,o as l}from"./app.a489c551.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=s(`<h1 id="rust\u6570\u636E\u5E93\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#rust\u6570\u636E\u5E93\u64CD\u4F5C" aria-hidden="true">#</a> rust\u6570\u636E\u5E93\u64CD\u4F5C</h1><p>\u7F16\u7A0B\u65F6\uFF0C\u6211\u4EEC\u4F9D\u8D56\u6570\u636E\u5E93\u6765\u5B58\u50A8\u76F8\u5E94\u7684\u6570\u636E\uFF0C\u5F88\u591A\u7F16\u7A0B\u8BED\u8A00\u90FD\u652F\u6301\u5BF9\u6570\u636E\u5E93\u7684\u64CD\u4F5C\uFF0C\u6240\u4EE5\u5F53\u7136\u53EF\u4EE5\u4F7F\u7528Rust\u64CD\u4F5C\u6570\u636E\u5E93\u3002</p><p>\u4E0D\u8FC7\u5728\u6211\u81EA\u5DF1\u64CD\u4F5C\u65F6\uFF0C\u53D1\u73B0\u5F88\u591A\u95EE\u9898\uFF0C\u4E3B\u8981\u56E0\u4E3A\u6211\u4E0D\u4E86\u89E3Rust\u5728\u64CD\u4F5C\u6570\u636E\u5E93\u65F6\uFF0C\u5E94\u8BE5\u6CE8\u610F\u7684\u4E8B\u60C5\uFF0C\u4ECE\u800C\u6D6A\u8D39\u4E86\u5F88\u591A\u7684\u65F6\u95F4\uFF0C\u5728\u8FDB\u884C\u6570\u636E\u67E5\u8BE2\u65F6\u3002 \u5177\u4F53\u9047\u5230\u7684\u5751\uFF0C\u6211\u4F1A\u505A\u4E00\u4E9B\u6F14\u793A\uFF0C\u4ECE\u800C\u8BA9\u5927\u5BB6\u907F\u514D\u8FD9\u4E9B\u60C5\u51B5\u3002</p><p>\u9996\u5148\u4F7F\u7528Rust\u64CD\u4F5CPostgreSQL,\u56E0\u4E3APostgreSQL\u662F\u6211\u6700\u559C\u6B22\u7684\u6570\u636E\u5E93\u3002</p><p>\u9996\u5148\u521B\u5EFA\u65B0\u9879\u76EE <code>cargo new db --bin</code></p><p>\u5728cargo.toml\u4E2D\u6DFB\u52A0 <code>postgres</code> \u5982\u4E0B\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token punctuation">[</span>package<span class="token punctuation">]</span>
name <span class="token operator">=</span> <span class="token string">&quot;db&quot;</span>
version <span class="token operator">=</span> <span class="token string">&quot;0.1.0&quot;</span>
authors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;vagrant&quot;</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span>dependencies<span class="token punctuation">]</span>
postgres<span class="token operator">=</span><span class="token string">&quot;*&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,7),k=a("\u5F53\u7136\u6211\u4EEC\u8FD8\u662F\u8FDB\u884C\u6700\u7B80\u5355\u7684\u64CD\u4F5C\uFF0C\u76F4\u63A5\u7C98\u8D34\u590D\u5236\uFF0C"),b={href:"https://github.com/sfackler/rust-postgres#overview",target:"_blank",rel:"noopener noreferrer"},m=a("\u4EE3\u7801\u6765\u6E90"),d=s(`<div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>
<span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">postgres</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">postgres<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Connection</span><span class="token punctuation">,</span> <span class="token class-name">SslMode</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token type-definition class-name">Person</span> <span class="token punctuation">{</span>
    id<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    data<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;&gt;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> conn <span class="token operator">=</span> <span class="token class-name">Connection</span><span class="token punctuation">::</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&quot;postgres://postgres@localhost&quot;</span><span class="token punctuation">,</span> <span class="token class-name">SslMode</span><span class="token punctuation">::</span><span class="token class-name">None</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    conn<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token string">&quot;CREATE TABLE person (
                    id              SERIAL PRIMARY KEY,
                    name            VARCHAR NOT NULL,
                    data            BYTEA
                  )&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> me <span class="token operator">=</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
        id<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">&quot;Steven&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        data<span class="token punctuation">:</span> <span class="token class-name">None</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    conn<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token string">&quot;INSERT INTO person (name, data) VALUES ($1, $2)&quot;</span><span class="token punctuation">,</span>
                 <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span>me<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token operator">&amp;</span>me<span class="token punctuation">.</span>data<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token operator">&amp;</span>conn<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT id, name, data FROM person&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
            id<span class="token punctuation">:</span> row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            name<span class="token punctuation">:</span> row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            data<span class="token punctuation">:</span> row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Found person {}&quot;</span><span class="token punctuation">,</span> person<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>\u8FD9\u4E9B\u7B80\u5355\u7684\uFF0C\u5F53\u7136\u4E0D\u662F\u6211\u4EEC\u60F3\u8981\u7684\u4E1C\u897F\uFF0C\u6211\u4EEC\u60F3\u8981\u7684\u662F\u80FD\u591F\u8FDB\u884C\u4E00\u4E9B\u5206\u5C42\uFF0C\u4E5F\u5C31\u662F \u57FA\u672C\u7684\u4E00\u4E9B\u51FD\u6570\u903B\u8F91\u5212\u5206\uFF0C\u800C\u4E0D\u662F\u5728\u4E00\u4E2Amain\u51FD\u6570\u4E2D\uFF0C\u5B8C\u6210\u6240\u6709\u7684\u4E00\u5207\u3002</p><p>##\u521B\u5EFAlib.rs\u6587\u4EF6</p><p>\u4ECE\u4E0A\u5230\u4E0B\u6765\u770B\u6587\u4EF6\uFF1A</p><ol><li>\u9996\u5148\u5BFC\u5165postgres\u7684\u5404\u79CD\u5E93</li><li>\u521B\u5EFA\u4E00\u4E2APerson \u7684struct\uFF0C\u6309\u7167\u9700\u6C42\u7684\u5B57\u6BB5\u548C\u7C7B\u578B\u3002</li><li>\u521B\u5EFA\u4E00\u4E2A\u8FDE\u63A5\u51FD\u6570\uFF0C\u8FD4\u56DE\u8FDE\u63A5\u5BF9\u8C61\u3002</li><li>\u521B\u5EFA\u4E00\u4E2A\u63D2\u5165\u51FD\u6570\uFF0C\u7528\u6765\u63D2\u5165\u6570\u636E</li><li>\u521B\u5EFA\u4E00\u4E2A\u67E5\u8BE2\u51FD\u6570\uFF0C\u7528\u6765\u67E5\u8BE2\u6570\u636E</li><li>\u521B\u5EFA\u4E00\u4E2A\u67E5\u8BE2\u51FD\u6570\uFF0C\u7528\u6765\u67E5\u8BE2\u6240\u6709\u7684\u6570\u636E\u3002</li></ol><p>\u5F53\u7136\u8FD9\u4E9B\u51FD\u6570\u90FD\u662F\u6709\u4E00\u5B9A\u7684\u529F\u80FD\u5C40\u9650\u6027\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>
<span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">postgres</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">postgres<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Connection</span><span class="token punctuation">,</span> <span class="token class-name">SslMode</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">postgres<span class="token punctuation">::</span>types<span class="token punctuation">::</span></span><span class="token class-name">FromSql</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">postgres<span class="token punctuation">::</span></span><span class="token class-name">Result</span> <span class="token keyword">as</span> <span class="token class-name">PgResult</span><span class="token punctuation">;</span>


<span class="token keyword">struct</span> <span class="token type-definition class-name">Person</span> <span class="token punctuation">{</span>
    id<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    data<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;&gt;</span>
<span class="token punctuation">}</span>


<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Connection</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> dsn <span class="token operator">=</span> <span class="token string">&quot;postgresql://postgres:2015@localhost/rust_example&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Connection</span><span class="token punctuation">::</span><span class="token function">connect</span><span class="token punctuation">(</span>dsn<span class="token punctuation">,</span> <span class="token class-name">SslMode</span><span class="token punctuation">::</span><span class="token class-name">None</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">insert_info</span><span class="token punctuation">(</span>conn <span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Connection</span><span class="token punctuation">,</span>title <span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">,</span> body<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token keyword">let</span> stmt <span class="token operator">=</span> <span class="token keyword">match</span> conn<span class="token punctuation">.</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string">&quot;insert into blog (title, body) values ($1, $2)&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>stmt<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> stmt<span class="token punctuation">,</span>
        <span class="token class-name">Err</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Preparing query failed: {:?}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
        stmt<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span>title<span class="token punctuation">,</span> <span class="token operator">&amp;</span>body<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;Inserting blogposts failed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">query</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>conn<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Connection</span><span class="token punctuation">,</span>query<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span><span class="token class-name">PgResult</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span>
        <span class="token keyword">where</span> <span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">FromSql</span> <span class="token punctuation">{</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Executing query: {}&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> stmt <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">!</span><span class="token punctuation">(</span>conn<span class="token punctuation">.</span><span class="token function">prepare</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> rows <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">!</span><span class="token punctuation">(</span>stmt<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token operator">&amp;</span>rows<span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> row <span class="token operator">=</span> <span class="token operator">&amp;</span>rows<span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//rows.iter().next().unwrap()</span>
            row<span class="token punctuation">.</span><span class="token function">get_opt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>

<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">query_all</span><span class="token punctuation">(</span>conn<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Connection</span><span class="token punctuation">,</span>query<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Executing query: {}&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token operator">&amp;</span>conn<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>
                    id<span class="token punctuation">:</span> row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    name<span class="token punctuation">:</span> row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    data<span class="token punctuation">:</span> row<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Found person {}&quot;</span><span class="token punctuation">,</span> person<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><p>\u7136\u540E\u5728main.rs \u4E2D\u8C03\u7528\u76F8\u5E94\u7684\u51FD\u6570\u4EE3\u7801\u5982\u4E0B</p><ol><li>extern db ,\u5F15\u5165db\uFF0C\u4E5F\u5C31\u662F\u5C06\u9879\u76EE\u672C\u8EAB\u5F15\u5165</li><li>use db \u4F7F\u7528db\uFF0C\u4E2D\u7684\u53EF\u4EE5\u88AB\u5F15\u5165\u7684\u51FD\u6570</li><li>\u5B9A\u4E49Blog,\u7531\u4E8E\u4E2A\u4EBA\u4F7F\u7528blog\u8868\uFF0C\u662F\u81EA\u5DF1\u521B\u5EFA\uFF0C\u6240\u4EE5\u5982\u679C\u62A5\u9519\u8BF4\u4E0D\u5B58\u5728\u8868\uFF0C\u9700\u8981\u4F60\u81EA\u5DF1\u53BB\u521B\u5EFA</li><li>\u4F7F\u7528lib\u4E2D\u5B9A\u4E49\u7684\u51FD\u6570\uFF0C\u8FDB\u884C\u6700\u57FA\u672C\u7684\u4E00\u4E9B\u64CD\u4F5C</li></ol><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">postgres</span><span class="token punctuation">;</span>
<span class="token keyword">extern</span> <span class="token keyword">crate</span> <span class="token module-declaration namespace">db</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">postgres<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Connection</span><span class="token punctuation">,</span> <span class="token class-name">SslMode</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">db<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token type-definition class-name">Blog</span> <span class="token punctuation">{</span>
    title<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    body<span class="token punctuation">:</span>  <span class="token class-name">String</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> conn<span class="token punctuation">:</span><span class="token class-name">Connection</span><span class="token operator">=</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> blog <span class="token operator">=</span> <span class="token class-name">Blog</span><span class="token punctuation">{</span>
        title<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        body<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> title <span class="token operator">=</span> blog<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> body <span class="token operator">=</span> blog<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">insert_info</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>conn<span class="token punctuation">,</span><span class="token operator">&amp;</span>title<span class="token punctuation">,</span><span class="token operator">&amp;</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token function">query</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>conn<span class="token punctuation">,</span><span class="token string">&quot;select * from blog&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> sql <span class="token operator">=</span> <span class="token string">&quot;select * from person&quot;</span><span class="token punctuation">;</span>
    <span class="token function">query_all</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>conn<span class="token punctuation">,</span><span class="token operator">&amp;</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u81EA\u5DF1\u9047\u5230\u7684\u5751</p><ul><li><p>\u521B\u5EFA\u8FDE\u63A5\u51FD\u6570\u65F6\uFF0C\u8FDE\u63A5\u5FC5\u987B\u6709\u4E00\u4E2A\u8FD4\u56DE\u503C\uFF0C\u6240\u4EE5\u5FC5\u987B\u6307\u5B9A\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\uFF0C \u5BF9\u4E8E\u4E00\u4E2A\u5199Python\u7684\u4EBA\u800C\u8A00\uFF0C\u6211\u89C9\u5F97\u662F\u75DB\u82E6\u7684\uFF0C\u6211\u60F3\u6309\u7167\u5B98\u65B9\u7684\u5199\u6CD5match \u4E00\u4E0B\uFF0C\u53D1\u73B0\u53EF\u80FD\u4EA7\u751F\u591A\u4E2A\u8FD4\u56DE\u503C\u3002\u5728\u7F16\u8BD1\u65F6\u76F4\u63A5\u65E0\u6CD5\u901A\u8FC7\u7F16\u8BD1\uFF0C\u6240\u4EE5\u6700\u7EC8 \u4F7F\u7528\u4E86unwrap,\u89E3\u51B3\u95EE\u9898\uFF0C\u4E0D\u8FC7\u6211\u8FD8\u662F\u6CA1\u6709\u5B66\u4F1A\uFF0C\u51FD\u6570\u591A\u503C\u8FD4\u56DE\u65F6\u6211\u5982\u4F55 \u5B9A\u4E49\u8FD4\u56DE\u503C</p></li><li><p>\u5728\u4F7F\u7528<code>&amp;conn.query(query,&amp;[]).unwrap()</code>\u65F6\uFF0C\u6211\u6309\u7167\u6587\u6863\u64CD\u4F5C\uFF0C\u6587\u6863\u8BF4 \u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u53EF\u8FED\u4EE3\u7684\u6570\u636E\uFF0C\u90A3\u4E5F\u5C31\u662F\u8BF4\uFF0C\u6211\u53EF\u4EE5\u4F7F\u7528for\u5FAA\u73AF\uFF0C\u5C06\u6570\u636E\u6253\u5370\uFF0C \u4F46\u662F\u53D1\u73B0\u600E\u4E48\u4E5F\u4E0D\u80FD\u5B9E\u73B0\uFF1A</p></li></ul><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>
<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">query_all</span><span class="token punctuation">(</span>conn<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Connection</span><span class="token punctuation">,</span>query<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Executing query: {}&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token operator">&amp;</span>conn<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Found person {:?}&quot;</span><span class="token punctuation">,</span> row<span class="token punctuation">.</span><span class="token function">get_opt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u62A5\u9519\u5982\u4E0B\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>vagrant<span class="token operator">@</span>ubuntu<span class="token operator">-</span><span class="token number">14</span><span class="token punctuation">:</span>~<span class="token operator">/</span>tmp<span class="token operator">/</span>test<span class="token operator">/</span>rustprimer<span class="token operator">/</span>db$ cargo run
   <span class="token class-name">Compiling</span> db v0<span class="token number">.1</span><span class="token punctuation">.</span><span class="token number">0</span> <span class="token punctuation">(</span>file<span class="token punctuation">:</span><span class="token operator">/</span><span class="token comment">//home/vagrant/tmp/test/rustprimer/db)</span>
src<span class="token operator">/</span>lib<span class="token punctuation">.</span>rs<span class="token punctuation">:</span><span class="token number">53</span><span class="token punctuation">:</span><span class="token number">37</span><span class="token punctuation">:</span> <span class="token number">53</span><span class="token punctuation">:</span><span class="token number">47</span> error<span class="token punctuation">:</span> unable to infer enough <span class="token keyword">type</span> <span class="token type-definition class-name">information</span> about \`_\`<span class="token punctuation">;</span> <span class="token keyword">type</span> <span class="token type-definition class-name">annotations</span> or generic parameter binding required <span class="token punctuation">[</span><span class="token constant">E0282</span><span class="token punctuation">]</span>
src<span class="token operator">/</span>lib<span class="token punctuation">.</span>rs<span class="token punctuation">:</span><span class="token number">53</span>   <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Found person {:?}&quot;</span><span class="token punctuation">,</span> row<span class="token punctuation">.</span><span class="token function">get_opt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                                  <span class="token operator">^</span>~~~~~~~~~
<span class="token operator">&lt;</span>std macros<span class="token operator">&gt;</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">25</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">56</span> note<span class="token punctuation">:</span> <span class="token keyword">in</span> this expansion of <span class="token macro property">format_args!</span>
<span class="token operator">&lt;</span>std macros<span class="token operator">&gt;</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token number">54</span> note<span class="token punctuation">:</span> <span class="token keyword">in</span> this expansion of <span class="token macro property">print!</span> <span class="token punctuation">(</span>defined <span class="token keyword">in</span> <span class="token operator">&lt;</span>std macros<span class="token operator">&gt;</span><span class="token punctuation">)</span>
src<span class="token operator">/</span>lib<span class="token punctuation">.</span>rs<span class="token punctuation">:</span><span class="token number">53</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span> <span class="token number">53</span><span class="token punctuation">:</span><span class="token number">49</span> note<span class="token punctuation">:</span> <span class="token keyword">in</span> this expansion of <span class="token macro property">println!</span> <span class="token punctuation">(</span>defined <span class="token keyword">in</span> <span class="token operator">&lt;</span>std macros<span class="token operator">&gt;</span><span class="token punctuation">)</span>
src<span class="token operator">/</span>lib<span class="token punctuation">.</span>rs<span class="token punctuation">:</span><span class="token number">53</span><span class="token punctuation">:</span><span class="token number">37</span><span class="token punctuation">:</span> <span class="token number">53</span><span class="token punctuation">:</span><span class="token number">47</span> help<span class="token punctuation">:</span> run \`rustc <span class="token operator">-</span><span class="token operator">-</span>explain <span class="token constant">E0282</span>\` to see a detailed explanation
error<span class="token punctuation">:</span> aborting due to previous error
<span class="token class-name">Could</span> not compile \`db\`<span class="token punctuation">.</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u7136\u540E\u53BB\u67E5\u770B\u4E86\u5173\u4E8Epostgres\u6A21\u5757\u7684\u6240\u6709\u51FD\u6570\uFF0C\u5C1D\u8BD5\u4E86\u65E0\u6570\u79CD\u529E\u6CD5\uFF0C\u4F9D\u65E7\u6CA1\u6709\u89E3\u51B3\u3002</p><p>\u53EF\u80FD\u81EA\u5DF1\u773C\u9AD8\u624B\u4F4E\uFF0C\u5982\u679C\u4ECE\u5934\u518D\u628ARust\u7684\u76F8\u5173\u6559\u7A0B\u770B\u4E00\u4E0B\uFF0C\u53EF\u80FD\u5F88\u65E9\u5C31\u53D1\u73B0\u8FD9\u4E2A\u95EE\u9898\uFF0C \u4E5F\u6709\u53EF\u80FD\u662F\u56E0\u4E3A\u4E60\u60EF\u4E86\u5199Python\uFF0C\u5BFC\u81F4\u81EA\u5DF1\u4F7F\u7528\u56FA\u6709\u7684\u601D\u7EF4\u6765\u770B\u5F85\u95EE\u9898\u548C\u94BB\u725B\u89D2\u5C16\uFF0C\u624D \u5BFC\u81F4\u51FA\u73B0\u8FD9\u6837\u7684\u95EE\u9898\uFF0C\u6D6A\u8D39\u5F88\u591A\u7684\u65F6\u95F4\u3002</p><ul><li>\u6539\u53D8\u601D\u7EF4\uFF0C\u628A\u81EA\u5DF1\u5F53\u4F5C\u4E00\u4E2A\u5168\u65B0\u7684\u65B0\u624B\uFF0C\u65E2\u8981\u5229\u7528\u5DF2\u6709\u7684\u601D\u60F3\u6765\u5B66\u4E60\u65B0\u7684\u8BED\u8A00\uFF0C\u540C\u6837\u4E0D\u8981 \u88AB\u81EA\u5DF1\u5F88\u7CBE\u901A\u7684\u8BED\u8A00\uFF0C\u56FA\u5316\u81EA\u5DF1\u7684\u601D\u7EF4\u3002</li></ul>`,18);function g(y,f){const p=t("ExternalLinkIcon");return l(),o(c,null,[i,n("p",null,[k,n("a",b,[m,e(p)])]),d],64)}var _=u(r,[["render",g],["__file","index.html.vue"]]);export{_ as default};
