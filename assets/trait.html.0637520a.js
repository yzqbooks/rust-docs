import{c as n}from"./app.a489c551.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027" aria-hidden="true">#</a> \u7279\u6027</h1><h2 id="\u7279\u6027\u4E0E\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027\u4E0E\u63A5\u53E3" aria-hidden="true">#</a> \u7279\u6027\u4E0E\u63A5\u53E3</h2><p>\u4E3A\u4E86\u63CF\u8FF0\u7C7B\u578B\u53EF\u4EE5\u5B9E\u73B0\u7684\u62BD\u8C61\u63A5\u53E3 (abstract interface)\uFF0C Rust\u5F15\u5165\u4E86\u7279\u6027 (trait) \u6765\u5B9A\u4E49\u51FD\u6570\u7C7B\u578B\u7B7E\u540D (function type signature)\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">trait</span> <span class="token type-definition class-name">HasArea</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">area</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">f64</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">struct</span> <span class="token type-definition class-name">Circle</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    y<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    radius<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">HasArea</span> <span class="token keyword">for</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">area</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">f64</span> <span class="token punctuation">{</span>
        <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token keyword">f64</span><span class="token punctuation">::</span><span class="token namespace">consts<span class="token punctuation">::</span></span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>radius <span class="token operator">*</span> <span class="token keyword">self</span><span class="token punctuation">.</span>radius<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">struct</span> <span class="token type-definition class-name">Square</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    y<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    side<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">HasArea</span> <span class="token keyword">for</span> <span class="token class-name">Square</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">area</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">f64</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>side <span class="token operator">*</span> <span class="token keyword">self</span><span class="token punctuation">.</span>side
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">print_area</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">HasArea</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>shape<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;This shape has an area of {}&quot;</span><span class="token punctuation">,</span> shape<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u5176\u4E2D\u51FD\u6570<code>print_area()</code>\u4E2D\u7684\u6CDB\u578B\u53C2\u6570<code>T</code>\u88AB\u6DFB\u52A0\u4E86\u4E00\u4E2A\u540D\u4E3A<code>HasArea</code>\u7684\u7279\u6027\u7EA6\u675F (trait constraint)\uFF0C \u7528\u4EE5\u786E\u4FDD\u4EFB\u4F55\u5B9E\u73B0\u4E86<code>HasArea</code>\u7684\u7C7B\u578B\u5C06\u62E5\u6709\u4E00\u4E2A<code>.area()</code>\u65B9\u6CD5\u3002 \u5982\u679C\u9700\u8981\u591A\u4E2A\u7279\u6027\u9650\u5B9A (multiple trait bounds)\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>+</code>\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>fmt<span class="token punctuation">::</span></span><span class="token class-name">Debug</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Clone</span><span class="token punctuation">,</span> <span class="token class-name">K</span><span class="token punctuation">:</span> <span class="token class-name">Clone</span> <span class="token operator">+</span> <span class="token class-name">Debug</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token class-name">K</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    y<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">bar</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">K</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token class-name">K</span><span class="token punctuation">)</span>
    <span class="token keyword">where</span> <span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Clone</span><span class="token punctuation">,</span>
          <span class="token class-name">K</span><span class="token punctuation">:</span> <span class="token class-name">Clone</span> <span class="token operator">+</span> <span class="token class-name">Debug</span>
<span class="token punctuation">{</span>
    x<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    y<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u5176\u4E2D\u7B2C\u4E8C\u4E2A\u4F8B\u5B50\u4F7F\u7528\u4E86\u66F4\u7075\u6D3B\u7684<code>where</code>\u4ECE\u53E5\uFF0C\u5B83\u8FD8\u5141\u8BB8\u9650\u5B9A\u7684\u5DE6\u4FA7\u53EF\u4EE5\u662F\u4EFB\u610F\u7C7B\u578B\uFF0C \u800C\u4E0D\u4EC5\u4EC5\u662F\u7C7B\u578B\u53C2\u6570\u3002</p><p>\u5B9A\u4E49\u5728\u7279\u6027\u4E2D\u7684\u65B9\u6CD5\u79F0\u4E3A\u9ED8\u8BA4\u65B9\u6CD5 (default method)\uFF0C\u53EF\u4EE5\u88AB\u8BE5\u7279\u6027\u7684\u5B9E\u73B0\u8986\u76D6\u3002 \u6B64\u5916\uFF0C\u7279\u6027\u4E4B\u95F4\u4E5F\u53EF\u4EE5\u5B58\u5728\u7EE7\u627F (inheritance)\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">trait</span> <span class="token type-definition class-name">Foo</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// default method</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">bar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;We called bar.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// inheritance</span>
<span class="token keyword">trait</span> <span class="token type-definition class-name">FooBar</span> <span class="token punctuation">:</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">foobar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">struct</span> <span class="token type-definition class-name">Baz</span><span class="token punctuation">;</span>

<span class="token keyword">impl</span> <span class="token class-name">Foo</span> <span class="token keyword">for</span> <span class="token class-name">Baz</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">FooBar</span> <span class="token keyword">for</span> <span class="token class-name">Baz</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">foobar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;foobar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u5982\u679C\u4E24\u4E2A\u4E0D\u540C\u7279\u6027\u7684\u65B9\u6CD5\u5177\u6709\u76F8\u540C\u7684\u540D\u79F0\uFF0C\u53EF\u4EE5\u4F7F\u7528\u901A\u7528\u51FD\u6570\u8C03\u7528\u8BED\u6CD5 (universal function call syntax)\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// short-hand form</span>
<span class="token class-name">Trait</span><span class="token punctuation">::</span><span class="token function">method</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// expanded form</span>
<span class="token operator">&lt;</span><span class="token class-name">Type</span> <span class="token keyword">as</span> <span class="token class-name">Trait</span><span class="token operator">&gt;</span><span class="token punctuation">::</span><span class="token function">method</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5173\u4E8E\u5B9E\u73B0\u7279\u6027\u7684\u51E0\u6761\u9650\u5236\uFF1A</p><ul><li>\u5982\u679C\u4E00\u4E2A\u7279\u6027\u4E0D\u5728\u5F53\u524D\u4F5C\u7528\u57DF\u5185\uFF0C\u5B83\u5C31\u4E0D\u80FD\u88AB\u5B9E\u73B0\u3002</li><li>\u4E0D\u7BA1\u662F\u7279\u6027\u8FD8\u662F<code>impl</code>\uFF0C\u90FD\u53EA\u80FD\u5728\u5F53\u524D\u7684\u5305\u88C5\u7BB1\u5185\u8D77\u4F5C\u7528\u3002</li><li>\u5E26\u6709\u7279\u6027\u7EA6\u675F\u7684\u6CDB\u578B\u51FD\u6570\u4F7F\u7528\u5355\u6001\u5316\u5B9E\u73B0 (monomorphization)\uFF0C \u6240\u4EE5\u5B83\u662F\u9759\u6001\u6D3E\u5206\u7684 (statically dispatched)\u3002</li></ul><p>\u4E0B\u9762\u5217\u4E3E\u51E0\u4E2A\u975E\u5E38\u6709\u7528\u7684\u6807\u51C6\u5E93\u7279\u6027\uFF1A</p><ul><li><code>Drop</code>\u63D0\u4F9B\u4E86\u5F53\u4E00\u4E2A\u503C\u9000\u51FA\u4F5C\u7528\u57DF\u540E\u6267\u884C\u4EE3\u7801\u7684\u529F\u80FD\uFF0C\u5B83\u53EA\u6709\u4E00\u4E2A<code>drop(&amp;mut self)</code>\u65B9\u6CD5\u3002</li><li><code>Borrow</code>\u7528\u4E8E\u521B\u5EFA\u4E00\u4E2A\u6570\u636E\u7ED3\u6784\u65F6\u628A\u62E5\u6709\u548C\u501F\u7528\u7684\u503C\u770B\u4F5C\u7B49\u540C\u3002</li><li><code>AsRef</code>\u7528\u4E8E\u5728\u6CDB\u578B\u4E2D\u628A\u4E00\u4E2A\u503C\u8F6C\u6362\u4E3A\u5F15\u7528\u3002</li><li><code>Deref&lt;Target=T&gt;</code>\u7528\u4E8E\u628A<code>&amp;U</code>\u7C7B\u578B\u7684\u503C\u81EA\u52A8\u8F6C\u6362\u4E3A<code>&amp;T</code>\u7C7B\u578B\u3002</li><li><code>Iterator</code>\u7528\u4E8E\u5728\u96C6\u5408 (collection) \u548C\u60F0\u6027\u503C\u751F\u6210\u5668 (lazy value generator) \u4E0A\u5B9E\u73B0\u8FED\u4EE3\u5668\u3002</li><li><code>Sized</code>\u7528\u4E8E\u6807\u8BB0\u8FD0\u884C\u65F6\u957F\u5EA6\u56FA\u5B9A\u7684\u7C7B\u578B\uFF0C\u800C\u4E0D\u5B9A\u957F\u7684\u5207\u7247\u548C\u7279\u6027\u5FC5\u987B\u653E\u5728\u6307\u9488\u540E\u9762\u4F7F\u5176\u8FD0\u884C\u65F6\u957F\u5EA6\u5DF2\u77E5\uFF0C \u6BD4\u5982<code>&amp;[T]</code>\u548C<code>Box&lt;Trait&gt;</code>\u3002</li></ul><h2 id="\u6CDB\u578B\u548C\u591A\u6001" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B\u548C\u591A\u6001" aria-hidden="true">#</a> \u6CDB\u578B\u548C\u591A\u6001</h2><p>\u6CDB\u578B (generics) \u5728\u7C7B\u578B\u7406\u8BBA\u4E2D\u79F0\u4F5C\u53C2\u6570\u591A\u6001 (parametric polymorphism)\uFF0C \u610F\u4E3A\u5BF9\u4E8E\u7ED9\u5B9A\u53C2\u6570\u53EF\u4EE5\u6709\u591A\u79CD\u5F62\u5F0F\u7684\u51FD\u6570\u6216\u7C7B\u578B\u3002\u5148\u770BRust\u4E2D\u7684\u4E00\u4E2A\u6CDB\u578B\u4F8B\u5B50\uFF1A</p><p>Option\u5728rust\u6807\u51C6\u5E93\u4E2D\u7684\u5B9A\u4E49:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">enum</span> <span class="token type-definition class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token class-name">None</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Option\u7684\u5178\u578B\u7528\u6CD5:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> x<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> y<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token keyword">f64</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token number">5.0f64</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5176\u4E2D<code>&lt;T&gt;</code>\u90E8\u5206\u8868\u660E\u5B83\u662F\u4E00\u4E2A\u6CDB\u578B\u6570\u636E\u7C7B\u578B\u3002\u5F53\u7136\uFF0C\u6CDB\u578B\u53C2\u6570\u4E5F\u53EF\u4EE5\u7528\u4E8E\u51FD\u6570\u53C2\u6570\u548C\u7ED3\u6784\u4F53\u57DF\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// generic functions</span>
<span class="token keyword">fn</span> <span class="token function-definition function">make_pair</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">U</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>a<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">,</span> b<span class="token punctuation">:</span> <span class="token class-name">U</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">U</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> couple <span class="token operator">=</span> <span class="token function">make_pair</span><span class="token punctuation">(</span><span class="token string">&quot;man&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;female&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// generic structs</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Point</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">,</span>
    y<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> int_origin <span class="token operator">=</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> float_origin <span class="token operator">=</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u5BF9\u4E8E\u591A\u6001\u51FD\u6570\uFF0C\u5B58\u5728\u4E24\u79CD\u6D3E\u5206 (dispatch) \u673A\u5236\uFF1A\u9759\u6001\u6D3E\u5206\u548C\u52A8\u6001\u6D3E\u5206\u3002 \u524D\u8005\u7C7B\u4F3C\u4E8EC++\u7684\u6A21\u677F\uFF0CRust\u4F1A\u751F\u6210\u9002\u7528\u4E8E\u6307\u5B9A\u7C7B\u578B\u7684\u7279\u6B8A\u51FD\u6570\uFF0C\u7136\u540E\u5728\u88AB\u8C03\u7528\u7684\u4F4D\u7F6E\u8FDB\u884C\u66FF\u6362\uFF0C \u597D\u5904\u662F\u5141\u8BB8\u51FD\u6570\u88AB\u5185\u8054\u8C03\u7528\uFF0C\u8FD0\u884C\u6BD4\u8F83\u5FEB\uFF0C\u4F46\u662F\u4F1A\u5BFC\u81F4\u4EE3\u7801\u81A8\u80C0 (code bloat)\uFF1B \u540E\u8005\u7C7B\u4F3C\u4E8EJava\u6216Go\u7684<code>interface</code>\uFF0CRust\u901A\u8FC7\u5F15\u5165\u7279\u6027\u5BF9\u8C61 (trait object) \u6765\u5B9E\u73B0\uFF0C \u5728\u8FD0\u884C\u671F\u67E5\u627E\u865A\u8868 (vtable) \u6765\u9009\u62E9\u6267\u884C\u7684\u65B9\u6CD5\u3002\u7279\u6027\u5BF9\u8C61<code>&amp;Foo</code>\u5177\u6709\u548C\u7279\u6027<code>Foo</code>\u76F8\u540C\u7684\u540D\u79F0\uFF0C \u901A\u8FC7\u8F6C\u6362 (casting) \u6216\u8005\u5F3A\u5236\u591A\u6001\u5316 (coercing) \u4E00\u4E2A\u6307\u5411\u5177\u4F53\u7C7B\u578B\u7684\u6307\u9488\u6765\u521B\u5EFA\u3002</p><p>\u5F53\u7136\uFF0C\u7279\u6027\u4E5F\u53EF\u4EE5\u63A5\u53D7\u6CDB\u578B\u53C2\u6570\u3002\u4F46\u662F\uFF0C\u5F80\u5F80\u66F4\u597D\u7684\u5904\u7406\u65B9\u5F0F\u662F\u4F7F\u7528\u5173\u8054\u7C7B\u578B (associated type)\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// use generic parameters</span>
<span class="token keyword">trait</span> <span class="token type-definition class-name">Graph</span><span class="token operator">&lt;</span><span class="token class-name">N</span><span class="token punctuation">,</span> <span class="token class-name">E</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">has_edge</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token class-name">N</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token class-name">N</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span><span class="token punctuation">;</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">edges</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token class-name">N</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">E</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">distance</span><span class="token operator">&lt;</span><span class="token class-name">N</span><span class="token punctuation">,</span> <span class="token class-name">E</span><span class="token punctuation">,</span> <span class="token class-name">G</span><span class="token punctuation">:</span> <span class="token class-name">Graph</span><span class="token operator">&lt;</span><span class="token class-name">N</span><span class="token punctuation">,</span> <span class="token class-name">E</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span>graph<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">G</span><span class="token punctuation">,</span> start<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">N</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">N</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">u32</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>

<span class="token comment">// use associated types</span>
<span class="token keyword">trait</span> <span class="token type-definition class-name">Graph</span> <span class="token punctuation">{</span>
    <span class="token keyword">type</span> <span class="token type-definition class-name">N</span><span class="token punctuation">;</span>
    <span class="token keyword">type</span> <span class="token type-definition class-name">E</span><span class="token punctuation">;</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">has_edge</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token class-name">N</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token class-name">N</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span><span class="token punctuation">;</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">edges</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token class-name">N</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token class-name">E</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">distance</span><span class="token operator">&lt;</span><span class="token class-name">G</span><span class="token punctuation">:</span> <span class="token class-name">Graph</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>graph<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">G</span><span class="token punctuation">,</span> start<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">G</span><span class="token punctuation">::</span><span class="token class-name">N</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">G</span><span class="token punctuation">::</span><span class="token class-name">N</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> uint <span class="token punctuation">{</span>

<span class="token punctuation">}</span>

<span class="token keyword">struct</span> <span class="token type-definition class-name">Node</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token type-definition class-name">Edge</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token type-definition class-name">SimpleGraph</span><span class="token punctuation">;</span>

<span class="token keyword">impl</span> <span class="token class-name">Graph</span> <span class="token keyword">for</span> <span class="token class-name">SimpleGraph</span> <span class="token punctuation">{</span>
    <span class="token keyword">type</span> <span class="token type-definition class-name">N</span> <span class="token operator">=</span> <span class="token class-name">Node</span><span class="token punctuation">;</span>
    <span class="token keyword">type</span> <span class="token type-definition class-name">E</span> <span class="token operator">=</span> <span class="token class-name">Edge</span><span class="token punctuation">;</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">has_edge</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> n1<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Node</span><span class="token punctuation">,</span> n2<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Node</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">edges</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Node</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">Edge</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> graph <span class="token operator">=</span> <span class="token class-name">SimpleGraph</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> object <span class="token operator">=</span> <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>graph<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">Graph</span><span class="token operator">&lt;</span><span class="token class-name">N</span><span class="token operator">=</span><span class="token class-name">Node</span><span class="token punctuation">,</span> <span class="token class-name">E</span><span class="token operator">=</span><span class="token class-name">Edge</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div>`,26);function t(e,o){return p}var u=s(a,[["render",t],["__file","trait.html.vue"]]);export{u as default};
