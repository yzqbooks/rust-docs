"use strict";(self.webpackChunkrust_docs=self.webpackChunkrust_docs||[]).push([[6888],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=p(t),m=a,k=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return t?r.createElement(k,l(l({ref:n},s),{},{components:t})):r.createElement(k,l({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7502:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),l=["components"],o={},c=void 0,p={unversionedId:"concurrency-parallel-thread/share-memory",id:"concurrency-parallel-thread/share-memory",title:"share-memory",description:"\u5171\u4eab\u5185\u5b58",source:"@site/docs/concurrency-parallel-thread/share-memory.md",sourceDirName:"concurrency-parallel-thread",slug:"/concurrency-parallel-thread/share-memory",permalink:"/rust-docs/docs/concurrency-parallel-thread/share-memory",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/concurrency-parallel-thread/share-memory.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u5e76\u53d1\uff0c\u5e76\u884c\uff0c\u591a\u7ebf\u7a0b\u7f16\u7a0b",permalink:"/rust-docs/docs/concurrency-parallel-thread/preface"},next:{title:"synchronize",permalink:"/rust-docs/docs/concurrency-parallel-thread/synchronize"}},s={},u=[{value:"\u5171\u4eab\u5185\u5b58",id:"\u5171\u4eab\u5185\u5b58",level:2},{value:"static",id:"static",level:3},{value:"\u5806",id:"\u5806",level:3}],d={toc:u};function m(e){var n=e.components,t=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u5171\u4eab\u5185\u5b58"},"\u5171\u4eab\u5185\u5b58"),(0,i.kt)("p",null,"\u5728\u6d88\u606f\u4f20\u9012\u4e4b\u5916\uff0c\u8fd8\u5b58\u5728\u4e00\u79cd\u5e7f\u4e3a\u4eba\u77e5\u7684\u5e76\u53d1\u6a21\u578b\uff0c\u90a3\u5c31\u662f\u5171\u4eab\u5185\u5b58\u3002\u5176\u5b9e\u5982\u679c\u4e0d\u80fd\u5171\u4eab\u5185\u5b58\uff0c\u6d88\u606f\u4f20\u9012\u4e5f\u662f\u4e0d\u80fd\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u95f4\u4f20\u9012\u6d88\u606f\uff0c\u4e5f\u8c08\u4e0d\u4e0a\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u95f4\u7b49\u5f85\u548c\u901a\u77e5\u4e86\u3002\u5171\u4eab\u5185\u5b58\u662f\u8fd9\u4e00\u5207\u5f97\u4ee5\u53d1\u751f\u7684\u57fa\u7840\u3002\u5982\u679c\u67e5\u770b\u6e90\u7801\uff0c\u4f60\u4f1a\u53d1\u73b0\u6d88\u606f\u4f20\u9012\u7684\u5185\u90e8\u5b9e\u73b0\u5c31\u662f\u501f\u7528\u4e86\u5171\u4eab\u5185\u5b58\u673a\u5236\u3002\u76f8\u5bf9\u4e8e\u6d88\u606f\u4f20\u9012\u800c\u8a00\uff0c\u5171\u4eab\u5185\u5b58\u4f1a\u6709\u66f4\u591a\u7684\u7ade\u4e89\uff0c\u4f46\u662f\u4e0d\u7528\u8fdb\u884c\u591a\u6b21\u62f7\u8d1d\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e5f\u9700\u8981\u8003\u8651\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u5904\u7406\u3002\u5728Rust\u4e2d\uff0c\u80fd\u5171\u4eab\u5185\u5b58\u7684\u60c5\u51b5\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\u4e0b\u9762\u4e24\u4e2a\u65b9\u9762\uff1a"),(0,i.kt)("h3",{id:"static"},"static"),(0,i.kt)("p",null,"Rust\u8bed\u8a00\u4e2d\u4e5f\u5b58\u5728static\u53d8\u91cf\uff0c\u5176\u751f\u547d\u5468\u671f\u662f\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e14\u5728\u5185\u5b58\u4e2d\u67d0\u4e2a\u56fa\u5b9a\u5730\u5740\u5904\u53ea\u5b58\u5728\u4e00\u4efd\u5b9e\u4f8b\u3002\u6240\u6709\u7ebf\u7a0b\u90fd\u80fd\u591f\u8bbf\u95ee\u5230\u5b83\u3002\u8fd9\u79cd\u65b9\u5f0f\u4e5f\u662f\u6700\u7b80\u5355\u548c\u76f4\u63a5\u7684\u5171\u4eab\u65b9\u5f0f\u3002\u51e0\u4e4e\u5927\u591a\u6570\u8bed\u8a00\u90fd\u5b58\u5728\u8fd9\u79cd\u673a\u5236\u3002\u4e0b\u9762\u7b80\u5355\u770b\u4e00\u4e0bRust\u4e2d\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95eestatic\u53d8\u91cf\u7684\u7528\u6cd5\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},'use std::thread;\n\nstatic VAR: i32 = 5;\n\nfn main() {\n    // \u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\n    let new_thread = thread::spawn(move|| {\n        println!("static value in new thread: {}", VAR);\n    });\n\n    // \u7b49\u5f85\u65b0\u7ebf\u7a0b\u5148\u8fd0\u884c\n    new_thread.join().unwrap();\n    println!("static value in main thread: {}", VAR);\n}\n')),(0,i.kt)("p",null,"\u8fd0\u884c\u7ed3\u679c\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"static value in new thread: 5\nstatic value in main thread: 5\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"VAR"),"\u8fd9\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"static"),"\u53d8\u91cf\u5728\u5404\u7ebf\u7a0b\u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u975e\u5e38\u65b9\u4fbf\u3002\u5f53\u7136\u4e0a\u9762\u53ea\u662f\u8bfb\u53d6\uff0c\u90a3\u4e48\u8981\u4fee\u6539\u4e5f\u662f\u5f88\u7b80\u5355\u7684\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},'use std::thread;\n\nstatic mut VAR: i32 = 5;\n\nfn main() {\n    // \u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\n    let new_thread = thread::spawn(move|| {\n        unsafe {\n            println!("static value in new thread: {}", VAR);\n            VAR = VAR + 1;\n        }\n    });\n\n    // \u7b49\u5f85\u65b0\u7ebf\u7a0b\u5148\u8fd0\u884c\n    new_thread.join().unwrap();\n    unsafe {\n        println!("static value in main thread: {}", VAR);\n    }\n}\n')),(0,i.kt)("p",null,"\u8fd0\u884c\u7ed3\u679c\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"static value in new thread: 5\nstatic value in main thread: 6\n")),(0,i.kt)("p",null,"\u4ece\u7ed3\u679c\u6765\u770b",(0,i.kt)("inlineCode",{parentName:"p"},"VAR"),"\u7684\u503c\u53d8\u4e86\uff0c\u4ece\u4ee3\u7801\u4e0a\u6765\u770b\uff0c\u9664\u4e86\u5728",(0,i.kt)("inlineCode",{parentName:"p"},"VAR"),"\u53d8\u91cf\u524d\u9762\u52a0\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"mut"),"\u5173\u952e\u5b57\u5916\uff0c\u66f4\u52a0\u660e\u663e\u7684\u662f\u5728\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"VAR"),"\u7684\u5730\u65b9\u90fd\u6dfb\u52a0\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"unsafe"),"\u4ee3\u7801\u5757\u3002\u4e3a\u4ec0\u4e48\uff1f\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u80fd\u8bbf\u95ee",(0,i.kt)("inlineCode",{parentName:"p"},"VAR"),"\uff0c\u4e14\u5b83\u662f\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\uff0c\u81ea\u7136\u5c31\u662f\u4e0d\u5b89\u5168\u7684\u3002\u4e0a\u9762\u7684\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355\uff0c\u540c\u4e00\u65f6\u95f4\u53ea\u4f1a\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8bfb\u5199",(0,i.kt)("inlineCode",{parentName:"p"},"VAR"),"\uff0c\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u6240\u4ee5\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"unsafe"),"\u6765\u6807\u8bb0\u5c31\u53ef\u4ee5\u3002\u5982\u679c\u662f\u66f4\u591a\u7684\u7ebf\u7a0b\uff0c\u8fd8\u662f\u8bf7\u4f7f\u7528\u63a5\u4e0b\u6765\u8981\u4ecb\u7ecd\u7684\u540c\u6b65\u673a\u5236\u6765\u5904\u7406\u3002"),(0,i.kt)("p",null,"static\u5982\u6b64\uff0c\u90a3const\u5462\uff1f const\u4f1a\u5728\u7f16\u8bd1\u65f6\u5185\u8054\u5230\u4ee3\u7801\u4e2d\uff0c\u6240\u4ee5\u4e0d\u4f1a\u5b58\u5728\u67d0\u4e2a\u56fa\u5b9a\u7684\u5185\u5b58\u5730\u5740\u4e0a\uff0c\u4e5f\u4e0d\u5b58\u5728\u53ef\u4ee5\u4fee\u6539\u7684\u60c5\u51b5\uff0c\u5e76\u4e0d\u662f\u5185\u5b58\u5171\u4eab\u7684\u3002"),(0,i.kt)("h3",{id:"\u5806"},"\u5806"),(0,i.kt)("p",null,"\u7531\u4e8e\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bbe\u8ba1\uff0c\u7ebf\u7a0b\u5bc4\u751f\u4e8e\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90\uff0c\u5982\u679c\u8981\u5728\u5404\u4e2a\u7ebf\u7a0b\u4e2d\u5171\u4eab\u4e00\u4e2a\u53d8\u91cf\uff0c\u90a3\u4e48\u9664\u4e86\u4e0a\u9762\u7684static\uff0c\u8fd8\u6709\u5c31\u662f\u628a\u53d8\u91cf\u4fdd\u5b58\u5728\u5806\u4e0a\u4e86\u3002\u5f53\u7136Rust\u4e5f\u4e0d\u4f8b\u5916\uff0c\u9075\u4ece\u8fd9\u4e00\u8bbe\u8ba1\u3002\u53ea\u662f\u6211\u4eec\u77e5\u9053Rust\u5728\u5b89\u5168\u6027\u4e0a\u80af\u5b9a\u53c8\u4f1a\u505a\u4e00\u4e9b\u8003\u91cf\uff0c\u4ece\u800c\u5728\u8bed\u8a00\u8bbe\u8ba1\u548c\u4f7f\u7528\u4e0a\u7a0d\u6709\u4e0d\u540c\u3002"),(0,i.kt)("p",null,"\u4e3a\u4e86\u5728\u5806\u4e0a\u5206\u914d\u7a7a\u95f4\uff0cRust\u63d0\u4f9b\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"std::boxed::Box"),"\uff0c\u7531\u4e8e\u5806\u7684\u7279\u70b9\uff0c\u5b58\u6d3b\u65f6\u95f4\u6bd4\u8f83\u957f\uff0c\u6240\u4ee5\u9664\u4e86\u6211\u4eec\u8fd9\u4e2a\u5730\u65b9\u4ecb\u7ecd\u7684\u7ebf\u7a0b\u95f4\u5171\u4eab\u5916\uff0c\u8fd8\u6709\u5176\u4ed6\u7684\u7528\u5904\uff0c\u6b64\u5904\u4e0d\u8be6\u7ec6\u8bf4\u660e\uff0c\u82e5\u4e0d\u751a\u4e86\u89e3\uff0c\u8bf7\u5b66\u4e60\u6216\u56de\u987e",(0,i.kt)("strong",{parentName:"p"},"\u5806\u3001\u6808\u4e0eBox"),"\u7ae0\u8282\u7684\u4ecb\u7ecd\u3002\u4e0b\u9762\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u5982\u4f55\u5728\u591a\u4e2a\u7ebf\u7a0b\u95f4\u8bbf\u95ee",(0,i.kt)("inlineCode",{parentName:"p"},"Box"),"\u521b\u5efa\u7684\u53d8\u91cf\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},'use std::thread;\nuse std::sync::Arc;\n\nfn main() {\n    let var : Arc<i32> = Arc::new(5);\n    let share_var = var.clone();\n\n    // \u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\n    let new_thread = thread::spawn(move|| {\n        println!("share value in new thread: {}, address: {:p}", share_var, &*share_var);\n    });\n\n    // \u7b49\u5f85\u65b0\u5efa\u7ebf\u7a0b\u5148\u6267\u884c\n    new_thread.join().unwrap();\n    println!("share value in main thread: {}, address: {:p}", var, &*var);\n}\n')),(0,i.kt)("p",null,"\u8fd0\u884c\u7ed3\u679c\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"share value in new thread: 5, address: 0x2825070\nshare value in main thread: 5, address: 0x2825070\n")),(0,i.kt)("p",null,"\u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\u5f88\u5947\u602a\uff0c\u4e0a\u9762\u600e\u4e48\u6ca1\u6709\u770b\u5230Box\u521b\u5efa\u7684\u53d8\u91cf\u554a\uff0c\u8fd9\u660e\u660e\u5c31\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"Arc"),"\u7684\u4f7f\u7528\u5440\uff1f",(0,i.kt)("inlineCode",{parentName:"p"},"Box"),"\u521b\u5efa\u7684\u53d8\u91cf\u8981\u60f3\u5728\u591a\u4e2a\u7ebf\u7a0b\u4e2d\u5b89\u5168\u4f7f\u7528\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5b9e\u73b0\u5f88\u591a\u529f\u80fd\u624d\u884c\uff0c\u9700\u8981\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"Sync"),"\uff0c\u800c",(0,i.kt)("inlineCode",{parentName:"p"},"Arc"),"\u6b63\u662f\u5229\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"Box"),"\u6765\u5b9e\u73b0\u7684\u4e00\u4e2a\u901a\u8fc7\u5f15\u7528\u8ba1\u6570\u6765\u5171\u4eab\u72b6\u6001\u7684\u5305\u88f9\u7c7b\u3002\u4e0b\u9762\u5f15\u7528\u4e00\u6bb5",(0,i.kt)("inlineCode",{parentName:"p"},"Arc::new"),"\u7684\u6e90\u7801\u5373\u53ef\u770b\u51fa\u5b83\u662f\u901a\u8fc7",(0,i.kt)("inlineCode",{parentName:"p"},"Box"),"\u6765\u5b9e\u73b0\u7684\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn new(data: T) -> Arc<T> {\n    // Start the weak pointer count as 1 which is the weak pointer that's\n    // held by all the strong pointers (kinda), see std/rc.rs for more info\n    let x: Box<_> = box ArcInner {\n        strong: atomic::AtomicUsize::new(1),\n        weak: atomic::AtomicUsize::new(1),\n        data: data,\n    };\n    Arc { _ptr: unsafe { NonZero::new(Box::into_raw(x)) } }\n}\n")),(0,i.kt)("p",null,"\u901a\u8fc7\u4e0a\u9762\u7684\u8fd0\u884c\u7ed3\u679c\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u53d1\u73b0\u65b0\u5efa\u7ebf\u7a0b\u548c\u4e3b\u7ebf\u7a0b\u4e2d\u6253\u5370\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"address"),"\u662f\u4e00\u6837\u7684\uff0c\u8bf4\u660e\u72b6\u6001\u786e\u5b9e\u662f\u5728\u540c\u4e00\u4e2a\u5185\u5b58\u5730\u5740\u5904\u3002"),(0,i.kt)("p",null,"\u5982\u679c",(0,i.kt)("inlineCode",{parentName:"p"},"Box"),"\u5728\u5806\u4e0a\u5206\u914d\u7684\u8d44\u6e90\u4ec5\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u4f7f\u7528\uff0c\u90a3\u4e48\u91ca\u653e\u65f6\uff0c\u5c31\u975e\u5e38\u7b80\u5355\uff0c\u4f7f\u7528\u5b8c\uff0c\u53ca\u65f6\u91ca\u653e\u5373\u53ef\u3002\u5982\u679c\u662f\u8981\u5728\u591a\u4e2a\u7ebf\u7a0b\u4e2d\u4f7f\u7528\uff0c\u5c31\u9700\u8981\u9762\u4e34\u4e24\u4e2a\u5173\u952e\u95ee\u9898\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u8d44\u6e90\u4f55\u65f6\u91ca\u653e\uff1f"),(0,i.kt)("li",{parentName:"ol"},"\u7ebf\u7a0b\u5982\u4f55\u5b89\u5168\u7684\u5e76\u53d1\u4fee\u6539\u548c\u8bfb\u53d6\uff1f")),(0,i.kt)("p",null,"\u7531\u4e8e\u4e0a\u9762\u4e24\u4e2a\u95ee\u9898\u7684\u5b58\u5728\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"Box"),"\u53d8\u91cf\u5728\u7ebf\u7a0b\u4e2d\u5171\u4eab\u7684\u539f\u56e0\uff0c\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u5171\u4eab\u5185\u5b58\u6bd4\u6d88\u606f\u4f20\u9012\u673a\u5236\u4f3c\u4e4e\u8981\u590d\u6742\u8bb8\u591a\u3002Rust\u7528\u4e86\u5f15\u7528\u8ba1\u6570\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u5728\u6807\u51c6\u5e93\u4e2d\u63d0\u4f9b\u4e86\u4e24\u4e2a\u5305\u88f9\u7c7b\uff0c\u9664\u4e86\u4e0a\u9762\u4e00\u4e2a\u7528\u4e8e\u591a\u7ebf\u7a0b\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"std::sync::Arc"),"\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u4e0d\u80fd\u7528\u4e8e\u591a\u7ebf\u7a0b\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"std::rc::Rc"),"\u3002\u5728\u4f7f\u7528\u65f6\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u9009\u62e9\u3002\u5982\u679c\u4f60\u4e00\u4e0d\u5c0f\u5fc3\u628a",(0,i.kt)("inlineCode",{parentName:"p"},"std::rc::Rc"),"\u7528\u4e8e\u591a\u7ebf\u7a0b\u4e2d\uff0c\u7f16\u8bd1\u5668\u4f1a\u6beb\u4e0d\u5ba2\u6c14\u5730\u7ea0\u6b63\u4f60\u7684\u3002"),(0,i.kt)("p",null,"\u5173\u4e8e\u4e0a\u9762\u7684\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0cRust\u8bed\u8a00\u53ca\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u540c\u6b65\u624b\u6bb5\u6765\u89e3\u51b3\u3002\u4e0b\u9762\u7684\u7ae0\u8282\u6211\u4eec\u5c06\u8be6\u7ec6\u8bb2\u89e3\u8fd9\u4e9b\u65b9\u5f0f\u548c\u7528\u6cd5\u3002"))}m.isMDXComponent=!0}}]);