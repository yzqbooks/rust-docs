"use strict";(self.webpackChunkrust_docs=self.webpackChunkrust_docs||[]).push([[6453],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=p(n),d=o,m=f["".concat(u,".").concat(d)]||f[d]||s[d]||i;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8536:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={},u="\u6587\u4ef6\u8f93\u5165\u4e0e\u8f93\u51fa",p={unversionedId:"io/file-io",id:"io/file-io",title:"\u6587\u4ef6\u8f93\u5165\u4e0e\u8f93\u51fa",description:"\u6587\u4ef6 std::File \u672c\u8eab\u5b9e\u73b0\u4e86 Read \u548c Write trait\uff0c\u6240\u4ee5\u6587\u4ef6\u7684\u8f93\u5165\u8f93\u51fa\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u8981\u5f97\u5230\u4e00\u4e2a File \u7c7b\u578b\u5b9e\u4f8b\u5c31\u53ef\u4ee5\u8c03\u7528\u8bfb\u5199\u63a5\u53e3\u8fdb\u884c\u6587\u4ef6\u8f93\u5165\u4e0e\u8f93\u51fa\u64cd\u4f5c\u4e86\u3002\u800c\u8981\u5f97\u5230 File \u5c31\u5f97\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u6253\u5f00(open)\u6216\u65b0\u5efa(create)\u4e00\u4e2a\u6587\u4ef6\u3002\u8fd8\u662f\u62ff\u4f8b\u5b50\u6765\u8bf4\u660e",source:"@site/docs/io/file-io.md",sourceDirName:"io",slug:"/io/file-io",permalink:"/rust-docs/docs/io/file-io",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/io/file-io.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u6807\u51c6\u8f93\u5165\u4e0e\u8f93\u51fa",permalink:"/rust-docs/docs/io/"},next:{title:"print! \u5b8f",permalink:"/rust-docs/docs/io/output"}},c={},s=[],f={toc:s};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u6587\u4ef6\u8f93\u5165\u4e0e\u8f93\u51fa"},"\u6587\u4ef6\u8f93\u5165\u4e0e\u8f93\u51fa"),(0,i.kt)("p",null,"\u6587\u4ef6 ",(0,i.kt)("inlineCode",{parentName:"p"},"std::fs::File")," \u672c\u8eab\u5b9e\u73b0\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"Read")," \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"Write")," trait\uff0c\u6240\u4ee5\u6587\u4ef6\u7684\u8f93\u5165\u8f93\u51fa\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u8981\u5f97\u5230\u4e00\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"File")," \u7c7b\u578b\u5b9e\u4f8b\u5c31\u53ef\u4ee5\u8c03\u7528\u8bfb\u5199\u63a5\u53e3\u8fdb\u884c\u6587\u4ef6\u8f93\u5165\u4e0e\u8f93\u51fa\u64cd\u4f5c\u4e86\u3002\u800c\u8981\u5f97\u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"File")," \u5c31\u5f97\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u6253\u5f00(open)\u6216\u65b0\u5efa(create)\u4e00\u4e2a\u6587\u4ef6\u3002\u8fd8\u662f\u62ff\u4f8b\u5b50\u6765\u8bf4\u660e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},'use std::io;\nuse std::io::prelude::*;\nuse std::fs::File;\n\n// create file and write something\nfn create_file(filename: &str, buf: &[u8]) -> io::Result<()> {\n    let mut f = try!(File::create(filename));\n    try!(f.write(&buf));\n    Ok(())\n}\n\n// read from file to String\nfn read_file(filename: &str, buf: &mut String) -> io::Result<()> {\n    let mut f = try!(File::open(filename));\n    try!(f.read_to_string(&buf));\n    Ok(())\n}\n\nfn main() {\n    let f = "foo.txt";\n    let mut buf = String::new();\n    match create_file(f, b"Hello, World!") {\n        Ok(()) => {\n            match read_file(f, &mut buf) {\n                Ok(()) => {println!("{}", buf);},\n                Err(e) => {println!("{}", e);},\n            };\n        },\n        Err(e) => {println!("{}", e);},\n    }\n}\n')),(0,i.kt)("p",null,"\u6587\u4ef6\u64cd\u4f5c\u4e0a\u9762 Rust \u4e0e\u5176\u5b83\u8bed\u8a00\u5904\u7406\u65b9\u5f0f\u6709\u4e9b\u4e0d\u4e00\u6837\uff0c\u5176\u5b83\u8bed\u8a00\u4e00\u822c\u628a\u8bfb\u5199\u9009\u9879\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f20\u7ed9 open \u51fd\u6570\uff0c\u800c Rust \u5219\u662f\u5728 option \u4e0a\u9762\u8c03\u7528 open \u51fd\u6570\u3002 ",(0,i.kt)("a",{parentName:"p",href:"http://doc.rust-lang.org/stable/std/fs/struct.OpenOptions.html"},(0,i.kt)("inlineCode",{parentName:"a"},"std::fs::OpenOptions"))," \u662f\u4e00\u4e2a builder\uff0c\u901a\u8fc7 new \u51fd\u6570\u521b\u5efa\u540e\uff0c\u53ef\u4ee5\u94fe\u5f0f\u8c03\u7528\u8bbe\u7f6e\u6253\u5f00\u6587\u4ef6\u7684\u9009\u9879\uff0c\u662f read, write, append, truncate \u8fd8\u662f create \u7b49\uff0cOpenOptions \u6784\u5efa\u5b8c\u6210\u540e\u5c31\u53ef\u4ee5\u518d\u63a5\u7740\u8c03\u7528 open \u65b9\u6cd5\u4e86\uff0c\u770b\u4e0b\u4e0b\u9762\u7684\u4f8b\u5b50\u5c31\u660e\u767d\u4e86"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},'use std::fs::OpenOptions;\n\nlet file = OpenOptions::new().write(true).truncate(true).open("foo.txt");\n')),(0,i.kt)("p",null,"Rust \u8fd9\u79cd\u7528 builder pattern \u6765\u8bbe\u7f6e\u6253\u5f00\u6587\u4ef6\u9009\u9879\uff0c\u76f8\u6bd4\u4e8e\u5c06\u9009\u9879\u4ee5\u5b57\u7b26\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 open \u51fd\u6570\u7684\u4e00\u4e2a\u4f18\u70b9\u662f\u53ef\u4ee5\u8ba9\u7f16\u8bd1\u5668\u4fdd\u8bc1\u68c0\u67e5\u9009\u9879\u5408\u6cd5\u6027\uff0c\u4e0d\u7528\u7b49\u5230\u8fd0\u884c\u65f6\u624d\u53d1\u73b0\u624b\u6296\u628a read-mode \u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"r")," \u5199\u6210\u4e86 ",(0,i.kt)("inlineCode",{parentName:"p"},"t"),"\u3002"))}d.isMDXComponent=!0}}]);