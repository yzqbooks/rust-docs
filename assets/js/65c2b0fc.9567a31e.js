"use strict";(self.webpackChunkrust_docs=self.webpackChunkrust_docs||[]).push([[2704],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=r.createContext({}),l=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(d.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=l(t),f=a,m=p["".concat(d,".").concat(f)]||p[f]||s[f]||o;return t?r.createElement(m,u(u({ref:n},c),{},{components:t})):r.createElement(m,u({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,u=new Array(o);u[0]=p;var i={};for(var d in n)hasOwnProperty.call(n,d)&&(i[d]=n[d]);i.originalType=e,i.mdxType="string"==typeof e?e:a,u[1]=i;for(var l=2;l<o;l++)u[l]=t[l];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4986:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return s}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),u=["components"],i={},d="\u56fe",l={unversionedId:"data-structure/graph",id:"data-structure/graph",title:"\u56fe",description:"\u56fe\u7684\u5b58\u50a8\u7ed3\u6784",source:"@site/docs/data-structure/graph.md",sourceDirName:"data-structure",slug:"/data-structure/graph",permalink:"/rust-docs/docs/data-structure/graph",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/data-structure/graph.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u4e8c\u53c9\u6811",permalink:"/rust-docs/docs/data-structure/binary_tree"},next:{title:"\u94fe\u8868",permalink:"/rust-docs/docs/data-structure/linked_list"}},c={},s=[{value:"\u56fe\u7684\u5b58\u50a8\u7ed3\u6784",id:"\u56fe\u7684\u5b58\u50a8\u7ed3\u6784",level:2},{value:"\u90bb\u63a5\u77e9\u9635\u8868\u793a\u6cd5",id:"\u90bb\u63a5\u77e9\u9635\u8868\u793a\u6cd5",level:2},{value:"\u90bb\u63a5\u8868\u8868\u793a\u6cd5",id:"\u90bb\u63a5\u8868\u8868\u793a\u6cd5",level:2},{value:"<strong>\u7ec3\u4e60\uff1a</strong>",id:"\u7ec3\u4e60",level:2}],p={toc:s};function f(e){var n=e.components,t=(0,a.Z)(e,u);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u56fe"},"\u56fe"),(0,o.kt)("h2",{id:"\u56fe\u7684\u5b58\u50a8\u7ed3\u6784"},"\u56fe\u7684\u5b58\u50a8\u7ed3\u6784"),(0,o.kt)("p",null,"\u56fe\u7684\u5b58\u50a8\u7ed3\u6784\u9664\u4e86\u8981\u5b58\u50a8\u56fe\u4e2d\u5404\u4e2a\u9876\u70b9\u7684\u672c\u8eab\u4fe1\u606f\u5916\uff0c\u540c\u65f6\u8fd8\u8981\u5b58\u50a8\u9876\u70b9\u4e0e\u9876\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u5173\u7cfb(\u8fb9\u7684\u4fe1\u606f)\uff0c\u56e0\u6b64\uff0c\u56fe\u7684\u7ed3\u6784\u6bd4\u8f83\u590d\u6742\uff0c\u5f88\u96be\u4ee5\u6570\u636e\u5143\u7d20\u5728\u5b58\u50a8\u533a\u4e2d\u7684\u7269\u7406\u4f4d\u7f6e\u6765\u8868\u793a\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4f46\u4e5f\u6b63\u662f\u7531\u4e8e\u5176\u4efb\u610f\u7684\u7279\u6027\uff0c\u6545\u7269\u7406\u8868\u793a\u65b9\u6cd5\u5f88\u591a\u3002\u5e38\u7528\u7684\u56fe\u7684\u5b58\u50a8\u7ed3\u6784\u6709\u90bb\u63a5\u77e9\u9635\u3001\u90bb\u63a5\u8868\u7b49\u3002"),(0,o.kt)("h2",{id:"\u90bb\u63a5\u77e9\u9635\u8868\u793a\u6cd5"},"\u90bb\u63a5\u77e9\u9635\u8868\u793a\u6cd5"),(0,o.kt)("p",null,"\u5bf9\u4e8e\u4e00\u4e2a\u5177\u6709n\u4e2a\u7ed3\u70b9\u7684\u56fe\uff0c\u53ef\u4ee5\u4f7f\u7528n*n\u7684\u77e9\u9635(\u4e8c\u7ef4\u6570\u7ec4)\u6765\u8868\u793a\u5b83\u4eec\u95f4\u7684\u90bb\u63a5\u5173\u7cfb\u3002\u77e9\u9635 A(i,j) = 1 \u8868\u793a\u56fe\u4e2d\u5b58\u5728\u4e00\u6761\u8fb9 (Vi,Vj),\u800cA(i,j)=0\u8868\u793a\u56fe\u4e2d\u4e0d\u5b58\u5728\u8fb9 (Vi,Vj)\u3002\n\u5b9e\u9645\u7f16\u7a0b\u65f6\uff0c\u5f53\u56fe\u4e3a\u4e0d\u5e26\u6743\u56fe\u65f6\uff0c\u53ef\u4ee5\u5728\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u5b58\u653e bool \u503c\u3002"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A(i,j) = true \u8868\u793a\u5b58\u5728\u8fb9 (Vi,Vj),"),(0,o.kt)("li",{parentName:"ul"},"A(i,j) = false \u8868\u793a\u4e0d\u5b58\u5728\u8fb9 (Vi,Vj);")),(0,o.kt)("p",null,"\u5f53\u56fe\u5e26\u6743\u503c\u65f6\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5728\u4e8c\u7ef4\u6570\u503c\u4e2d\u5b58\u653e\u6743\u503c\uff0cA(i,j) = null \u8868\u793a\u4e0d\u5b58\u5728\u8fb9 (Vi,Vj)\u3002"),(0,o.kt)("p",null,"\u4e0b\u9762\u770b\u770b\u6211\u4eec\u4f7f\u7528\u90bb\u63a5\u77e9\u9635\u5b9e\u73b0\u7684\u56fe\u7ed3\u6784\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'#[derive(Debug)]\nstruct Node {\n    nodeid: usize,\n    nodename: String,\n}\n\n#[derive(Debug,Clone)]\nstruct Edge {\n    edge: bool,\n}\n\n#[derive(Debug)]\nstruct Graphadj {\n    nodenums: usize,\n    graphadj: Vec<Vec<Edge>>,\n}\n\nimpl Node {\n    fn new(nodeid: usize, nodename: String) -> Node {\n        Node{\n            nodeid: nodeid,\n            nodename: nodename,\n        }\n    }\n}\nimpl Edge {\n    fn new() -> Edge {\n        Edge{\n            edge: false,\n        }\n    }\n    fn have_edge() -> Edge {\n        Edge{\n            edge: true,\n        }\n    }\n}\n\nimpl Graphadj {\n    fn new(nums:usize) -> Graphadj {\n        Graphadj {\n            nodenums: nums,\n            graphadj: vec![vec![Edge::new();nums]; nums],\n        }\n    }\n\n    fn insert_edge(&mut self, v1: Node, v2:Node) {\n        match v1.nodeid < self.nodenums && v2.nodeid<self.nodenums {\n            true => {\n                self.graphadj[v1.nodeid][v2.nodeid] = Edge::have_edge();\n                //\u4e0b\u9762\u8fd9\u53e5\u6ce8\u91ca\u53bb\u6389\u76f8\u5f53\u4e8e\u628a\u56fe\u5f53\u6210\u65e0\u5411\u56fe\n                //self.graphadj[v2.nodeid][v1.nodeid] = Edge::have_edge();\n            }\n            false => {\n                panic!("your nodeid is bigger than nodenums!");\n            }\n        }\n    }\n}\n\nfn main() {\n    let mut g = Graphadj::new(2);\n    let v1 = Node::new(0, "v1".to_string());\n    let v2 = Node::new(1, "v2".to_string());\n    g.insert_edge(v1,v2);\n    println!("{:?}", g);\n}\n')),(0,o.kt)("h2",{id:"\u90bb\u63a5\u8868\u8868\u793a\u6cd5"},"\u90bb\u63a5\u8868\u8868\u793a\u6cd5"),(0,o.kt)("p",null,"\u90bb\u63a5\u8868\u662f\u56fe\u7684\u4e00\u79cd\u6700\u4e3b\u8981\u5b58\u50a8\u7ed3\u6784\uff0c\u7528\u6765\u63cf\u8ff0\u56fe\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\u3002"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"\u5b9e\u73b0\u65b9\u5f0f\uff1a"),"\u5bf9\u56fe\u7684\u6bcf\u4e2a\u9876\u70b9\u5efa\u7acb\u4e00\u4e2a\u5bb9\u5668\uff08n\u4e2a\u9876\u70b9\u5efa\u7acbn\u4e2a\u5bb9\u5668\uff09\uff0c\u7b2ci\u4e2a\u5bb9\u5668\u4e2d\u7684\u7ed3\u70b9\u5305\u542b\u9876\u70b9Vi\u7684\u6240\u6709\u90bb\u63a5\u9876\u70b9\u3002\u5b9e\u9645\u4e0a\u6211\u4eec\u5e38\u7528\u7684\u90bb\u63a5\u77e9\u9635\u5c31\u662f\u4e00\u79cd\u672a\u79bb\u6563\u5316\u6bcf\u4e2a\u70b9\u7684\u8fb9\u96c6\u7684\u90bb\u63a5\u8868\u3002")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u63cf\u8ff0\u6bcf\u4e2a\u70b9\u5411\u522b\u7684\u8282\u70b9\u8fde\u7684\u8fb9\uff08\u70b9 a->\u70b9 b \u8fd9\u79cd\u60c5\u51b5\uff09\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u5728\u65e0\u5411\u56fe\u4e2d\uff0c\u63cf\u8ff0\u6bcf\u4e2a\u70b9\u6240\u6709\u7684\u8fb9(\u70b9 a->\u70b9 b\u8fd9\u79cd\u60c5\u51b5)")),(0,o.kt)("p",null,"\u4e0e\u90bb\u63a5\u8868\u76f8\u5bf9\u5e94\u7684\u5b58\u56fe\u65b9\u5f0f\u53eb\u505a\u8fb9\u96c6\u8868\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7528\u4e00\u4e2a\u5bb9\u5668\u5b58\u50a8\u6240\u6709\u7684\u8fb9\u3002"),(0,o.kt)("h2",{id:"\u7ec3\u4e60"},(0,o.kt)("strong",{parentName:"h2"},"\u7ec3\u4e60\uff1a")),(0,o.kt)("p",null,"\u5b9e\u73b0\u94fe\u63a5\u8868\u8868\u793a\u6cd5\u7684\u56fe\u7ed3\u6784\u3002"))}f.isMDXComponent=!0}}]);