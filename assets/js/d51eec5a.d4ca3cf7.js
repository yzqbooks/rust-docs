"use strict";(self.webpackChunkrust_docs=self.webpackChunkrust_docs||[]).push([[1806],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},u=Object.keys(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)n=u[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,u=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||u;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var u=n.length,a=new Array(u);a[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var c=2;c<u;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7302:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var r=n(7462),i=n(3366),u=(n(7294),n(3905)),a=["components"],o={},l="\u7ed3\u6784\u4f53\u4e0e\u679a\u4e3e",c={unversionedId:"quickstart/struct-enum",id:"quickstart/struct-enum",title:"\u7ed3\u6784\u4f53\u4e0e\u679a\u4e3e",description:"\u7ed3\u6784\u4f53",source:"@site/docs/quickstart/struct-enum.md",sourceDirName:"quickstart",slug:"/quickstart/struct-enum",permalink:"/rust-docs/docs/quickstart/struct-enum",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quickstart/struct-enum.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Rust\u65c5\u7a0b",permalink:"/rust-docs/docs/quickstart/rust-travel"},next:{title:"\u7279\u6027",permalink:"/rust-docs/docs/quickstart/trait"}},s={},p=[{value:"\u7ed3\u6784\u4f53",id:"\u7ed3\u6784\u4f53",level:2},{value:"\u679a\u4e3e",id:"\u679a\u4e3e",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,u.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h1",{id:"\u7ed3\u6784\u4f53\u4e0e\u679a\u4e3e"},"\u7ed3\u6784\u4f53\u4e0e\u679a\u4e3e"),(0,u.kt)("h2",{id:"\u7ed3\u6784\u4f53"},"\u7ed3\u6784\u4f53"),(0,u.kt)("p",null,"\u7ed3\u6784\u4f53 (struct) \u662f\u4e00\u79cd\u8bb0\u5f55\u7c7b\u578b\uff0c\u6240\u5305\u542b\u7684\u6bcf\u4e2a\u57df (field) \u90fd\u6709\u4e00\u4e2a\u540d\u79f0\u3002\n\u6bcf\u4e2a\u7ed3\u6784\u4f53\u4e5f\u90fd\u6709\u4e00\u4e2a\u540d\u79f0\uff0c\u901a\u5e38\u4ee5\u5927\u5199\u5b57\u6bcd\u5f00\u5934\uff0c\u4f7f\u7528\u9a7c\u5cf0\u547d\u540d\u6cd5\u3002\n\u5143\u7ec4\u7ed3\u6784\u4f53 (tuple struct) \u662f\u7531\u5143\u7ec4\u548c\u7ed3\u6784\u4f53\u6df7\u5408\u6784\u6210\uff0c\u5143\u7ec4\u7ed3\u6784\u4f53\u6709\u540d\u79f0\uff0c\n\u4f46\u662f\u5b83\u7684\u57df\u6ca1\u6709\u3002\u5f53\u5143\u7ec4\u7ed3\u6784\u4f53\u53ea\u6709\u4e00\u4e2a\u57df\u65f6\uff0c\u79f0\u4e3a\u65b0\u7c7b\u578b (newtype)\u3002\n\u6ca1\u6709\u4efb\u4f55\u57df\u7684\u7ed3\u6784\u4f53\uff0c\u79f0\u4e3a\u7c7b\u5355\u5143\u7ed3\u6784\u4f53 (unit-like struct)\u3002\n\u7ed3\u6784\u4f53\u4e2d\u7684\u503c\u9ed8\u8ba4\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u9700\u8981\u7ed9\u7ed3\u6784\u4f53\u52a0\u4e0a",(0,u.kt)("inlineCode",{parentName:"p"},"mut"),"\u4f7f\u5176\u53ef\u53d8\u3002"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-rust"},"// structs\nstruct Point {\n  x: i32,\n  y: i32,\n}\nlet point = Point { x: 0, y: 0 };\n\n// tuple structs\nstruct Color(u8, u8, u8);\nlet android_green = Color(0xa4, 0xc6, 0x39);\nlet Color(red, green, blue) = android_green;\n\n// A tuple struct\u2019s constructors can be used as functions.\nstruct Digit(i32);\nlet v = vec![0, 1, 2];\nlet d: Vec<Digit> = v.into_iter().map(Digit).collect();\n\n// newtype: a tuple struct with only one element\nstruct Inches(i32);\nlet length = Inches(10);\nlet Inches(integer_length) = length;\n\n// unit-like structs\nstruct EmptyStruct;\nlet empty = EmptyStruct;\n")),(0,u.kt)("p",null,"\u4e00\u4e2a\u5305\u542b",(0,u.kt)("inlineCode",{parentName:"p"},".."),"\u7684",(0,u.kt)("inlineCode",{parentName:"p"},"struct"),"\u53ef\u4ee5\u7528\u6765\u4ece\u5176\u5b83\u7ed3\u6784\u4f53\u62f7\u8d1d\u4e00\u4e9b\u503c\u6216\u8005\u5728\u89e3\u6784\u65f6\u5ffd\u7565\u4e00\u4e9b\u57df\uff1a"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-rust"},"#[derive(Default)]\nstruct Point3d {\n    x: i32,\n    y: i32,\n    z: i32,\n}\n\nlet origin = Point3d::default();\nlet point = Point3d { y: 1, ..origin };\nlet Point3d { x: x0, y: y0, .. } = point;\n")),(0,u.kt)("p",null,"\u9700\u8981\u6ce8\u610f\uff0cRust\u5728\u8bed\u8a00\u7ea7\u522b\u4e0d\u652f\u6301\u57df\u53ef\u53d8\u6027 (field mutability)\uff0c\u6240\u4ee5\u4e0d\u80fd\u8fd9\u4e48\u5199\uff1a"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-rust"},"struct Point {\n    mut x: i32,\n    y: i32,\n}\n")),(0,u.kt)("p",null,"\u8fd9\u662f\u56e0\u4e3a\u53ef\u53d8\u6027\u662f\u7ed1\u5b9a\u7684\u4e00\u4e2a\u5c5e\u6027\uff0c\u800c\u4e0d\u662f\u7ed3\u6784\u4f53\u81ea\u8eab\u7684\u3002\u53ef\u4ee5\u4f7f\u7528",(0,u.kt)("inlineCode",{parentName:"p"},"Cell<T>"),"\u6765\u6a21\u62df\uff1a"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-rust"},"use std::cell::Cell;\n\nstruct Point {\n    x: i32,\n    y: Cell<i32>,\n}\n\nlet point = Point { x: 5, y: Cell::new(6) };\n\npoint.y.set(7);\n")),(0,u.kt)("p",null,"\u6b64\u5916\uff0c\u7ed3\u6784\u4f53\u7684\u57df\u5bf9\u5176\u6240\u5728\u6a21\u5757 (mod) \u4e4b\u5916\u9ed8\u8ba4\u662f\u79c1\u6709\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528",(0,u.kt)("inlineCode",{parentName:"p"},"pub"),"\u5173\u952e\u5b57\u5c06\u5176\u8bbe\u7f6e\u6210\u516c\u5f00\u3002"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-rust"},'mod graph {\n    #[derive(Default)]\n    pub struct Point {\n        pub x: i32,\n        y: i32,\n    }\n\n    pub fn inside_fn() {\n        let p = Point {x:1, y:2};\n        println!("{}, {}", p.x, p.y);\n    }\n}\n\nfn outside_fn() {\n    let p = graph::Point::default();\n    println!("{}", p.x);\n    // println!("{}", p.y);\n    // field `y` of struct `graph::Point` is private\n}\n')),(0,u.kt)("h2",{id:"\u679a\u4e3e"},"\u679a\u4e3e"),(0,u.kt)("p",null,"Rust\u6709\u4e00\u4e2a\u96c6\u5408\u7c7b\u578b\uff0c\u79f0\u4e3a\u679a\u4e3e (enum)\uff0c\u4ee3\u8868\u4e00\u7cfb\u5217\u5b50\u6570\u636e\u7c7b\u578b\u7684\u96c6\u5408\u3002\n\u5176\u4e2d\u5b50\u6570\u636e\u7ed3\u6784\u53ef\u4ee5\u4e3a\u7a7a-\u5982\u679c\u5168\u90e8\u5b50\u6570\u636e\u7ed3\u6784\u90fd\u662f\u7a7a\u7684\uff0c\u5c31\u7b49\u4ef7\u4e8eC\u8bed\u8a00\u4e2d\u7684enum\u3002\n\u6211\u4eec\u9700\u8981\u4f7f\u7528",(0,u.kt)("inlineCode",{parentName:"p"},"::"),"\u6765\u83b7\u5f97\u6bcf\u4e2a\u5143\u7d20\u7684\u540d\u79f0\u3002"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-rust"},"// enums\nenum Message {\n    Quit,\n    ChangeColor(i32, i32, i32),\n    Move { x: i32, y: i32 },\n    Write(String),\n}\n\nlet x: Message = Message::Move { x: 3, y: 4 };\n")),(0,u.kt)("p",null,"\u4e0e\u7ed3\u6784\u4f53\u4e00\u6837\uff0c\u679a\u4e3e\u4e2d\u7684\u5143\u7d20\u9ed8\u8ba4\u4e0d\u80fd\u4f7f\u7528\u5173\u7cfb\u8fd0\u7b97\u7b26\u8fdb\u884c\u6bd4\u8f83 (\u5982",(0,u.kt)("inlineCode",{parentName:"p"},"=="),", ",(0,u.kt)("inlineCode",{parentName:"p"},"!="),", ",(0,u.kt)("inlineCode",{parentName:"p"},">="),")\uff0c\n\u4e5f\u4e0d\u652f\u6301\u50cf",(0,u.kt)("inlineCode",{parentName:"p"},"+"),"\u548c",(0,u.kt)("inlineCode",{parentName:"p"},"*"),"\u8fd9\u6837\u7684\u53cc\u76ee\u8fd0\u7b97\u7b26\uff0c\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\uff0c\u6216\u8005\u4f7f\u7528",(0,u.kt)("inlineCode",{parentName:"p"},"match"),"\u8fdb\u884c\u5339\u914d\u3002"),(0,u.kt)("p",null,"\u679a\u4e3e\u9ed8\u8ba4\u4e5f\u662f\u79c1\u6709\u7684\uff0c\u5982\u679c\u4f7f\u7528",(0,u.kt)("inlineCode",{parentName:"p"},"pub"),"\u4f7f\u5176\u53d8\u4e3a\u516c\u6709\uff0c\u5219\u5b83\u7684\u5143\u7d20\u4e5f\u90fd\u662f\u9ed8\u8ba4\u516c\u6709\u7684\u3002\n\u8fd9\u4e00\u70b9\u662f\u4e0e\u7ed3\u6784\u4f53\u4e0d\u540c\u7684\uff1a\u5373\u4f7f\u7ed3\u6784\u4f53\u662f\u516c\u6709\u7684\uff0c\u5b83\u7684\u57df\u4ecd\u7136\u662f\u9ed8\u8ba4\u79c1\u6709\u7684\u3002\u8fd9\u91cc\u7684\u5171\u6709/\u79c1\u6709\u4ecd\u7136\n\u662f\u9488\u5bf9\u5176\u5b9a\u4e49\u6240\u5728\u7684\u6a21\u5757\u4e4b\u5916\u3002\u6b64\u5916\uff0c\u679a\u4e3e\u548c\u7ed3\u6784\u4f53\u4e5f\u53ef\u4ee5\u662f\u9012\u5f52\u7684 (recursive)\u3002"))}m.isMDXComponent=!0}}]);