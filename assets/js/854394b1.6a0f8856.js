"use strict";(self.webpackChunkrust_docs=self.webpackChunkrust_docs||[]).push([[3703],{3905:function(n,e,t){t.d(e,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var p=r.createContext({}),u=function(n){var e=r.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},s=function(n){var e=u(n.components);return r.createElement(p.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,a=n.originalType,p=n.parentName,s=o(n,["components","mdxType","originalType","parentName"]),d=u(t),m=i,k=d["".concat(p,".").concat(m)]||d[m]||c[m]||a;return t?r.createElement(k,l(l({ref:e},s),{},{components:t})):r.createElement(k,l({ref:e},s))}));function m(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var a=t.length,l=new Array(a);l[0]=d;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=n,o.mdxType="string"==typeof n?n:i,l[1]=o;for(var u=2;u<a;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5578:function(n,e,t){t.r(e),t.d(e,{assets:function(){return s},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return c}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),l=["components"],o={},p="\u8f93\u5165\u8f93\u51fa\u6d41",u={unversionedId:"quickstart/io-stream",id:"quickstart/io-stream",title:"\u8f93\u5165\u8f93\u51fa\u6d41",description:"\u8f93\u5165\u8f93\u51fa\u662f\u4eba\u673a\u4ea4\u4e92\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u6700\u5e38\u89c1\u7684\u8f93\u5165\u8f93\u51fa\u662f\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u548c\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\uff08\u5f53\u7136\u8fd8\u6709\u6570\u636e\u5e93\u8f93\u5165\u8f93\u51fa\uff0c\u672c\u8282\u4e0d\u8ba8\u8bba\u8fd9\u90e8\u5206\uff09\u3002",source:"@site/docs/quickstart/io-stream.md",sourceDirName:"quickstart",slug:"/quickstart/io-stream",permalink:"/rust-docs/docs/quickstart/io-stream",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quickstart/io-stream.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u51fd\u6570\u4e0e\u65b9\u6cd5",permalink:"/rust-docs/docs/quickstart/function-method"},next:{title:"\u6a21\u5757\u4e0e\u5c5e\u6027",permalink:"/rust-docs/docs/quickstart/module-attribute"}},s={},c=[{value:"\u6807\u51c6\u8f93\u5165",id:"\u6807\u51c6\u8f93\u5165",level:2},{value:"\u6807\u51c6\u8f93\u51fa",id:"\u6807\u51c6\u8f93\u51fa",level:2},{value:"\u6587\u4ef6\u8f93\u5165",id:"\u6587\u4ef6\u8f93\u5165",level:2},{value:"\u6587\u4ef6\u8f93\u51fa",id:"\u6587\u4ef6\u8f93\u51fa",level:2}],d={toc:c};function m(n){var e=n.components,t=(0,i.Z)(n,l);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u8f93\u5165\u8f93\u51fa\u6d41"},"\u8f93\u5165\u8f93\u51fa\u6d41"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u8f93\u5165\u8f93\u51fa"),"\u662f\u4eba\u673a\u4ea4\u4e92\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u6700\u5e38\u89c1\u7684\u8f93\u5165\u8f93\u51fa\u662f\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u548c\u6587\u4ef6\u8f93\u5165\u8f93\u51fa\uff08\u5f53\u7136\u8fd8\u6709\u6570\u636e\u5e93\u8f93\u5165\u8f93\u51fa\uff0c\u672c\u8282\u4e0d\u8ba8\u8bba\u8fd9\u90e8\u5206\uff09\u3002"),(0,a.kt)("h2",{id:"\u6807\u51c6\u8f93\u5165"},"\u6807\u51c6\u8f93\u5165"),(0,a.kt)("p",null,"\u6807\u51c6\u8f93\u5165\u4e5f\u53eb\u4f5c\u63a7\u5236\u53f0\u8f93\u5165\uff0c\u662f\u5e38\u89c1\u8f93\u5165\u7684\u4e00\u79cd\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u4f8b\u5b501\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'use std::io;\n\nfn read_input() -> io::Result<()> {\n    let mut input = String::new();\n\n    try!(io::stdin().read_line(&mut input));\n\n    println!("You typed: {}", input.trim());\n\n    Ok(())\n}\n\nfn main() {\n    read_input();\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u4f8b\u5b502\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'use std::io;\nfn main() {\n    let mut input = String::new();\n\n    io::stdin().read_line(&mut input).expect("WTF!");\n\n    println!("You typed: {}", input.trim());\n}\n')),(0,a.kt)("p",null,"\u8fd9\u91cc\u4f53\u73b0\u4e86\u5e38\u89c1\u7684\u6807\u51c6\u8f93\u5165\u7684\u5904\u7406\u65b9\u5f0f\u3002\u4e24\u4e2a\u4f8b\u5b50\u90fd\u662f\u58f0\u660e\u4e86\u4e00\u4e2a\u53ef\u53d8\u7684\u5b57\u7b26\u4e32\u6765\u4fdd\u5b58\u8f93\u5165\u7684\u6570\u636e\u3002\n\u4ed6\u4eec\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u5728\u4e8e\u5904\u7406\u6f5c\u5728\u8f93\u5165\u5f02\u5e38\u7684\u65b9\u5f0f\u3002"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u4f8b\u5b50 1 \u4f7f\u7528\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"try!")," \u5b8f\u3002\u8fd9\u4e2a\u5b8f\u4f1a\u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"p"},"Result<(), io::Error>")," \u7c7b\u578b\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"io::Result<()>")," \u5c31\u662f\u8fd9\u4e2a\u7c7b\u578b\u7684\u522b\u540d\u3002\u6240\u4ee5\u4f8b\u5b50 1 \u9700\u8981\u5355\u72ec\u4f7f\u7528\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"read_input")," \u51fd\u6570\u6765\u63a5\u6536\u8fd9\u4e2a\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," \u51fd\u6570\u91cc\u9762\uff0c\u56e0\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," \u51fd\u6570\u5e76\u6ca1\u6709\u63a5\u6536 ",(0,a.kt)("inlineCode",{parentName:"p"},"io::Result<()>")," \u4f5c\u4e3a\u8fd4\u56de\u7c7b\u578b\u3002")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"\u4f8b\u5b50 2 \u4f7f\u7528\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"Result<(), io::Error>")," \u7c7b\u578b\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"expect")," \u65b9\u6cd5\u6765\u63a5\u6536 ",(0,a.kt)("inlineCode",{parentName:"p"},"io::stdin().read_line")," \u7684\u8fd4\u56de\u7c7b\u578b\u3002\u5e76\u5904\u7406\u53ef\u80fd\u6f5c\u5728\u7684 io \u5f02\u5e38\u3002"))),(0,a.kt)("h2",{id:"\u6807\u51c6\u8f93\u51fa"},"\u6807\u51c6\u8f93\u51fa"),(0,a.kt)("p",null,"\u6807\u51c6\u8f93\u51fa\u4e5f\u53eb\u63a7\u5236\u53f0\u8f93\u51fa\uff0cRust \u91cc\u9762\u5e38\u89c1\u7684\u6807\u51c6\u8f93\u51fa\u5b8f\u6709 ",(0,a.kt)("inlineCode",{parentName:"p"},"print!")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"println!"),"\u3002\u5b83\u4eec\u7684\u533a\u522b\u662f\u540e\u8005\u6bd4\u524d\u8005\u5728\u672b\u5c3e\u591a\u8f93\u51fa\u4e00\u4e2a\u6362\u884c\u7b26\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u4f8b\u5b501\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    print!("this ");\n    print!("will ");\n    print!("be ");\n    print!("on ");\n    print!("the ");\n    print!("same ");\n    print!("line ");\n\n    print!("this string has a newline, why not choose println! instead?\\n");\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u4f8b\u5b502\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'fn main() {\n    println!("hello there!");\n    println!("format {} arguments", "some");\n}\n')),(0,a.kt)("p",null,"\u8fd9\u91cc\u4e24\u4e2a\u4f8b\u5b50\u90fd\u6bd4\u8f83\u7b80\u5355\u3002\u8bfb\u8005\u53ef\u4ee5\u8fd0\u884c\u4e00\u4e0b\u67e5\u770b\u8f93\u51fa\u7ed3\u679c\u5bf9\u6bd4\u4e00\u4e0b\u4ed6\u4eec\u7684\u533a\u522b\u3002\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\u4f8b\u5b50 2 \u4e2d\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"{ }")," \u4f1a\u88ab ",(0,a.kt)("inlineCode",{parentName:"p"},'"some"')," \u6240\u66ff\u6362\u3002\u8fd9\u662f rust \u91cc\u9762\u7684\u4e00\u79cd\u683c\u5f0f\u5316\u8f93\u51fa\u3002"),(0,a.kt)("p",null,"\u6807\u51c6\u5316\u7684\u8f93\u51fa\u662f\u884c\u7f13\u51b2(line-buffered)\u7684,\u8fd9\u5c31\u5bfc\u81f4\u6807\u51c6\u5316\u7684\u8f93\u51fa\u5728\u9047\u5230\u4e00\u4e2a\u65b0\u884c\u4e4b\u524d\u5e76\u4e0d\u4f1a\u88ab\u9690\u5f0f\u5237\u65b0\u3002\n\u6362\u53e5\u8bdd\u8bf4  ",(0,a.kt)("inlineCode",{parentName:"p"},"print!")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"println!")," \u4e8c\u8005\u7684\u6548\u679c\u5e76\u4e0d\u603b\u662f\u76f8\u540c\u7684\u3002\n\u5982\u679c\u8bf4\u5f97\u66f4\u7b80\u5355\u660e\u4e86\u4e00\u70b9\u5c31\u662f\uff0c\u60a8\u4e0d\u80fd\u628a ",(0,a.kt)("inlineCode",{parentName:"p"},"print!")," \u5f53\u505a\u662fC\u8bed\u8a00\u4e2d\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"printf")," \u8b6c\u5982\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'use std::io;\nfn main() {\n    print!("\u8bf7\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1a");\n    let mut input = String::new();\n    io::stdin()\n        .read_line(&mut input)\n        .expect("\u8bfb\u53d6\u5931\u8d25");\n    print!("\u60a8\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\uff1a{}\\n", input);\n}\n')),(0,a.kt)("p",null,"\u5728\u8fd9\u6bb5\u4ee3\u7801\u8fd0\u884c\u65f6\u5219\u4e0d\u4f1a\u5148\u51fa\u73b0\u9884\u671f\u7684\u63d0\u793a\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u884c\u6ca1\u6709\u88ab\u5237\u65b0\u3002\n\u5982\u679c\u60f3\u8981\u8fbe\u5230\u9884\u671f\u7684\u6548\u679c\u5c31\u8981\u663e\u793a\u7684\u5237\u65b0\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'use std::io::{self, Write};\nfn main() {\n    print!("\u8bf7\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1a");\n    io::stdout().flush().unwrap();\n    let mut input = String::new();\n    io::stdin()\n        .read_line(&mut input)\n        .expect("\u8bfb\u53d6\u5931\u8d25");\n    print!("\u60a8\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\uff1a{}\\n", input);\n}\n')),(0,a.kt)("h2",{id:"\u6587\u4ef6\u8f93\u5165"},"\u6587\u4ef6\u8f93\u5165"),(0,a.kt)("p",null,"\u6587\u4ef6\u8f93\u5165\u548c\u6807\u51c6\u8f93\u5165\u90fd\u5dee\u4e0d\u591a\uff0c\u9664\u4e86\u8f93\u5165\u6d41\u6307\u5411\u4e86\u6587\u4ef6\u800c\u4e0d\u662f\u63a7\u5236\u53f0\u3002\u4e0b\u9762\u4f8b\u5b50\u91c7\u7528\u4e86\u6a21\u5f0f\u5339\u914d\u6765\u5904\u7406\u6f5c\u5728\u7684\u8f93\u5165\u9519\u8bef"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u4f8b\u5b50\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'use std::error::Error;\nuse std::fs::File;\nuse std::io::prelude::*;\nuse std::path::Path;\n\nfn main() {\n    // \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u8def\u5f84\n    let path = Path::new("hello.txt");\n    let display = path.display();\n\n    // \u6253\u5f00\u6587\u4ef6\u53ea\u8bfb\u6a21\u5f0f, \u8fd4\u56de\u4e00\u4e2a `io::Result<File>` \u7c7b\u578b\n    let mut file = match File::open(&path) {\n        // \u5904\u7406\u6253\u5f00\u6587\u4ef6\u53ef\u80fd\u6f5c\u5728\u7684\u9519\u8bef\n        Err(why) => panic!("couldn\'t open {}: {}", display,\n                                                   Error::description(&why)),\n        Ok(file) => file,\n    };\n\n    // \u6587\u4ef6\u8f93\u5165\u6570\u636e\u5230\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de `io::Result<usize>` \u7c7b\u578b\n    let mut s = String::new();\n    match file.read_to_string(&mut s) {\n        Err(why) => panic!("couldn\'t read {}: {}", display,\n                                                   Error::description(&why)),\n        Ok(_) => print!("{} contains:\\n{}", display, s),\n    }\n}\n')),(0,a.kt)("h2",{id:"\u6587\u4ef6\u8f93\u51fa"},"\u6587\u4ef6\u8f93\u51fa"),(0,a.kt)("p",null,"\u6587\u4ef6\u8f93\u51fa\u548c\u6807\u51c6\u5e93\u8f93\u51fa\u4e5f\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7\u662f\u628a\u8f93\u51fa\u6d41\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\u4e2d\u3002\u4e0b\u9762\u8be6\u7ec6\u770b\u4f8b\u5b50\u3002"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u4f8b\u5b50\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'// \u8f93\u51fa\u6587\u672c\nstatic LOREM_IPSUM: &\'static str =\n"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\nconsequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\ncillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\nproident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n";\n\nuse std::error::Error;\nuse std::io::prelude::*;\nuse std::fs::File;\nuse std::path::Path;\n\nfn main() {\n    let path = Path::new("out/lorem_ipsum.txt");\n    let display = path.display();\n\n    // \u7528\u53ea\u5199\u6a21\u5f0f\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u5e76\u8fd4\u56de `io::Result<File>` \u7c7b\u578b\n    let mut file = match File::create(&path) {\n        Err(why) => panic!("couldn\'t create {}: {}",\n                           display,\n                           Error::description(&why)),\n        Ok(file) => file,\n    };\n\n    // \u5199\u5165 `LOREM_IPSUM` \u5b57\u7b26\u4e32\u5230\u6587\u4ef6\u4e2d, \u5e76\u8fd4\u56de `io::Result<()>` \u7c7b\u578b\n    match file.write_all(LOREM_IPSUM.as_bytes()) {\n        Err(why) => {\n            panic!("couldn\'t write to {}: {}", display,\n                                               Error::description(&why))\n        },\n        Ok(_) => println!("successfully wrote to {}", display),\n    }\n}\n')))}m.isMDXComponent=!0}}]);