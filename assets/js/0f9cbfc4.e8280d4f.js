"use strict";(self.webpackChunkrust_docs=self.webpackChunkrust_docs||[]).push([[6005],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,b=d["".concat(l,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(b,p(p({ref:t},s),{},{components:n})):r.createElement(b,p({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,p=new Array(i);p[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,p[1]=o;for(var u=2;u<i;u++)p[u]=n[u];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3576:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return c}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),p=["components"],o={},l="pub restricted",u={unversionedId:"module/pub-restricted",id:"module/pub-restricted",title:"pub restricted",description:"\u6982\u89c8",source:"@site/docs/module/pub-restricted.md",sourceDirName:"module",slug:"/module/pub-restricted",permalink:"/rust-docs/docs/module/pub-restricted",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/module/pub-restricted.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Prelude",permalink:"/rust-docs/docs/module/prelude"},next:{title:"\u8fd0\u7b97\u7b26\u91cd\u8f7d",permalink:"/rust-docs/docs/operator-overloading/operator"}},s={},c=[{value:"\u6982\u89c8",id:"\u6982\u89c8",level:2},{value:"\u8bbe\u8ba1\u52a8\u56e0",id:"\u8bbe\u8ba1\u52a8\u56e0",level:2},{value:"pub restricted \u7684\u4f7f\u7528",id:"pub-restricted-\u7684\u4f7f\u7528",level:2},{value:"Syntax",id:"syntax",level:3},{value:"\u4fee\u6539\u793a\u4f8b",id:"\u4fee\u6539\u793a\u4f8b",level:3},{value:"\u9650\u5236\u5b57\u6bb5\u793a\u4f8b",id:"\u9650\u5236\u5b57\u6bb5\u793a\u4f8b",level:3},{value:"Crate \u9650\u5236\u793a\u4f8b",id:"crate-\u9650\u5236\u793a\u4f8b",level:3}],d={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,p);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pub-restricted"},"pub restricted"),(0,i.kt)("h2",{id:"\u6982\u89c8"},"\u6982\u89c8"),(0,i.kt)("p",null,"\u8fd9\u662f rust1.18 \u65b0\u589e\u7684\u4e00\u4e2a\u8bed\u6cd5\u3002\u5728\u6b64\u4e4b\u524d\u7684\u7248\u672c\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"item")," \u53ea\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"pub"),"/non-",(0,i.kt)("inlineCode",{parentName:"p"},"pub")," \u4e24\u79cd\u5206\u7c7b\uff0cpub restricted \u8fd9\u4e2a\u8bed\u6cd5\u7528\u6765\u6269\u5c55 ",(0,i.kt)("inlineCode",{parentName:"p"},"pub")," \u7684\u4f7f\u7528\uff0c\u4f7f\u5176\u80fd\u591f\u6307\u5b9a\u60f3\u8981\u7684\u4f5c\u7528\u57df","(","\u53ef\u89c1\u8303\u56f4",")","\uff0c\u8be6\u60c5\u53c2\u89c1RFC ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/rust-lang/rfcs/blob/master/text/1422-pub-restricted.md"},"1422-pub-restricted.md"),"\u3002"),(0,i.kt)("p",null,"\u5728 Rust \u4e2d ",(0,i.kt)("inlineCode",{parentName:"p"},"crate")," \u662f\u4e00\u4e2a\u6a21\u5757\u6811\uff0c\u53ef\u4ee5\u901a\u8fc7\u8868\u8fbe\u5f0f ",(0,i.kt)("inlineCode",{parentName:"p"},"pub(crate) item;")," \u6765\u9650\u5236 ",(0,i.kt)("inlineCode",{parentName:"p"},"item")," \u53ea\u5728\u5f53\u524d ",(0,i.kt)("inlineCode",{parentName:"p"},"crate")," \u4e2d\u53ef\u7528\uff0c\u5728\u5f53\u524d ",(0,i.kt)("inlineCode",{parentName:"p"},"crate")," \u7684\u5176\u4ed6\u5b50\u6811\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"use + path")," \u7684\u8bed\u6cd5\u6765\u5f15\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"item"),"\u3002"),(0,i.kt)("h2",{id:"\u8bbe\u8ba1\u52a8\u56e0"},"\u8bbe\u8ba1\u52a8\u56e0"),(0,i.kt)("p",null,"Rust1.18 \u4e4b\u524d\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u8bbe\u8ba1\u4e00\u4e2a item ",(0,i.kt)("inlineCode",{parentName:"p"},"x")," \u53ef\u4ee5\u5728\u591a\u5904\u4f7f\u7528\uff0c\u90a3\u4e48\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5728\u6839\u76ee\u5f55\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u975e ",(0,i.kt)("inlineCode",{parentName:"li"},"pub")," item\uff1b"),(0,i.kt)("li",{parentName:"ul"},"\u5728\u5b50\u6a21\u5757\u4e2d\u5b9a\u4e49\u4e00\u4e2a ",(0,i.kt)("inlineCode",{parentName:"li"},"pub")," item\uff0c\u540c\u65f6\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"li"},"use")," \u5c06\u8fd9\u4e2a\u9879\u76ee\u5f15\u7528\u5230\u6839\u76ee\u5f55\u3002 ")),(0,i.kt)("p",null,"\u4f46\u662f\uff0c\u6709\u65f6\u5019\u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u5bf9\u4e8e\u67d0\u4e9b\u7279\u5b9a\u7684\u6a21\u5757\uff0c\u8be5item\u53ef\u89c1\uff0c\u800c\u5176\u4ed6\u6a21\u5757\u4e0d\u53ef\u89c1\u3002"),(0,i.kt)("p",null,"\u4e0b\u9762\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Rust"},'// Intent: `a` exports `I`, `bar`, and `foo`, but nothing else.\npub mod a {\n    pub const I: i32 = 3;\n\n    // `semisecret` will be used "many" places within `a`, but\n    // is not meant to be exposed outside of `a`.\n    fn semisecret(x: i32) -> i32  { use self::b::c::J; x + J }\n\n    pub fn bar(z: i32) -> i32 { semisecret(I) * z }\n    pub fn foo(y: i32) -> i32 { semisecret(I) + y }\n\n    mod b {\n        mod c {\n            const J: i32 = 4; // J is meant to be hidden from the outside world.\n        }\n    }\n}\n')),(0,i.kt)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7\uff0c\u56e0\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"J")," \u65e0\u6cd5\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"mod c")," \u7684\u5916\u90e8\u8bbf\u95ee\uff0c\u800c ",(0,i.kt)("inlineCode",{parentName:"p"},"fn semisecret")," \u5c1d\u8bd5\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"mod a")," \u4e2d\u8bbf\u95ee ",(0,i.kt)("inlineCode",{parentName:"p"},"J"),"."),(0,i.kt)("p",null,"\u5728 rust1.18 \u4e4b\u524d\uff0c\u4fdd\u6301",(0,i.kt)("inlineCode",{parentName:"p"},"J"),"\u79c1\u6709\uff0c\u5e76\u80fd\u591f\u8ba9 ",(0,i.kt)("inlineCode",{parentName:"p"},"a")," \u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"fn semisecret")," \u7684\u6b63\u786e\u5199\u6cd5\u662f\uff0c\u5c06 ",(0,i.kt)("inlineCode",{parentName:"p"},"fn semisecret")," \u79fb\u52a8\u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"mod c")," \u4e2d\uff0c\u5e76\u5c06\u5176 ",(0,i.kt)("inlineCode",{parentName:"p"},"pub"),"\uff0c\u4e4b\u540e\u6839\u636e\u9700\u8981\u53ef\u4ee5\u91cd\u65b0\u5bfc\u51fa ",(0,i.kt)("inlineCode",{parentName:"p"},"semisecret"),"\u3002(\u5982\u679c\u4e0d\u9700\u8981\u4fdd\u6301 ",(0,i.kt)("inlineCode",{parentName:"p"},"J")," \u7684\u79c1\u6709\u5316\uff0c\u90a3\u4e48\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c ",(0,i.kt)("inlineCode",{parentName:"p"},"pub"),"\uff0c\u4e4b\u540e\u53ef\u4ee5\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"b")," \u4e2d ",(0,i.kt)("inlineCode",{parentName:"p"},"pub use self::c::J")," \u6216\u8005\u76f4\u63a5 ",(0,i.kt)("inlineCode",{parentName:"p"},"pub c"),")"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Rust"},'// Intent: `a` exports `I`, `bar`, and `foo`, but nothing else.\npub mod a {\n    pub const I: i32 = 3;\n\n    // `semisecret` will be used "many" places within `a`, but\n    // is not meant to be exposed outside of `a`.\n    // (If we put `pub use` here, then *anyone* could access it.)\n    use self::b::semisecret;\n\n    pub fn bar(z: i32) -> i32 { semisecret(I) * z }\n    pub fn foo(y: i32) -> i32 { semisecret(I) + y }\n\n    mod b {\n        pub use self::c::semisecret;\n        mod c {\n            const J: i32 = 4; // J is meant to be hidden from the outside world.\n            pub fn semisecret(x: i32) -> i32  { x + J }\n        }\n    }\n}\n')),(0,i.kt)("p",null,"\u8fd9\u79cd\u60c5\u51b5\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u662f\uff0c\u8fd9\u91cc\u6709\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\uff1a\u6ca1\u6709\u4eba\u80fd\u591f\u5341\u5206\u6e05\u6670\u7684\u8bf4\u660e ",(0,i.kt)("inlineCode",{parentName:"p"},"pub fn semisecret")," \u4f7f\u7528\u5230\u4e86\u54ea\u4e9b\u5730\u65b9\uff0c\u9700\u8981\u901a\u8fc7\u4e0a\u4e0b\u6587\u8fdb\u884c\u5224\u65ad\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u6240\u6709\u53ef\u4ee5\u8bbf\u95ee ",(0,i.kt)("inlineCode",{parentName:"li"},"semisecret")," \u7684\u6a21\u5757\uff1b"),(0,i.kt)("li",{parentName:"ol"},"\u5728\u6240\u6709\u53ef\u4ee5\u8bbf\u95ee ",(0,i.kt)("inlineCode",{parentName:"li"},"semisecret")," \u7684\u6a21\u5757\u4e2d\uff0c\u662f\u5426\u5b58\u5728 ",(0,i.kt)("inlineCode",{parentName:"li"},"semisecret")," \u7684 re-export;")),(0,i.kt)("p",null,"\u540c\u65f6\uff0c\u5982\u679c\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"a")," \u4e2d\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"pub use self::b::semisecret")," \uff0c\u90a3\u4e48\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"use")," \u8bbf\u95ee ",(0,i.kt)("inlineCode",{parentName:"p"},"fn semisecret"),"\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u9700\u8981\u8ba9 ",(0,i.kt)("inlineCode",{parentName:"p"},"mod a")," \u8bbf\u95ee\u5c31\u53ef\u4ee5\u4e86\u3002"),(0,i.kt)("h2",{id:"pub-restricted-\u7684\u4f7f\u7528"},"pub restricted \u7684\u4f7f\u7528"),(0,i.kt)("h3",{id:"syntax"},"Syntax"),(0,i.kt)("p",null,"old:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"VISIBILITY ::= <empty> | `pub`\n")),(0,i.kt)("p",null,"new:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"VISIBILITY ::= <empty> | `pub` | `pub` `(` USE_PATH `)` | `pub` `(` `crate` `)`\n")),(0,i.kt)("p",null,"pub","(","restriction",")"," \u610f\u5473\u7740\u5bf9 item\uff0cmethod\uff0cfield\u7b49\u7684\u5b9a\u4e49\u52a0\u4ee5\u53ef\u89c1\u8303\u56f4\uff08\u4f5c\u7528\u57df\uff09\u7684\u9650\u5236\u3002"),(0,i.kt)("p",null,"\u53ef\u89c1\u8303\u56f4\uff08\u4f5c\u7528\u57df\uff09\u5206\u4e3a\u6240\u6709 crate ","(","\u65e0\u9650\u5236",")","\uff0c\u5f53\u524d crate\uff0c\u5f53\u524d crate \u4e2d\u7684\u5b50\u6a21\u5757\u7684\u7edd\u5bf9\u8def\u5f84\u3002\u88ab\u9650\u5236\u7684\u4e1c\u897f\u4e0d\u80fd\u5728\u5176\u9650\u5236\u8303\u56f4\u4e4b\u5916\u76f4\u63a5\u4f7f\u7528\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pub")," \u65e0\u660e\u786e\u6307\u5b9a\u610f\u5473\u7740\u65e0\u9650\u5236\uff1b"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pub(crate)")," \u5f53\u524d crate \u6709\u6548\uff1b"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pub(in <path>)")," \u5728 ",(0,i.kt)("inlineCode",{parentName:"li"},"<path>")," \u8868\u793a\u7684\u6a21\u5757\u4e2d\u6709\u6548\u3002")),(0,i.kt)("h3",{id:"\u4fee\u6539\u793a\u4f8b"},"\u4fee\u6539\u793a\u4f8b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Rust"},'// Intent: `a` exports `I`, `bar`, and `foo`, but nothing else.\npub mod a {\n    pub const I: i32 = 3;\n\n    // `semisecret` will be used "many" places within `a`, but\n    // is not meant to be exposed outside of `a`.\n    // (`pub use` would be *rejected*; see Note 1 below)\n    use self::b::semisecret;\n\n    pub fn bar(z: i32) -> i32 { semisecret(I) * z }\n    pub fn foo(y: i32) -> i32 { semisecret(I) + y }\n\n    mod b {\n        pub(in a) use self::c::semisecret;\n        mod c {\n            const J: i32 = 4; // J is meant to be hidden from the outside world.\n\n            // `pub(in a)` means "usable within hierarchy of `mod a`, but not\n            // elsewhere."\n            pub(in a) fn semisecret(x: i32) -> i32  { x + J }\n        }\n    }\n}\n')),(0,i.kt)("p",null,"Note 1: \u5982\u679c\u6539\u6210\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Rust"},"pub mod a { [...] pub use self::b::semisecret; [...] }\n")),(0,i.kt)("p",null,"\u56e0\u4e3a ",(0,i.kt)("inlineCode",{parentName:"p"},"pub(in a) fn semisecret")," \u8bf4\u660e\u8fd9\u4e2a\u51fd\u6570\u53ea\u80fd\u5728 ",(0,i.kt)("inlineCode",{parentName:"p"},"a")," \u4e2d\u4f7f\u7528\uff0c\u4e0d\u5141\u8bb8 ",(0,i.kt)("inlineCode",{parentName:"p"},"pub")," \u51fa ",(0,i.kt)("inlineCode",{parentName:"p"},"a")," \u7684\u8303\u56f4\u3002"),(0,i.kt)("h3",{id:"\u9650\u5236\u5b57\u6bb5\u793a\u4f8b"},"\u9650\u5236\u5b57\u6bb5\u793a\u4f8b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Rust"},"mod a {\n    #[derive(Default)]\n    struct Priv(i32);\n\n    pub mod b {\n        use a::Priv as Priv_a;\n\n        #[derive(Default)]\n        pub struct F {\n            pub    x: i32,\n                   y: Priv_a,\n            pub(in a) z: Priv_a,\n        }\n\n        #[derive(Default)]\n        pub struct G(pub i32, Priv_a, pub(in a) Priv_a);\n\n        // ... accesses to F.{x,y,z} ...\n        // ... accesses to G.{0,1,2} ...\n    }\n    // ... accesses to F.{x,z} ...\n    // ... accesses to G.{0,2} ...\n}\n\nmod k {\n    use a::b::{F, G};\n    // ... accesses to F and F.x ...\n    // ... accesses to G and G.0 ...\n}\n")),(0,i.kt)("h3",{id:"crate-\u9650\u5236\u793a\u4f8b"},"Crate \u9650\u5236\u793a\u4f8b"),(0,i.kt)("p",null,"Crate ",(0,i.kt)("inlineCode",{parentName:"p"},"c1"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Rust"},"pub mod a {\n    struct Priv(i32);\n\n    pub(crate) struct R { pub y: i32, z: Priv } // ok: field allowed to be more public\n    pub        struct S { pub y: i32, z: Priv }\n\n    pub fn to_r_bad(s: S) -> R { ... } //~ ERROR: `R` restricted solely to this crate\n\n    pub(crate) fn to_r(s: S) -> R { R { y: s.y, z: s.z } } // ok: restricted to crate\n}\n\nuse a::{R, S}; // ok: `a::R` and `a::S` are both visible\n\npub use a::R as ReexportAttempt; //~ ERROR: `a::R` restricted solely to this crate\n")),(0,i.kt)("p",null,"Crate ",(0,i.kt)("inlineCode",{parentName:"p"},"c2"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Rust"},"extern crate c1;\n\nuse c1::a::S; // ok: `S` is unrestricted\n\nuse c1::a::R; //~ ERROR: `c1::a::R` not visible outside of its crate\n")))}m.isMDXComponent=!0}}]);