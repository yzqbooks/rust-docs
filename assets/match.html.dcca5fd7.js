import{r as a,a as p,b as t,d as e,w as o,F as c,c as l,e as n,o as u}from"./app.a489c551.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const r={},k=l(`<h1 id="match\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#match\u5173\u952E\u5B57" aria-hidden="true">#</a> match\u5173\u952E\u5B57</h1><p>\u6A21\u5F0F\u5339\u914D\uFF0C\u591A\u51FA\u73B0\u5728\u51FD\u6570\u5F0F\u7F16\u7A0B\u8BED\u8A00\u4E4B\u4E2D\uFF0C\u4E3A\u5176\u590D\u6742\u7684\u7C7B\u578B\u7CFB\u7EDF\u63D0\u4F9B\u4E00\u4E2A\u7B80\u5355\u8F7B\u677E\u7684\u89E3\u6784\u80FD\u529B\u3002\u6BD4\u5982\u4ECEenum\u7B49\u6570\u636E\u7ED3\u6784\u4E2D\u53D6\u51FA\u6570\u636E\u7B49\u7B49\uFF0C\u4F46\u662F\u5728\u4E66\u5199\u4E0A\uFF0C\u76F8\u5BF9\u6BD4\u8F83\u590D\u6742\u3002\u6211\u4EEC\u6765\u770B\u4E00\u4E2A\u4F8B\u5B50:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">enum</span> <span class="token type-definition class-name">Direction</span> <span class="token punctuation">{</span>
    <span class="token class-name">East</span><span class="token punctuation">,</span>
    <span class="token class-name">West</span><span class="token punctuation">,</span>
    <span class="token class-name">North</span><span class="token punctuation">,</span>
    <span class="token class-name">South</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> dire <span class="token operator">=</span> <span class="token class-name">Direction</span><span class="token punctuation">::</span><span class="token class-name">South</span><span class="token punctuation">;</span>
    <span class="token keyword">match</span> dire <span class="token punctuation">{</span>
        <span class="token class-name">Direction</span><span class="token punctuation">::</span><span class="token class-name">East</span> <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;East&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">Direction</span><span class="token punctuation">::</span><span class="token class-name">North</span> <span class="token operator">|</span> <span class="token class-name">Direction</span><span class="token punctuation">::</span><span class="token class-name">South</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;South or North&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        _ <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;West&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8FD9\u662F\u4E00\u4E2A\u6CA1\u4EC0\u4E48\u5B9E\u9645\u610F\u4E49\u7684\u7A0B\u5E8F\uFF0C\u4F46\u662F\u80FD\u6E05\u695A\u7684\u8868\u8FBE\u51FAmatch\u7684\u7528\u6CD5\u3002\u770B\u5230\u8FD9\u91CC\uFF0C\u4F60\u80AF\u5B9A\u80FD\u60F3\u8D77\u4E00\u4E2A\u5E38\u89C1\u7684\u63A7\u5236\u8BED\u53E5\u2014\u2014<code>switch</code>\u3002\u6CA1\u9519\uFF0Cmatch\u53EF\u4EE5\u8D77\u5230\u548Cswitch\u76F8\u540C\u7684\u4F5C\u7528\u3002\u4E0D\u8FC7\u6709\u51E0\u70B9\u9700\u8981\u6CE8\u610F\uFF1A</p><ol><li>match\u6240\u7F57\u5217\u7684\u5339\u914D\uFF0C\u5FC5\u987B\u7A77\u4E3E\u51FA\u5176\u6240\u6709\u53EF\u80FD\u3002\u5F53\u7136\uFF0C\u4F60\u4E5F\u53EF\u4EE5\u7528 <strong>_</strong> \u8FD9\u4E2A\u7B26\u53F7\u6765\u4EE3\u8868\u5176\u4F59\u7684\u6240\u6709\u53EF\u80FD\u6027\u60C5\u51B5\uFF0C\u5C31\u7C7B\u4F3C\u4E8Eswitch\u4E2D\u7684<code>default</code>\u8BED\u53E5\u3002</li><li>match\u7684\u6BCF\u4E00\u4E2A\u5206\u652F\u90FD\u5FC5\u987B\u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u5E76\u4E14\uFF0C\u9664\u975E\u4E00\u4E2A\u5206\u652F\u4E00\u5B9A\u4F1A\u89E6\u53D1panic\uFF0C\u8FD9\u4E9B\u5206\u652F\u7684\u6240\u6709\u8868\u8FBE\u5F0F\u7684\u6700\u7EC8\u8FD4\u56DE\u503C\u7C7B\u578B\u5FC5\u987B\u76F8\u540C\u3002</li></ol><p>\u5173\u4E8E\u7B2C\u4E8C\u70B9\uFF0C\u6709\u7684\u540C\u5B66\u53EF\u80FD\u4E0D\u660E\u767D\u3002\u8FD9\u4E48\u8BF4\u5427\uFF0C\u4F60\u53EF\u4EE5\u628Amatch\u6574\u4F53\u89C6\u4E3A\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u65E2\u7136\u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u90A3\u4E48\u5C31\u4E00\u5B9A\u80FD\u6C42\u5F97\u5B83\u7684\u7ED3\u679C\u3002\u56E0\u6B64\uFF0C\u8FD9\u4E2A\u7ED3\u679C\u5F53\u7136\u5C31\u53EF\u4EE5\u88AB\u8D4B\u4E88\u4E00\u4E2A\u53D8\u91CF\u54AF\u3002 \u770B\u4EE3\u7801\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">enum</span> <span class="token type-definition class-name">Direction</span> <span class="token punctuation">{</span>
    <span class="token class-name">East</span><span class="token punctuation">,</span>
    <span class="token class-name">West</span><span class="token punctuation">,</span>
    <span class="token class-name">North</span><span class="token punctuation">,</span>
    <span class="token class-name">South</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// let d_panic = Direction::South;</span>
    <span class="token keyword">let</span> d_west <span class="token operator">=</span> <span class="token class-name">Direction</span><span class="token punctuation">::</span><span class="token class-name">West</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> d_str <span class="token operator">=</span> <span class="token keyword">match</span> d_west <span class="token punctuation">{</span>
        <span class="token class-name">Direction</span><span class="token punctuation">::</span><span class="token class-name">East</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;East&quot;</span><span class="token punctuation">,</span>
        <span class="token class-name">Direction</span><span class="token punctuation">::</span><span class="token class-name">North</span> <span class="token operator">|</span> <span class="token class-name">Direction</span><span class="token punctuation">::</span><span class="token class-name">South</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">&quot;South or North&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        _ <span class="token operator">=&gt;</span> <span class="token string">&quot;West&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> d_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="\u89E3\u6784\u521D\u7AA5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u6784\u521D\u7AA5" aria-hidden="true">#</a> \u89E3\u6784\u521D\u7AA5</h2><p>match\u8FD8\u6709\u4E00\u4E2A\u975E\u5E38\u91CD\u8981\u7684\u4F5C\u7528\u5C31\u662F\u5BF9\u73B0\u6709\u7684\u6570\u636E\u7ED3\u6784\u8FDB\u884C\u89E3\u6784\uFF0C\u8F7B\u6613\u7684\u53EF\u4EE5\u62FF\u51FA\u5176\u4E2D\u7684\u6570\u636E\u90E8\u5206\u6765\u3002 \u6BD4\u5982\uFF0C\u4EE5\u4E0B\u662F\u6BD4\u8F83\u5E38\u89C1\u7684\u4F8B\u5B50\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">enum</span> <span class="token type-definition class-name">Action</span> <span class="token punctuation">{</span>
    <span class="token class-name">Say</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token class-name">MoveTo</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">,</span> <span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token class-name">ChangeColorRGB</span><span class="token punctuation">(</span><span class="token keyword">u16</span><span class="token punctuation">,</span> <span class="token keyword">u16</span><span class="token punctuation">,</span> <span class="token keyword">u16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> action <span class="token operator">=</span> <span class="token class-name">Action</span><span class="token punctuation">::</span><span class="token class-name">Say</span><span class="token punctuation">(</span><span class="token string">&quot;Hello Rust&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">match</span> action <span class="token punctuation">{</span>
        <span class="token class-name">Action</span><span class="token punctuation">::</span><span class="token class-name">Say</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token class-name">Action</span><span class="token punctuation">::</span><span class="token class-name">MoveTo</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;point from (0, 0) move to ({}, {})&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token class-name">Action</span><span class="token punctuation">::</span><span class="token class-name">ChangeColorRGB</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;change color into &#39;(r:{}, g:{}, b:0)&#39;, &#39;b&#39; has been ignored&quot;</span><span class="token punctuation">,</span>
                r<span class="token punctuation">,</span> g<span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>`,10),m=n("\u6709\u4EBA\u8BF4\u4E86\uFF0C\u4ECE\u8FD9\u6765\u770B\u4E5F\u5E76\u4E0D\u89C9\u5F97match\u6709\u591A\u795E\u5947\u554A\uFF01\u522B\u6025\uFF0C\u8BF7\u770B\u4E0B\u4E00\u5C0F\u8282\u2014\u2014>"),b=n("\u6A21\u5F0F");function d(h,g){const s=a("RouterLink");return u(),p(c,null,[k,t("p",null,[m,e(s,{to:"/RustPrimer/match/pattern.html"},{default:o(()=>[b]),_:1})])],64)}var f=i(r,[["render",d],["__file","match.html.vue"]]);export{f as default};
