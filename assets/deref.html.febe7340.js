import{c as n}from"./app.a489c551.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="deref" tabindex="-1"><a class="header-anchor" href="#deref" aria-hidden="true">#</a> Deref</h1><p><code>Deref</code> \u662F <code>deref</code> \u64CD\u4F5C\u7B26 <code>*</code> \u7684 trait\uFF0C\u6BD4\u5982 <code>*v</code>\u3002</p><p>\u4E00\u822C\u7406\u89E3\uFF0C<code>*v</code> \u64CD\u4F5C\uFF0C\u662F <code>&amp;v</code> \u7684\u53CD\u5411\u64CD\u4F5C\uFF0C\u5373\u8BD5\u56FE\u7531\u8D44\u6E90\u7684\u5F15\u7528\u83B7\u53D6\u5230\u8D44\u6E90\u7684\u62F7\u8D1D\uFF08\u5982\u679C\u8D44\u6E90\u7C7B\u578B\u5B9E\u73B0\u4E86 <code>Copy</code>\uFF09\uFF0C\u6216\u6240\u6709\u6743\uFF08\u8D44\u6E90\u7C7B\u578B\u6CA1\u6709\u5B9E\u73B0 <code>Copy</code>\uFF09\u3002</p><p>Rust \u4E2D\uFF0C\u672C\u64CD\u4F5C\u7B26\u884C\u4E3A\u53EF\u4EE5\u91CD\u8F7D\u3002\u8FD9\u4E5F\u662F Rust \u64CD\u4F5C\u7B26\u7684\u57FA\u672C\u7279\u70B9\u3002\u672C\u8EAB\u6CA1\u6709\u4EC0\u4E48\u7279\u522B\u7684\u3002</p><h2 id="\u5F3A\u5236\u9690\u5F0F\u8F6C\u6362-coercion" tabindex="-1"><a class="header-anchor" href="#\u5F3A\u5236\u9690\u5F0F\u8F6C\u6362-coercion" aria-hidden="true">#</a> \u5F3A\u5236\u9690\u5F0F\u8F6C\u6362\uFF08coercion\uFF09</h2><p><code>Deref</code> \u795E\u5947\u7684\u5730\u65B9\u5E76\u4E0D\u5728\u672C\u8EAB <code>\u89E3\u5F15</code> \u8FD9\u4E2A\u610F\u4E49\u4E0A\uFF0CRust \u7684\u8BBE\u8BA1\u8005\u5728\u5B83\u4E4B\u4E0A\u9644\u52A0\u4E86\u4E00\u4E2A\u7279\u6027\uFF1A<code>\u5F3A\u5236\u9690\u5F0F\u8F6C\u6362</code>\uFF0C\u8FD9\u624D\u662F\u5B83\u795E\u5947\u4E4B\u5904\u3002</p><p>\u8FD9\u79CD\u9690\u5F0F\u8F6C\u6362\u7684\u89C4\u5219\u4E3A\uFF1A</p><p>\u4E00\u4E2A\u7C7B\u578B\u4E3A <code>T</code> \u7684\u5BF9\u8C61 <code>foo</code>\uFF0C\u5982\u679C <code>T: Deref&lt;Target=U&gt;</code>\uFF0C\u90A3\u4E48\uFF0C\u76F8\u5173 <code>foo</code> \u7684\u67D0\u4E2A\u667A\u80FD\u6307\u9488\u6216\u5F15\u7528\uFF08\u6BD4\u5982 <code>&amp;foo</code>\uFF09\u5728\u5E94\u7528\u7684\u65F6\u5019\u4F1A\u81EA\u52A8\u8F6C\u6362\u6210 <code>&amp;U</code>\u3002</p><p>\u7C97\u770B\u8FD9\u6761\u89C4\u5219\uFF0C\u8C8C\u4F3C\u6709\u70B9\u7C7B\u4F3C\u4E8E <code>AsRef</code>\uFF0C\u800C\u8DDF <code>\u89E3\u5F15</code> \u4F3C\u4E4E\u98CE\u9A6C\u725B\u4E0D\u76F8\u53CA\u3002\u5B9E\u9645\u91CC\u9762\u6709\u4E9B\u7384\u5999\u4E4B\u5904\u3002</p><p>Rust \u7F16\u8BD1\u5668\u4F1A\u5728\u505A <code>*v</code> \u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u81EA\u52A8\u5148\u628A <code>v</code> \u505A\u5F15\u7528\u5F52\u4E00\u5316\u64CD\u4F5C\uFF0C\u5373\u8F6C\u6362\u6210\u5185\u90E8\u901A\u7528\u5F15\u7528\u7684\u5F62\u5F0F <code>&amp;v</code>\uFF0C\u6574\u4E2A\u8868\u8FBE\u5F0F\u5C31\u53D8\u6210 <code>*&amp;v</code>\u3002\u8FD9\u91CC\u9762\u6709\u4E24\u79CD\u60C5\u51B5\uFF1A</p><ol><li>\u628A\u5176\u5B83\u7C7B\u578B\u7684\u6307\u9488\uFF08\u6BD4\u5982\u5728\u5E93\u4E2D\u5B9A\u4E49\u7684\uFF0C<code>Box</code>, <code>Rc</code>, <code>Arc</code>, <code>Cow</code> \u7B49\uFF09\uFF0C\u8F6C\u6210\u5185\u90E8\u6807\u51C6\u5F62\u5F0F <code>&amp;v</code>\uFF1B</li><li>\u628A\u591A\u91CD <code>&amp;</code> \uFF08\u6BD4\u5982\uFF1A<code>&amp;&amp;&amp;&amp;&amp;&amp;&amp;v</code>\uFF09\uFF0C\u7B80\u5316\u6210 <code>&amp;v</code>\uFF08\u901A\u8FC7\u63D2\u5165\u8DB3\u591F\u6570\u91CF\u7684 <code>*</code> \u8FDB\u884C\u89E3\u5F15\uFF09\u3002</li></ol><p>\u6240\u4EE5\uFF0C\u5B83\u5B9E\u9645\u4E0A\u5728\u89E3\u5F15\u7528\u4E4B\u524D\u505A\u4E86\u4E00\u4E2A\u5F15\u7528\u7684\u5F52\u4E00\u5316\u64CD\u4F5C\u3002</p><p>\u4E3A\u4EC0\u4E48\u8981\u8F6C\u5462\uFF1F \u56E0\u4E3A\u7F16\u8BD1\u5668\u8BBE\u8BA1\u7684\u80FD\u529B\u662F\uFF0C\u53EA\u80FD\u591F\u5BF9 <code>&amp;v</code> \u8FD9\u79CD\u5F15\u7528\u8FDB\u884C\u89E3\u5F15\u7528\u3002\u5176\u5B83\u5F62\u5F0F\u7684\u5B83\u4E0D\u8BA4\u8BC6\uFF0C\u6240\u4EE5\u8981\u505A\u5F15\u7528\u5F52\u4E00\u5316\u64CD\u4F5C\u3002</p><p>\u4F7F\u7528\u5F15\u7528\u8FDB\u884C\u8FC7\u6E21\u4E5F\u662F\u4E3A\u4E86\u80FD\u591F\u9632\u6B62\u4E0D\u5FC5\u8981\u7684\u62F7\u8D1D\u3002</p><p>\u4E0B\u9762\u4E3E\u4E00\u4E9B\u4F8B\u5B50\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// borrow a string for a second</span>
<span class="token punctuation">}</span>

<span class="token comment">// String implements Deref&lt;Target=str&gt;</span>
<span class="token keyword">let</span> owned <span class="token operator">=</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// therefore, this works:</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>owned<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u56E0\u4E3A <code>String</code> \u5B9E\u73B0\u4E86 <code>Deref&lt;Target=str&gt;</code>\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>rc<span class="token punctuation">::</span></span><span class="token class-name">Rc</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// borrow a string for a second</span>
<span class="token punctuation">}</span>

<span class="token comment">// String implements Deref&lt;Target=str&gt;</span>
<span class="token keyword">let</span> owned <span class="token operator">=</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> counted <span class="token operator">=</span> <span class="token class-name">Rc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>owned<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// therefore, this works:</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>counted<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u56E0\u4E3A <code>Rc&lt;T&gt;</code> \u5B9E\u73B0\u4E86 <code>Deref&lt;Target=T&gt;</code>\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// borrow a slice for a second</span>
<span class="token punctuation">}</span>

<span class="token comment">// Vec&lt;T&gt; implements Deref&lt;Target=[T]&gt;</span>
<span class="token keyword">let</span> owned <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token function">foo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>owned<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u56E0\u4E3A <code>Vec&lt;T&gt;</code> \u5B9E\u73B0\u4E86 <code>Deref&lt;Target=[T]&gt;</code>\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Foo</span><span class="token punctuation">;</span>

<span class="token keyword">impl</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token operator">&amp;&amp;</span><span class="token class-name">Foo</span><span class="token punctuation">;</span>

f<span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token operator">&amp;</span>f<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token operator">&amp;&amp;</span>f<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;&amp;</span><span class="token operator">&amp;&amp;</span>f<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4E0A\u9762\u90A3\u51E0\u79CD\u51FD\u6570\u7684\u8C03\u7528\uFF0C\u6548\u679C\u662F\u4E00\u6837\u7684\u3002</p><p><code>coercion</code> \u7684\u8BBE\u8BA1\uFF0C\u662F Rust \u4E2D\u4EC5\u6709\u7684\u7C7B\u578B\u9690\u5F0F\u8F6C\u6362\uFF0C\u8BBE\u8BA1\u5B83\u7684\u76EE\u7684\uFF0C\u662F\u4E3A\u4E86\u7B80\u5316\u7A0B\u5E8F\u7684\u4E66\u5199\uFF0C\u8BA9\u4EE3\u7801\u4E0D\u81F3\u4E8E\u8FC7\u4E8E\u7E41\u7410\u3002\u628A\u4EBA\u4ECE\u65E0\u5C3D\u7684\u7C7B\u578B\u7EC6\u8282\u4E2D\u89E3\u8131\u51FA\u6765\uFF0C\u8BA9\u4E66\u5199 Rust \u4EE3\u7801\u53D8\u6210\u4E00\u4EF6\u5FEB\u4E50\u7684\u4E8B\u60C5\u3002</p>`,24);function e(o,t){return p}var u=s(a,[["render",e],["__file","deref.html.vue"]]);export{u as default};
