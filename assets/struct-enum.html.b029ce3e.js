import{c as n}from"./app.a489c551.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u7ED3\u6784\u4F53\u4E0E\u679A\u4E3E" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u4E0E\u679A\u4E3E" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u4E0E\u679A\u4E3E</h1><h2 id="\u7ED3\u6784\u4F53" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53" aria-hidden="true">#</a> \u7ED3\u6784\u4F53</h2><p>\u7ED3\u6784\u4F53 (struct) \u662F\u4E00\u79CD\u8BB0\u5F55\u7C7B\u578B\uFF0C\u6240\u5305\u542B\u7684\u6BCF\u4E2A\u57DF (field) \u90FD\u6709\u4E00\u4E2A\u540D\u79F0\u3002 \u6BCF\u4E2A\u7ED3\u6784\u4F53\u4E5F\u90FD\u6709\u4E00\u4E2A\u540D\u79F0\uFF0C\u901A\u5E38\u4EE5\u5927\u5199\u5B57\u6BCD\u5F00\u5934\uFF0C\u4F7F\u7528\u9A7C\u5CF0\u547D\u540D\u6CD5\u3002 \u5143\u7EC4\u7ED3\u6784\u4F53 (tuple struct) \u662F\u7531\u5143\u7EC4\u548C\u7ED3\u6784\u4F53\u6DF7\u5408\u6784\u6210\uFF0C\u5143\u7EC4\u7ED3\u6784\u4F53\u6709\u540D\u79F0\uFF0C \u4F46\u662F\u5B83\u7684\u57DF\u6CA1\u6709\u3002\u5F53\u5143\u7EC4\u7ED3\u6784\u4F53\u53EA\u6709\u4E00\u4E2A\u57DF\u65F6\uFF0C\u79F0\u4E3A\u65B0\u7C7B\u578B (newtype)\u3002 \u6CA1\u6709\u4EFB\u4F55\u57DF\u7684\u7ED3\u6784\u4F53\uFF0C\u79F0\u4E3A\u7C7B\u5355\u5143\u7ED3\u6784\u4F53 (unit-like struct)\u3002 \u7ED3\u6784\u4F53\u4E2D\u7684\u503C\u9ED8\u8BA4\u662F\u4E0D\u53EF\u53D8\u7684\uFF0C\u9700\u8981\u7ED9\u7ED3\u6784\u4F53\u52A0\u4E0A<code>mut</code>\u4F7F\u5176\u53EF\u53D8\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// structs</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Point</span> <span class="token punctuation">{</span>
  x<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
  y<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> point <span class="token operator">=</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// tuple structs</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Color</span><span class="token punctuation">(</span><span class="token keyword">u8</span><span class="token punctuation">,</span> <span class="token keyword">u8</span><span class="token punctuation">,</span> <span class="token keyword">u8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> android_green <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xa4</span><span class="token punctuation">,</span> <span class="token number">0xc6</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>red<span class="token punctuation">,</span> green<span class="token punctuation">,</span> blue<span class="token punctuation">)</span> <span class="token operator">=</span> android_green<span class="token punctuation">;</span>

<span class="token comment">// A tuple struct\u2019s constructors can be used as functions.</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Digit</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> v <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> d<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">Digit</span><span class="token operator">&gt;</span> <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">into_iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Digit</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// newtype: a tuple struct with only one element</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Inches</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> length <span class="token operator">=</span> <span class="token class-name">Inches</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token class-name">Inches</span><span class="token punctuation">(</span>integer_length<span class="token punctuation">)</span> <span class="token operator">=</span> length<span class="token punctuation">;</span>

<span class="token comment">// unit-like structs</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">EmptyStruct</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> empty <span class="token operator">=</span> <span class="token class-name">EmptyStruct</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u4E00\u4E2A\u5305\u542B<code>..</code>\u7684<code>struct</code>\u53EF\u4EE5\u7528\u6765\u4ECE\u5176\u5B83\u7ED3\u6784\u4F53\u62F7\u8D1D\u4E00\u4E9B\u503C\u6216\u8005\u5728\u89E3\u6784\u65F6\u5FFD\u7565\u4E00\u4E9B\u57DF\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[derive(Default)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Point3d</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    y<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    z<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> origin <span class="token operator">=</span> <span class="token class-name">Point3d</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> point <span class="token operator">=</span> <span class="token class-name">Point3d</span> <span class="token punctuation">{</span> y<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">..</span>origin <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token class-name">Point3d</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> x0<span class="token punctuation">,</span> y<span class="token punctuation">:</span> y0<span class="token punctuation">,</span> <span class="token punctuation">..</span> <span class="token punctuation">}</span> <span class="token operator">=</span> point<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u9700\u8981\u6CE8\u610F\uFF0CRust\u5728\u8BED\u8A00\u7EA7\u522B\u4E0D\u652F\u6301\u57DF\u53EF\u53D8\u6027 (field mutability)\uFF0C\u6240\u4EE5\u4E0D\u80FD\u8FD9\u4E48\u5199\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Point</span> <span class="token punctuation">{</span>
    <span class="token keyword">mut</span> x<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    y<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u8FD9\u662F\u56E0\u4E3A\u53EF\u53D8\u6027\u662F\u7ED1\u5B9A\u7684\u4E00\u4E2A\u5C5E\u6027\uFF0C\u800C\u4E0D\u662F\u7ED3\u6784\u4F53\u81EA\u8EAB\u7684\u3002\u53EF\u4EE5\u4F7F\u7528<code>Cell&lt;T&gt;</code>\u6765\u6A21\u62DF\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>cell<span class="token punctuation">::</span></span><span class="token class-name">Cell</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token type-definition class-name">Point</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    y<span class="token punctuation">:</span> <span class="token class-name">Cell</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> point <span class="token operator">=</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token class-name">Cell</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

point<span class="token punctuation">.</span>y<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u6B64\u5916\uFF0C\u7ED3\u6784\u4F53\u7684\u57DF\u5BF9\u5176\u6240\u5728\u6A21\u5757 (mod) \u4E4B\u5916\u9ED8\u8BA4\u662F\u79C1\u6709\u7684\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>pub</code>\u5173\u952E\u5B57\u5C06\u5176\u8BBE\u7F6E\u6210\u516C\u5F00\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">mod</span> <span class="token module-declaration namespace">graph</span> <span class="token punctuation">{</span>
    <span class="token attribute attr-name">#[derive(Default)]</span>
    <span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Point</span> <span class="token punctuation">{</span>
        <span class="token keyword">pub</span> x<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
        y<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">inside_fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>x<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}, {}&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>x<span class="token punctuation">,</span> p<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">outside_fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token namespace">graph<span class="token punctuation">::</span></span><span class="token class-name">Point</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// println!(&quot;{}&quot;, p.y);</span>
    <span class="token comment">// field \`y\` of struct \`graph::Point\` is private</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="\u679A\u4E3E" tabindex="-1"><a class="header-anchor" href="#\u679A\u4E3E" aria-hidden="true">#</a> \u679A\u4E3E</h2><p>Rust\u6709\u4E00\u4E2A\u96C6\u5408\u7C7B\u578B\uFF0C\u79F0\u4E3A\u679A\u4E3E (enum)\uFF0C\u4EE3\u8868\u4E00\u7CFB\u5217\u5B50\u6570\u636E\u7C7B\u578B\u7684\u96C6\u5408\u3002 \u5176\u4E2D\u5B50\u6570\u636E\u7ED3\u6784\u53EF\u4EE5\u4E3A\u7A7A-\u5982\u679C\u5168\u90E8\u5B50\u6570\u636E\u7ED3\u6784\u90FD\u662F\u7A7A\u7684\uFF0C\u5C31\u7B49\u4EF7\u4E8EC\u8BED\u8A00\u4E2D\u7684enum\u3002 \u6211\u4EEC\u9700\u8981\u4F7F\u7528<code>::</code>\u6765\u83B7\u5F97\u6BCF\u4E2A\u5143\u7D20\u7684\u540D\u79F0\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// enums</span>
<span class="token keyword">enum</span> <span class="token type-definition class-name">Message</span> <span class="token punctuation">{</span>
    <span class="token class-name">Quit</span><span class="token punctuation">,</span>
    <span class="token class-name">ChangeColor</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">,</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> <span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token class-name">Move</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token keyword">i32</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token class-name">Write</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> x<span class="token punctuation">:</span> <span class="token class-name">Message</span> <span class="token operator">=</span> <span class="token class-name">Message</span><span class="token punctuation">::</span><span class="token class-name">Move</span> <span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4E0E\u7ED3\u6784\u4F53\u4E00\u6837\uFF0C\u679A\u4E3E\u4E2D\u7684\u5143\u7D20\u9ED8\u8BA4\u4E0D\u80FD\u4F7F\u7528\u5173\u7CFB\u8FD0\u7B97\u7B26\u8FDB\u884C\u6BD4\u8F83 (\u5982<code>==</code>, <code>!=</code>, <code>&gt;=</code>)\uFF0C \u4E5F\u4E0D\u652F\u6301\u50CF<code>+</code>\u548C<code>*</code>\u8FD9\u6837\u7684\u53CC\u76EE\u8FD0\u7B97\u7B26\uFF0C\u9700\u8981\u81EA\u5DF1\u5B9E\u73B0\uFF0C\u6216\u8005\u4F7F\u7528<code>match</code>\u8FDB\u884C\u5339\u914D\u3002</p><p>\u679A\u4E3E\u9ED8\u8BA4\u4E5F\u662F\u79C1\u6709\u7684\uFF0C\u5982\u679C\u4F7F\u7528<code>pub</code>\u4F7F\u5176\u53D8\u4E3A\u516C\u6709\uFF0C\u5219\u5B83\u7684\u5143\u7D20\u4E5F\u90FD\u662F\u9ED8\u8BA4\u516C\u6709\u7684\u3002 \u8FD9\u4E00\u70B9\u662F\u4E0E\u7ED3\u6784\u4F53\u4E0D\u540C\u7684\uFF1A\u5373\u4F7F\u7ED3\u6784\u4F53\u662F\u516C\u6709\u7684\uFF0C\u5B83\u7684\u57DF\u4ECD\u7136\u662F\u9ED8\u8BA4\u79C1\u6709\u7684\u3002\u8FD9\u91CC\u7684\u5171\u6709/\u79C1\u6709\u4ECD\u7136 \u662F\u9488\u5BF9\u5176\u5B9A\u4E49\u6240\u5728\u7684\u6A21\u5757\u4E4B\u5916\u3002\u6B64\u5916\uFF0C\u679A\u4E3E\u548C\u7ED3\u6784\u4F53\u4E5F\u53EF\u4EE5\u662F\u9012\u5F52\u7684 (recursive)\u3002</p>`,17);function t(e,c){return p}var u=s(a,[["render",t],["__file","struct-enum.html.vue"]]);export{u as default};
