import{c as n}from"./app.a489c551.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u7F51\u7EDC\u6A21\u5757-w\u732B\u7684\u56DE\u97F3" tabindex="-1"><a class="header-anchor" href="#\u7F51\u7EDC\u6A21\u5757-w\u732B\u7684\u56DE\u97F3" aria-hidden="true">#</a> \u7F51\u7EDC\u6A21\u5757:W\u732B\u7684\u56DE\u97F3</h1><p>\u672C\u4F8B\u5B50\u4E2D\uFF0CW\u732B\u5C06\u5E26\u5927\u5BB6\u5199\u4E00\u4E2A\u5927\u5BB6\u90FD\u5199\u8FC7\u4F46\u662F\u6CA1\u4EC0\u4E48\u4EBA\u7528\u8FC7\u7684TCP ECHO\u8F6F\u4EF6\uFF0C\u4F5C\u4E3A\u672C\u7AE0\u7684\u7ED3\u5C3E\u3002\u672C\u7A0B\u5E8F\u4EC5\u4F5C\u4E3A\u5B9E\u4F8B\u7A0B\u5E8F\uFF0C\u6211\u4E2A\u4EBA\u4F30\u8BA1\u4E5F\u6CA1\u6709\u4EBA\u5728\u5B9E\u9645\u7684\u751F\u6D3B\u4E2D\u53BB\u4F7F\u7528\u5979\u3002\u4E0D\u8FC7\uFF0C\u4F5C\u4E3A\u6807\u51C6\u5E93\u7684\u793A\u4F8B\u6765\u8BF4\uFF0C\u5DF2\u7ECF\u8DB3\u591F\u3002</p><p>\u9996\u5148\uFF0C\u6211\u4EEC\u9700\u8981\u4E00\u4E2A\u4E00\u4E2A\u670D\u52A1\u5668\u7AEF\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">server</span><span class="token operator">&lt;</span><span class="token class-name">A</span><span class="token punctuation">:</span> <span class="token class-name">ToSocketAddrs</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>addr<span class="token punctuation">:</span> <span class="token class-name">A</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5EFA\u7ACB\u4E00\u4E2A\u76D1\u542C\u7A0B\u5E8F</span>
    <span class="token keyword">let</span> listener <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token class-name">TcpListener</span><span class="token punctuation">::</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>addr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
    <span class="token comment">// \u8FD9\u4E2A\u7A0B\u5E8F\u4E00\u6B21\u53EA\u9700\u5904\u7406\u4E00\u4E2A\u94FE\u63A5\u5C31\u597D</span>
    <span class="token keyword">for</span> stream <span class="token keyword">in</span> listener<span class="token punctuation">.</span><span class="token function">incoming</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u901A\u8FC7match\u518D\u6B21\u89E3\u5305 stream\u5230</span>
        <span class="token keyword">match</span> stream <span class="token punctuation">{</span>
            <span class="token comment">// \u8FD9\u91CC\u5339\u914D\u7684\u91CD\u70B9\u662F\u5982\u4F55\u5C06\u4E00\u4E2Amut\u7684\u5339\u914D\u4F20\u7ED9\u4E00\u4E2AResult</span>
            <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token keyword">mut</span> st<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6211\u4EEC\u603B\u662F\u8981\u6C42client\u7AEF\u5148\u53D1\u9001\u6570\u636E</span>
                <span class="token comment">// \u51C6\u5907\u4E00\u4E2A\u8D85\u5927\u7684\u7F13\u51B2\u533A</span>
                <span class="token comment">// \u5F53\u7136\u4E86\uFF0C\u5728\u5B9E\u9645\u7684\u751F\u6D3B\u4E2D\u6211\u4EEC\u4E00\u822C\u4F1A\u91C7\u7528\u73AF\u5F62\u7F13\u51B2\u6765\u91CD\u590D\u5229\u7528\u5185\u5B58\u3002</span>
                <span class="token comment">// \u8FD9\u91CC\u4EC5\u4F5C\u6F14\u793A\uFF0C\u662F\u4E00\u79CD\u5F88\u4F4E\u6548\u7684\u505A\u6CD5</span>
                <span class="token keyword">let</span> <span class="token keyword">mut</span> buf<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">0u8</span><span class="token punctuation">;</span> <span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token comment">// \u901A\u8FC7try!\u65B9\u6CD5\u6765\u89E3\u5305</span>
                <span class="token comment">// try!\u65B9\u6CD5\u7684\u91CD\u70B9\u662F\u9700\u8981\u6709\u7279\u5B9A\u7684Error\u7C7B\u578B\u4E0E\u4E4B\u914D\u5408</span>
                <span class="token keyword">let</span> rcount <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">!</span><span class="token punctuation">(</span>st<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u53EA\u8F93\u51FA\u7F13\u51B2\u533A\u91CC\u8BFB\u53D6\u5230\u7684\u5185\u5BB9</span>
                <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">..</span>rcount<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u56DE\u5199\u5185\u5BB9</span>
                <span class="token keyword">let</span> wcount <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">!</span><span class="token punctuation">(</span>st<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">..</span>rcount<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u4EE5\u4E0B\u4EE3\u7801\u5B9E\u9645\u4E0A\u7B97\u662F\u903B\u8F91\u5904\u7406</span>
                <span class="token comment">// \u5E76\u975E\u6807\u51C6\u5E93\u7684\u4E00\u90E8\u5206\u4E86</span>
                <span class="token keyword">if</span> rcount <span class="token operator">!=</span> wcount <span class="token punctuation">{</span>
                    <span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">&quot;Not Fully Echo!, r={}, w={}&quot;</span><span class="token punctuation">,</span> rcount<span class="token punctuation">,</span> wcount<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u6E05\u9664\u6389\u5DF2\u7ECF\u8BFB\u5230\u7684\u5185\u5BB9</span>
                buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">Err</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5173\u95ED\u6389Serve\u7AEF\u7684\u94FE\u63A5</span>
    <span class="token function">drop</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><p>\u7136\u540E\uFF0C\u6211\u4EEC\u51C6\u5907\u4E00\u4E2A\u6A21\u62DFTCP\u77ED\u94FE\u63A5\u7684\u5BA2\u6237\u7AEF\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">client</span><span class="token operator">&lt;</span><span class="token class-name">A</span><span class="token punctuation">:</span> <span class="token class-name">ToSocketAddrs</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>addr<span class="token punctuation">:</span> <span class="token class-name">A</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>

    <span class="token keyword">let</span> <span class="token keyword">mut</span> buf <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">0u8</span><span class="token punctuation">;</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">loop</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5BF9\u6BD4Listener\uFF0CTcpStream\u5C31\u7B80\u5355\u5F88\u591A\u4E86</span>
        <span class="token comment">// \u672C\u6B21\u6A21\u62DF\u7684\u662Ftcp\u77ED\u94FE\u63A5\u7684\u8FC7\u7A0B\uFF0C\u53EF\u4EE5\u770B\u4F5C\u662F\u4E00\u4E2A\u5178\u578B\u7684HTTP\u4EA4\u4E92\u7684\u57FA\u7840IO\u6A21\u62DF</span>
        <span class="token comment">// \u5F53\u7136\uFF0C\u8FD9\u4E2A\u901A\u8BAF\u91CC\u9762\u5E76\u6CA1\u6709HTTP\u534F\u8BAE XD\uFF01</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> stream <span class="token operator">=</span> <span class="token class-name">TcpStream</span><span class="token punctuation">::</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>addr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token string">&quot;WaySLOG comming!&quot;</span><span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u907F\u514D\u53D1\u9001\u6570\u636E\u592A\u5FEB\u800C\u5237\u5C4F</span>
        <span class="token namespace">thread<span class="token punctuation">::</span></span><span class="token function">sleep_ms</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> rcount <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">!</span><span class="token punctuation">(</span>stream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> _ <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">!</span><span class="token punctuation">(</span>stream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> buf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">..</span>rcount<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buf<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u5C06\u6211\u4EEC\u7684\u7A0B\u5E8F\u62FC\u63A5\u8D77\u6765\u5982\u4E0B\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>net<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>io<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Read</span><span class="token punctuation">,</span> <span class="token class-name">Write</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>env<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>thread<span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">server</span><span class="token operator">&lt;</span><span class="token class-name">A</span><span class="token punctuation">:</span> <span class="token class-name">ToSocketAddrs</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>addr<span class="token punctuation">:</span> <span class="token class-name">A</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">..</span> <span class="token punctuation">}</span>


<span class="token keyword">fn</span> <span class="token function-definition function">client</span><span class="token operator">&lt;</span><span class="token class-name">A</span><span class="token punctuation">:</span> <span class="token class-name">ToSocketAddrs</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>addr<span class="token punctuation">:</span> <span class="token class-name">A</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">..</span> <span class="token punctuation">}</span>


<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> args <span class="token operator">=</span> <span class="token namespace">env<span class="token punctuation">::</span></span><span class="token function">args</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    args<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> action <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> action <span class="token operator">==</span> <span class="token string">&quot;s&quot;</span> <span class="token punctuation">{</span>
        <span class="token function">server</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>args<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">client</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>args<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u5404\u4F4D\u53EF\u4EE5\u81EA\u5DF1\u8BD5\u4E00\u4E0B\u7ED3\u679C</p><p>\u5199\u7F51\u7EDC\u7A0B\u5E8F\uFF0C\u6CE8\u5B9A\u4E86\u8981\u5904\u7406\u5404\u79CD\u795E\u5947\u7684\u6761\u4EF6\u548C\u9519\u8BEF\uFF0C\u5B9A\u4E49\u81EA\u5DF1\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u7C98\u5305\u95EE\u9898\u7B49\u90FD\u662F\u9700\u8981\u6211\u4EEC\u53BB\u5904\u7406\u548C\u5173\u6CE8\u7684\u3002\u76F8\u8F83\u800C\u8A00\uFF0CRust\u672C\u8EAB\u5728\u7F51\u7EDC\u65B9\u9762\u7684\u57FA\u7840\u8BBE\u65BD\u5EFA\u8BBE\u5E76\u4E0D\u5C3D\u5982\u4EBA\u610F\uFF0C\u751A\u81F3\u8FDE\u7F51\u7EDCI/O\u90FD\u53EA\u63D0\u4F9B\u4E86\u5982\u4E0A\u7684block I/O \u3002\u53EF\u80FD\u5176\u56E2\u961F\u66F4\u5173\u6CE8\u4E8E\u8BED\u8A00\u57FA\u7840\u8BED\u6CD5\u7279\u6027\u548C\u7F16\u8BD1\u7684\u6539\u8FDB\uFF0C\u4F46\u5176\u5B9E\uFF0C\u6709\u7740\u5B98\u65B9\u51FA\u54C1\u7684\u8FD9\u79CD\u7F51\u7EDC\u5E93\u662F\u975E\u5E38\u91CD\u8981\u7684\u3002\u540C\u65F6\uFF0C\u6211\u4E5F\u5E0C\u671BRust\u80FD\u591F\u6D8C\u73B0\u51FA\u66F4\u591A\u7684\u7F51\u7EDC\u5E93\u65B9\u6848\uFF0C\u8BA9Rust\u7684\u660E\u5929\u66F4\u597D\u66F4\u5149\u660E\u3002</p>`,10);function t(o,e){return p}var u=s(a,[["render",t],["__file","net.html.vue"]]);export{u as default};
