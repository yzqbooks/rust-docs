import{c as n}from"./app.a489c551.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u8F93\u5165\u8F93\u51FA\u6D41" tabindex="-1"><a class="header-anchor" href="#\u8F93\u5165\u8F93\u51FA\u6D41" aria-hidden="true">#</a> \u8F93\u5165\u8F93\u51FA\u6D41</h1><p><strong>\u8F93\u5165\u8F93\u51FA</strong>\u662F\u4EBA\u673A\u4EA4\u4E92\u7684\u4E00\u79CD\u65B9\u5F0F\u3002\u6700\u5E38\u89C1\u7684\u8F93\u5165\u8F93\u51FA\u662F\u6807\u51C6\u8F93\u5165\u8F93\u51FA\u548C\u6587\u4EF6\u8F93\u5165\u8F93\u51FA\uFF08\u5F53\u7136\u8FD8\u6709\u6570\u636E\u5E93\u8F93\u5165\u8F93\u51FA\uFF0C\u672C\u8282\u4E0D\u8BA8\u8BBA\u8FD9\u90E8\u5206\uFF09\u3002</p><h2 id="\u6807\u51C6\u8F93\u5165" tabindex="-1"><a class="header-anchor" href="#\u6807\u51C6\u8F93\u5165" aria-hidden="true">#</a> \u6807\u51C6\u8F93\u5165</h2><p>\u6807\u51C6\u8F93\u5165\u4E5F\u53EB\u4F5C\u63A7\u5236\u53F0\u8F93\u5165\uFF0C\u662F\u5E38\u89C1\u8F93\u5165\u7684\u4E00\u79CD\u3002</p><p><strong>\u4F8B\u5B501\uFF1A</strong></p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>io<span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">read_input</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> input <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token namespace">io<span class="token punctuation">::</span></span><span class="token function">stdin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">read_line</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> input<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;You typed: {}&quot;</span><span class="token punctuation">,</span> input<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">read_input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>\u4F8B\u5B502\uFF1A</strong></p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>io<span class="token punctuation">;</span>
<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> input <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token namespace">io<span class="token punctuation">::</span></span><span class="token function">stdin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">read_line</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> input<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;WTF!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;You typed: {}&quot;</span><span class="token punctuation">,</span> input<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD9\u91CC\u4F53\u73B0\u4E86\u5E38\u89C1\u7684\u6807\u51C6\u8F93\u5165\u7684\u5904\u7406\u65B9\u5F0F\u3002\u4E24\u4E2A\u4F8B\u5B50\u90FD\u662F\u58F0\u660E\u4E86\u4E00\u4E2A\u53EF\u53D8\u7684\u5B57\u7B26\u4E32\u6765\u4FDD\u5B58\u8F93\u5165\u7684\u6570\u636E\u3002 \u4ED6\u4EEC\u7684\u4E0D\u540C\u4E4B\u5904\u5728\u5728\u4E8E\u5904\u7406\u6F5C\u5728\u8F93\u5165\u5F02\u5E38\u7684\u65B9\u5F0F\u3002</p><ol><li><p>\u4F8B\u5B50 1 \u4F7F\u7528\u4E86 <code>try!</code> \u5B8F\u3002\u8FD9\u4E2A\u5B8F\u4F1A\u8FD4\u56DE <code>Result&lt;(), io::Error&gt;</code> \u7C7B\u578B\uFF0C<code>io::Result&lt;()&gt;</code> \u5C31\u662F\u8FD9\u4E2A\u7C7B\u578B\u7684\u522B\u540D\u3002\u6240\u4EE5\u4F8B\u5B50 1 \u9700\u8981\u5355\u72EC\u4F7F\u7528\u4E00\u4E2A <code>read_input</code> \u51FD\u6570\u6765\u63A5\u6536\u8FD9\u4E2A\u7C7B\u578B\uFF0C\u800C\u4E0D\u662F\u5728 <code>main</code> \u51FD\u6570\u91CC\u9762\uFF0C\u56E0\u4E3A <code>main</code> \u51FD\u6570\u5E76\u6CA1\u6709\u63A5\u6536 <code>io::Result&lt;()&gt;</code> \u4F5C\u4E3A\u8FD4\u56DE\u7C7B\u578B\u3002</p></li><li><p>\u4F8B\u5B50 2 \u4F7F\u7528\u4E86 <code>Result&lt;(), io::Error&gt;</code> \u7C7B\u578B\u7684 <code>expect</code> \u65B9\u6CD5\u6765\u63A5\u6536 <code>io::stdin().read_line</code> \u7684\u8FD4\u56DE\u7C7B\u578B\u3002\u5E76\u5904\u7406\u53EF\u80FD\u6F5C\u5728\u7684 io \u5F02\u5E38\u3002</p></li></ol><h2 id="\u6807\u51C6\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u6807\u51C6\u8F93\u51FA" aria-hidden="true">#</a> \u6807\u51C6\u8F93\u51FA</h2><p>\u6807\u51C6\u8F93\u51FA\u4E5F\u53EB\u63A7\u5236\u53F0\u8F93\u51FA\uFF0CRust \u91CC\u9762\u5E38\u89C1\u7684\u6807\u51C6\u8F93\u51FA\u5B8F\u6709 <code>print!</code> \u548C <code>println!</code>\u3002\u5B83\u4EEC\u7684\u533A\u522B\u662F\u540E\u8005\u6BD4\u524D\u8005\u5728\u672B\u5C3E\u591A\u8F93\u51FA\u4E00\u4E2A\u6362\u884C\u7B26\u3002</p><p><strong>\u4F8B\u5B501\uFF1A</strong></p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot;this &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot;will &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot;be &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot;on &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot;the &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot;same &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot;line &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot;this string has a newline, why not choose println! instead?\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>\u4F8B\u5B502\uFF1A</strong></p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;hello there!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;format {} arguments&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;some&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u8FD9\u91CC\u4E24\u4E2A\u4F8B\u5B50\u90FD\u6BD4\u8F83\u7B80\u5355\u3002\u8BFB\u8005\u53EF\u4EE5\u8FD0\u884C\u4E00\u4E0B\u67E5\u770B\u8F93\u51FA\u7ED3\u679C\u5BF9\u6BD4\u4E00\u4E0B\u4ED6\u4EEC\u7684\u533A\u522B\u3002 \u503C\u5F97\u6CE8\u610F\u7684\u662F\u4F8B\u5B50 2 \u4E2D\uFF0C<code>{ }</code> \u4F1A\u88AB <code>&quot;some&quot;</code> \u6240\u66FF\u6362\u3002\u8FD9\u662F rust \u91CC\u9762\u7684\u4E00\u79CD\u683C\u5F0F\u5316\u8F93\u51FA\u3002</p><p>\u6807\u51C6\u5316\u7684\u8F93\u51FA\u662F\u884C\u7F13\u51B2(line-buffered)\u7684,\u8FD9\u5C31\u5BFC\u81F4\u6807\u51C6\u5316\u7684\u8F93\u51FA\u5728\u9047\u5230\u4E00\u4E2A\u65B0\u884C\u4E4B\u524D\u5E76\u4E0D\u4F1A\u88AB\u9690\u5F0F\u5237\u65B0\u3002 \u6362\u53E5\u8BDD\u8BF4 <code>print!</code> \u548C <code>println!</code> \u4E8C\u8005\u7684\u6548\u679C\u5E76\u4E0D\u603B\u662F\u76F8\u540C\u7684\u3002 \u5982\u679C\u8BF4\u5F97\u66F4\u7B80\u5355\u660E\u4E86\u4E00\u70B9\u5C31\u662F\uFF0C\u60A8\u4E0D\u80FD\u628A <code>print!</code> \u5F53\u505A\u662FC\u8BED\u8A00\u4E2D\u7684 <code>printf</code> \u8B6C\u5982\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>io<span class="token punctuation">;</span>
<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF1A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> input <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token namespace">io<span class="token punctuation">::</span></span><span class="token function">stdin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">read_line</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> input<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BFB\u53D6\u5931\u8D25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot;\u60A8\u8F93\u5165\u7684\u5B57\u7B26\u4E32\u662F\uFF1A{}\\n&quot;</span><span class="token punctuation">,</span> input<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5728\u8FD9\u6BB5\u4EE3\u7801\u8FD0\u884C\u65F6\u5219\u4E0D\u4F1A\u5148\u51FA\u73B0\u9884\u671F\u7684\u63D0\u793A\u5B57\u7B26\u4E32\uFF0C\u56E0\u4E3A\u884C\u6CA1\u6709\u88AB\u5237\u65B0\u3002 \u5982\u679C\u60F3\u8981\u8FBE\u5230\u9884\u671F\u7684\u6548\u679C\u5C31\u8981\u663E\u793A\u7684\u5237\u65B0\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token class-name">Write</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BF7\u8F93\u5165\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF1A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token namespace">io<span class="token punctuation">::</span></span><span class="token function">stdout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> input <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token namespace">io<span class="token punctuation">::</span></span><span class="token function">stdin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">read_line</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> input<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BFB\u53D6\u5931\u8D25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot;\u60A8\u8F93\u5165\u7684\u5B57\u7B26\u4E32\u662F\uFF1A{}\\n&quot;</span><span class="token punctuation">,</span> input<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u6587\u4EF6\u8F93\u5165" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u8F93\u5165" aria-hidden="true">#</a> \u6587\u4EF6\u8F93\u5165</h2><p>\u6587\u4EF6\u8F93\u5165\u548C\u6807\u51C6\u8F93\u5165\u90FD\u5DEE\u4E0D\u591A\uFF0C\u9664\u4E86\u8F93\u5165\u6D41\u6307\u5411\u4E86\u6587\u4EF6\u800C\u4E0D\u662F\u63A7\u5236\u53F0\u3002\u4E0B\u9762\u4F8B\u5B50\u91C7\u7528\u4E86\u6A21\u5F0F\u5339\u914D\u6765\u5904\u7406\u6F5C\u5728\u7684\u8F93\u5165\u9519\u8BEF</p><p><strong>\u4F8B\u5B50\uFF1A</strong></p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>error<span class="token punctuation">::</span></span><span class="token class-name">Error</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>fs<span class="token punctuation">::</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>path<span class="token punctuation">::</span></span><span class="token class-name">Path</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u6587\u4EF6\u8DEF\u5F84</span>
    <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token class-name">Path</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;hello.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> display <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u6253\u5F00\u6587\u4EF6\u53EA\u8BFB\u6A21\u5F0F, \u8FD4\u56DE\u4E00\u4E2A \`io::Result&lt;File&gt;\` \u7C7B\u578B</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> file <span class="token operator">=</span> <span class="token keyword">match</span> <span class="token class-name">File</span><span class="token punctuation">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5904\u7406\u6253\u5F00\u6587\u4EF6\u53EF\u80FD\u6F5C\u5728\u7684\u9519\u8BEF</span>
        <span class="token class-name">Err</span><span class="token punctuation">(</span>why<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">&quot;couldn&#39;t open {}: {}&quot;</span><span class="token punctuation">,</span> display<span class="token punctuation">,</span>
                                                   <span class="token class-name">Error</span><span class="token punctuation">::</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>why<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> file<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">// \u6587\u4EF6\u8F93\u5165\u6570\u636E\u5230\u5B57\u7B26\u4E32\uFF0C\u5E76\u8FD4\u56DE \`io::Result&lt;usize&gt;\` \u7C7B\u578B</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">match</span> file<span class="token punctuation">.</span><span class="token function">read_to_string</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Err</span><span class="token punctuation">(</span>why<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">&quot;couldn&#39;t read {}: {}&quot;</span><span class="token punctuation">,</span> display<span class="token punctuation">,</span>
                                                   <span class="token class-name">Error</span><span class="token punctuation">::</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>why<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot;{} contains:\\n{}&quot;</span><span class="token punctuation">,</span> display<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="\u6587\u4EF6\u8F93\u51FA" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u8F93\u51FA" aria-hidden="true">#</a> \u6587\u4EF6\u8F93\u51FA</h2><p>\u6587\u4EF6\u8F93\u51FA\u548C\u6807\u51C6\u5E93\u8F93\u51FA\u4E5F\u5DEE\u4E0D\u591A\uFF0C\u53EA\u4E0D\u8FC7\u662F\u628A\u8F93\u51FA\u6D41\u91CD\u5B9A\u5411\u5230\u6587\u4EF6\u4E2D\u3002\u4E0B\u9762\u8BE6\u7EC6\u770B\u4F8B\u5B50\u3002</p><p><strong>\u4F8B\u5B50\uFF1A</strong></p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// \u8F93\u51FA\u6587\u672C</span>
<span class="token keyword">static</span> <span class="token constant">LOREM_IPSUM</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;static</span> <span class="token keyword">str</span> <span class="token operator">=</span>
<span class="token string">&quot;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>error<span class="token punctuation">::</span></span><span class="token class-name">Error</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span>prelude<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>fs<span class="token punctuation">::</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>path<span class="token punctuation">::</span></span><span class="token class-name">Path</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token class-name">Path</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;out/lorem_ipsum.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> display <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u7528\u53EA\u5199\u6A21\u5F0F\u6253\u5F00\u4E00\u4E2A\u6587\u4EF6\uFF0C\u5E76\u8FD4\u56DE \`io::Result&lt;File&gt;\` \u7C7B\u578B</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> file <span class="token operator">=</span> <span class="token keyword">match</span> <span class="token class-name">File</span><span class="token punctuation">::</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Err</span><span class="token punctuation">(</span>why<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">&quot;couldn&#39;t create {}: {}&quot;</span><span class="token punctuation">,</span>
                           display<span class="token punctuation">,</span>
                           <span class="token class-name">Error</span><span class="token punctuation">::</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>why<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> file<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5199\u5165 \`LOREM_IPSUM\` \u5B57\u7B26\u4E32\u5230\u6587\u4EF6\u4E2D, \u5E76\u8FD4\u56DE \`io::Result&lt;()&gt;\` \u7C7B\u578B</span>
    <span class="token keyword">match</span> file<span class="token punctuation">.</span><span class="token function">write_all</span><span class="token punctuation">(</span><span class="token constant">LOREM_IPSUM</span><span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Err</span><span class="token punctuation">(</span>why<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">&quot;couldn&#39;t write to {}: {}&quot;</span><span class="token punctuation">,</span> display<span class="token punctuation">,</span>
                                               <span class="token class-name">Error</span><span class="token punctuation">::</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>why<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;successfully wrote to {}&quot;</span><span class="token punctuation">,</span> display<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div>`,29);function t(o,e){return p}var l=s(a,[["render",t],["__file","io-stream.html.vue"]]);export{l as default};
