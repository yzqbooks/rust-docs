import{r as t,a as e,b as s,d as o,F as c,c as a,e as n,o as u}from"./app.a489c551.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";var i="/rust-prime/assets/high-order-function.1b15c361.png";const r={},k=a(`<h1 id="\u9AD8\u9636\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u9AD8\u9636\u51FD\u6570" aria-hidden="true">#</a> \u9AD8\u9636\u51FD\u6570</h1><p>\u9AD8\u9636\u51FD\u6570\u4E0E\u666E\u901A\u51FD\u6570\u7684\u4E0D\u540C\u5728\u4E8E\uFF0C\u5B83\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u6216\u591A\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u53EF\u4EE5\u5C06\u51FD\u6570\u4F5C\u4E3A\u8FD4\u56DE\u503C\u3002rust\u7684\u51FD\u6570\u662Ffirst class type\uFF0C\u6240\u4EE5\u652F\u6301\u9AD8\u9636\u51FD\u6570\u3002\u800C\uFF0C\u7531\u4E8Erust\u662F\u4E00\u4E2A\u5F3A\u7C7B\u578B\u7684\u8BED\u8A00\uFF0C\u5982\u679C\u8981\u5C06\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u6216\u8FD4\u56DE\u503C\uFF0C\u9996\u5148\u9700\u8981\u641E\u660E\u767D\u51FD\u6570\u7684\u7C7B\u578B\u3002\u4E0B\u9762\u5148\u8BF4\u51FD\u6570\u7684\u7C7B\u578B\uFF0C\u518D\u8BF4\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u548C\u8FD4\u56DE\u503C\u3002</p><h2 id="\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> \u51FD\u6570\u7C7B\u578B</h2><p>\u524D\u9762\u8BF4\u8FC7\uFF0C\u5173\u952E\u5B57<code>fn</code>\u53EF\u4EE5\u7528\u6765\u5B9A\u4E49\u51FD\u6570\u3002\u9664\u6B64\u4EE5\u5916\uFF0C\u5B83\u8FD8\u7528\u6765\u6784\u9020\u51FD\u6570\u7C7B\u578B\u3002\u4E0E\u51FD\u6570\u5B9A\u4E49\u4E3B\u8981\u7684\u4E0D\u540C\u662F\uFF0C\u6784\u9020\u51FD\u6570\u7C7B\u578B\u4E0D\u9700\u8981\u51FD\u6570\u540D\u3001\u53C2\u6570\u540D\u548C\u51FD\u6570\u4F53\u3002\u5728Rust Reference\u4E2D\u7684\u63CF\u8FF0\u5982\u4E0B\uFF1A</p><blockquote><p>The function type constructor fn forms new function types. A function type consists of a possibly-empty set of function-type modifiers (such as unsafe or extern), a sequence of input types and an output type.</p></blockquote><p>\u6765\u770B\u4E00\u4E2A\u7B80\u5355\u4F8B\u5B50\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">inc</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span><span class="token comment">//\u51FD\u6570\u5B9A\u4E49</span>
n <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token type-definition class-name">IncType</span> <span class="token operator">=</span> <span class="token keyword">fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token punctuation">;</span><span class="token comment">//\u51FD\u6570\u7C7B\u578B</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">let</span> func<span class="token punctuation">:</span> <span class="token class-name">IncType</span> <span class="token operator">=</span> inc<span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;3 + 1 = {}&quot;</span><span class="token punctuation">,</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E0A\u4F8B\u9996\u5148\u4F7F\u7528<code>fn</code>\u5B9A\u4E49\u4E86<code>inc</code>\u51FD\u6570\uFF0C\u5B83\u6709\u4E00\u4E2A<code>i32</code>\u7C7B\u578B\u53C2\u6570\uFF0C\u8FD4\u56DE<code>i32</code>\u7C7B\u578B\u7684\u503C\u3002\u7136\u540E\u518D\u7528<code>fn</code>\u5B9A\u4E49\u4E86\u4E00\u4E2A\u51FD\u6570\u7C7B\u578B\uFF0C\u8FD9\u4E2A\u51FD\u6570\u7C7B\u578B\u6709i32\u7C7B\u578B\u7684\u53C2\u6570\u548Ci32\u7C7B\u578B\u7684\u8FD4\u56DE\u503C\uFF0C\u5E76\u7528<code>type</code>\u5173\u952E\u5B57\u5B9A\u4E49\u4E86\u5B83\u7684\u522B\u540D<code>IncType</code>\u3002\u5728<code>main</code>\u51FD\u6570\u4E2D\u5B9A\u4E49\u4E86\u4E00\u4E2A\u53D8\u91CF<code>func</code>\uFF0C\u5176\u7C7B\u578B\u5C31\u4E3A<code>IncType</code>\uFF0C\u5E76\u8D4B\u503C\u4E3A<code>inc</code>\uFF0C\u7136\u540E\u5728<code>pirntln</code>\u5B8F\u4E2D\u8C03\u7528\uFF1A<code>func(3)</code>\u3002\u53EF\u4EE5\u770B\u5230\uFF0C<code>inc</code>\u51FD\u6570\u7684\u7C7B\u578B\u5176\u5B9E\u5C31\u662F<code>IncType</code>\u3002 \u8FD9\u91CC\u6709\u4E00\u4E2A\u95EE\u9898\uFF0C\u6211\u4EEC\u5C06<code>inc</code>\u8D4B\u503C\u7ED9\u4E86<code>func</code>\uFF0C\u800C\u4E0D\u662F<code>&amp;inc</code>\uFF0C\u8FD9\u6837\u662F\u5C06<code>inc</code>\u51FD\u6570\u7684\u62E5\u6709\u6743\u8F6C\u7ED9\u4E86<code>func</code>\u5417\uFF0C\u8D4B\u503C\u540E\u8FD8\u53EF\u4EE5\u4EE5<code>inc()</code>\u5F62\u5F0F\u8C03\u7528<code>inc</code>\u51FD\u6570\u5417\uFF1F\u5148\u6765\u770B\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">let</span> func<span class="token punctuation">:</span> <span class="token class-name">IncType</span> <span class="token operator">=</span> inc<span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;3 + 1 = {}&quot;</span><span class="token punctuation">,</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;3 + 1 = {}&quot;</span><span class="token punctuation">,</span> <span class="token function">inc</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token type-definition class-name">IncType</span> <span class="token operator">=</span> <span class="token keyword">fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">inc</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
n <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u6211\u4EEC\u5C06\u4E0A\u4F8B\u4FDD\u5B58\u5728rs\u6E90\u6587\u4EF6\u4E2D\uFF0C\u518D\u7528rustc\u7F16\u8BD1\uFF0C\u53D1\u73B0\u5E76\u6CA1\u6709\u62A5\u9519\uFF0C\u5E76\u4E14\u8FD0\u884C\u4E5F\u5F97\u5230\u6211\u4EEC\u60F3\u8981\u7684\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>3 + 1 = 4
3 + 1 = 4
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,11),d=n("\u8FD9\u8BF4\u660E\uFF0C\u8D4B\u503C\u65F6\uFF0C"),b=s("code",null,"inc",-1),m=n("\u51FD\u6570\u7684\u6240\u6709\u6743\u5E76\u6CA1\u6709\u88AB\u8F6C\u79FB\u5230"),f=s("code",null,"func",-1),y=n("\u53D8\u91CF\u4E0A\uFF0C\u800C\u662F\u66F4\u50CF\u4E0D\u53EF\u53D8\u5F15\u7528\u3002\u5728rust\u4E2D\uFF0C\u51FD\u6570\u7684\u6240\u6709\u6743\u662F\u4E0D\u80FD\u8F6C\u79FB\u7684\uFF0C\u6211\u4EEC\u7ED9\u51FD\u6570\u7C7B\u578B\u7684\u53D8\u91CF\u8D4B\u503C\u65F6\uFF0C\u8D4B\u7ED9\u7684\u4E00\u822C\u662F\u51FD\u6570\u7684\u6307\u9488\uFF0C\u6240\u4EE5rust\u4E2D\u7684\u51FD\u6570\u7C7B\u578B\uFF0C\u5C31\u50CF\u662FC/C++\u4E2D\u7684\u51FD\u6570\u6307\u9488\uFF0C\u5F53\u7136\uFF0Crust\u7684\u51FD\u6570\u7C7B\u578B\u66F4\u5B89\u5168\u3002\u53EF\u89C1\uFF0Crust\u7684\u51FD\u6570\u7C7B\u578B\uFF0C\u5176\u5B9E\u5E94\u8BE5\u662F\u5C5E\u4E8E\u6307\u9488\u7C7B\u578B\uFF08Pointer Type\uFF09\u3002rust\u7684Pointer Type\u6709\u4E24\u79CD\uFF0C\u4E00\u79CD\u4E3A\u5F15\u7528\uFF08Reference"),g=s("code",null,"&",-1),w=n("\uFF09\uFF0C\u53E6\u4E00\u79CD\u4E3A\u539F\u59CB\u6307\u9488\uFF08Raw pointer "),h=s("code",null,"*",-1),_=n("\uFF09\uFF0C\u8BE6\u7EC6\u5185\u5BB9\u8BF7\u770B"),v={href:"http://doc.rust-lang.org/reference.html#pointer-types",target:"_blank",rel:"noopener noreferrer"},x=n("Rust Reference 8.18 Pointer Types"),q=n("\u3002\u800Crust\u7684\u51FD\u6570\u7C7B\u578B\u5E94\u662F\u5F15\u7528\u7C7B\u578B\uFF0C\u56E0\u4E3A\u5B83\u662F\u5B89\u5168\u7684\uFF0C\u800C\u539F\u59CB\u6307\u9488\u5219\u662F\u4E0D\u5B89\u5168\u7684\uFF0C\u8981\u4F7F\u7528\u539F\u59CB\u6307\u9488\uFF0C\u5FC5\u987B\u4F7F\u7528"),T=s("code",null,"unsafe",-1),F=n("\u5173\u952E\u5B57\u58F0\u660E\u3002"),I=a(`<h2 id="\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570" aria-hidden="true">#</a> \u51FD\u6570\u4F5C\u4E3A\u53C2\u6570</h2><p>\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5176\u58F0\u660E\u4E0E\u666E\u901A\u53C2\u6570\u4E00\u6837\u3002\u770B\u4E0B\u4F8B\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;3 + 1 = {}&quot;</span><span class="token punctuation">,</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> inc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;3 - 1 = {}&quot;</span><span class="token punctuation">,</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> dec<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">inc</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
n <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">dec</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
n <span class="token operator">-</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">process</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> func<span class="token punctuation">:</span> <span class="token keyword">fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
<span class="token function">func</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u4F8B\u5B50\u4E2D\uFF0C<code>process</code>\u5C31\u662F\u4E00\u4E2A\u9AD8\u9636\u51FD\u6570\uFF0C\u5B83\u6709\u4E24\u4E2A\u53C2\u6570\uFF0C\u4E00\u4E2A\u7C7B\u578B\u4E3A<code>i32</code>\u7684<code>n</code>\uFF0C\u53E6\u4E00\u4E2A\u7C7B\u578B\u4E3A<code>fn(i32)-&gt;i32</code>\u7684\u51FD\u6570<code>func</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A<code>i32</code>\u7C7B\u578B\u7684\u53C2\u6570\uFF1B\u5B83\u5728\u51FD\u6570\u4F53\u5185\u4EE5<code>n</code>\u4F5C\u4E3A\u53C2\u6570\u8C03\u7528<code>func</code>\u51FD\u6570\uFF0C\u8FD4\u56DE<code>func</code>\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u3002\u8FD0\u884C\u53EF\u4EE5\u5F97\u5230\u4EE5\u4E0B\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>3 + 1 = 4
3 - 1 = 2
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4E0D\u8FC7\uFF0C\u8FD9\u4E0D\u662F\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u7684\u552F\u4E00\u58F0\u660E\u65B9\u6CD5\uFF0C\u4F7F\u7528\u6CDB\u578B\u51FD\u6570\u914D\u5408\u7279\u8D28\uFF08<code>trait</code>\uFF09\u4E5F\u662F\u53EF\u4EE5\u7684\uFF0C\u56E0\u4E3Arust\u7684\u51FD\u6570\u90FD\u4F1A\u5B9E\u73B0\u4E00\u4E2A<code>trait</code>:<code>FnOnce</code>\u3001<code>Fn</code>\u6216<code>FnMut</code>\u3002\u5C06\u4E0A\u4F8B\u4E2D\u7684<code>process</code>\u51FD\u6570\u5B9A\u4E49\u6362\u6210\u4EE5\u4E0B\u5F62\u5F0F\u662F\u7B49\u4EF7\u7684\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">process</span><span class="token operator">&lt;</span><span class="token class-name">F</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> func<span class="token punctuation">:</span> <span class="token class-name">F</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span>
  <span class="token keyword">where</span> <span class="token class-name">F</span><span class="token punctuation">:</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
  <span class="token function">func</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u51FD\u6570\u4F5C\u4E3A\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u4F5C\u4E3A\u8FD4\u56DE\u503C" aria-hidden="true">#</a> \u51FD\u6570\u4F5C\u4E3A\u8FD4\u56DE\u503C</h2><p>\u51FD\u6570\u4F5C\u4E3A\u8FD4\u56DE\u503C\uFF0C\u5176\u58F0\u660E\u4E0E\u666E\u901A\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u58F0\u660E\u4E00\u6837\u3002\u770B\u4F8B\u5B50\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token keyword">let</span> <span class="token keyword">mut</span> b <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token operator">&amp;</span>a <span class="token punctuation">{</span>
     b<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">get_func</span><span class="token punctuation">(</span><span class="token operator">*</span>i<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">*</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">get_func</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">inc</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
      n <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">fn</span> <span class="token function-definition function">dec</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
      n <span class="token operator">-</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
      inc
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      dec
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u4F8B\u5B50\u4E2D\u7684\u9AD8\u9636\u51FD\u6570\u4E3A<code>get_func</code>\uFF0C\u5B83\u63A5\u6536\u4E00\u4E2Ai32\u7C7B\u578B\u7684\u53C2\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u7C7B\u578B\u4E3A<code>fn(i32) -&gt; i32</code>\u7684\u51FD\u6570\uFF0C\u82E5\u4F20\u5165\u7684\u53C2\u6570\u4E3A\u5076\u6570\uFF0C\u8FD4\u56DE<code>inc</code>\uFF0C\u5426\u5219\u8FD4\u56DE<code>dec</code>\u3002\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C<code>inc</code>\u51FD\u6570\u548C<code>dec</code>\u51FD\u6570\u90FD\u5B9A\u4E49\u5728<code>get_func</code>\u5185\u3002\u5728\u51FD\u6570\u5185\u5B9A\u4E49\u51FD\u6570\u5728\u5F88\u591A\u5176\u4ED6\u8BED\u8A00\u4E2D\u662F\u4E0D\u652F\u6301\u7684\uFF0C\u4E0D\u8FC7rust\u652F\u6301\uFF0C\u8FD9\u4E5F\u662Frust\u7075\u6D3B\u548C\u5F3A\u5927\u7684\u4E00\u4E2A\u4F53\u73B0\u3002\u4E0D\u8FC7\uFF0C\u5728\u51FD\u6570\u4E2D\u5B9A\u4E49\u7684\u51FD\u6570\uFF0C\u4E0D\u80FD\u5305\u542B\u51FD\u6570\u4E2D\uFF08\u73AF\u5883\u4E2D\uFF09\u7684\u53D8\u91CF\uFF0C\u82E5\u8981\u5305\u542B\uFF0C\u5E94\u8BE5\u95ED\u5305\uFF08\u8BE6\u770B13\u7AE0 \u95ED\u5305\uFF09\u3002 \u6240\u4EE5\u4E0B\u4F8B\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token function">get_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">get_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">-&gt;</span><span class="token keyword">i32</span> <span class="token punctuation">{</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">fn</span> <span class="token function-definition function">inc</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
  n <span class="token operator">+</span> a
<span class="token punctuation">}</span>
inc
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4F7F\u7528rustc\u7F16\u8BD1\uFF0C\u4F1A\u51FA\u73B0\u5982\u4E0B\u9519\u8BEF\uFF1A <img src="`+i+'" alt="error"></p>',13);function R(V,N){const p=t("ExternalLinkIcon");return u(),e(c,null,[k,s("p",null,[d,b,m,f,y,g,w,h,_,s("a",v,[x,o(p)]),q,T,F]),I],64)}var E=l(r,[["render",R],["__file","higher_order_function.html.vue"]]);export{E as default};
