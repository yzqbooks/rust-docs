import{r as p,a as c,b as s,d as a,w as u,F as l,c as t,e as n,o as i}from"./app.a489c551.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";var d="/rust-prime/assets/function-return-value.9a04389d.png";const k={},b=t(`<h1 id="\u51FD\u6570\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u8FD4\u56DE\u503C" aria-hidden="true">#</a> \u51FD\u6570\u8FD4\u56DE\u503C</h1><p>\u5728rust\u4E2D\uFF0C\u4EFB\u4F55\u51FD\u6570\u90FD\u6709\u8FD4\u56DE\u7C7B\u578B\uFF0C\u5F53\u51FD\u6570\u8FD4\u56DE\u65F6\uFF0C\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u8BE5\u7C7B\u578B\u7684\u503C\u3002\u6211\u4EEC\u5148\u6765\u770B\u770Bmain\u51FD\u6570\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//statements</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4E4B\u524D\u6709\u8BF4\u8FC7\uFF0C\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u662F\u5728\u53C2\u6570\u5217\u8868\u540E\uFF0C\u52A0\u4E0A\u7BAD\u5934\u548C\u7C7B\u578B\u6765\u6307\u5B9A\u7684\u3002\u4E0D\u8FC7\uFF0C\u4E00\u822C\u6211\u4EEC\u770B\u5230\u7684main\u51FD\u6570\u7684\u5B9A\u4E49\u5E76\u6CA1\u6709\u8FD9\u4E48\u505A\u3002\u8FD9\u662F\u56E0\u4E3Amain\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662F<code>()</code>\uFF0C\u5728rust\u4E2D\uFF0C\u5F53\u4E00\u4E2A\u51FD\u6570\u8FD4\u56DE<code>()</code>\u65F6\uFF0C\u53EF\u4EE5\u7701\u7565\u3002main\u51FD\u6570\u7684\u5B8C\u6574\u5F62\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//statements</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,5),m=n("main\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u662F"),_=s("code",null,"()",-1),h=n("\uFF0C\u5B83\u662F\u4E00\u4E2A\u7279\u6B8A\u7684\u5143\u7EC4\u2014\u2014\u6CA1\u6709\u5143\u7D20\u7684\u5143\u7EC4\uFF0C\u79F0\u4E3A"),f=s("code",null,"unit",-1),g=n("\uFF0C\u5B83\u8868\u793A\u4E00\u4E2A\u51FD\u6570\u6CA1\u6709\u4EFB\u4F55\u4FE1\u606F\u9700\u8981\u8FD4\u56DE\u3002\u5728Rust Reference\u7684"),v={href:"https://doc.rust-lang.org/reference/types.html#tuple-types",target:"_blank",rel:"noopener noreferrer"},y=n("Types"),w=n("\u4E2D\u662F\u7684\u63CF\u8FF0\u5982\u4E0B\uFF1A"),x=t(`<blockquote><p>For historical reasons and convenience, the tuple type with no elements (<code>()</code>) is often called \u2018unit\u2019 or \u2018the unit type\u2019.</p></blockquote><p><code>()</code>\u7C7B\u578B\uFF0C\u5176\u5B9E\u7C7B\u4F3C\u4E8EC/C++\u3001Java\u3001C#\u4E2D\u7684<code>void</code>\u7C7B\u578B\u3002</p><p>\u4E0B\u9762\u6765\u770B\u4E00\u4E2A\u6709\u8FD4\u56DE\u503C\u7684\u4F8B\u5B50\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> <span class="token function">inc</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">inc</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
  n <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,4),q=n("\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u51FD\u6570"),C=s("code",null,"inc",-1),R=n("\u6709\u4E00\u4E2A"),T=s("code",null,"i32",-1),E=n("\u7C7B\u578B\u7684\u53C2\u6570\u548C\u8FD4\u56DE\u503C\uFF0C\u4F5C\u7528\u662F\u5C06\u53C2\u6570\u52A01\u8FD4\u56DE\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F"),L=s("code",null,"inc",-1),N=n("\u51FD\u6570\u4E2D\u53EA\u6709"),V=s("code",null,"n+1",-1),B=n("\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u5E76\u6CA1\u6709\u50CFC/C++\u6216Java\u3001C#\u7B49\u8BED\u8A00\u6709\u663E\u5F0F\u5730"),F=s("code",null,"return",-1),I=n("\u8BED\u53E5\u7C7B\u8FD4\u56DE\u4E00\u4E2A\u503C\u3002\u8FD9\u662F\u56E0\u4E3A\uFF0C\u4E0E\u5176\u4ED6\u57FA\u4E8E\u8BED\u53E5\u7684\u8BED\u8A00\uFF08\u5982C\u8BED\u8A00\uFF09\u4E0D\u540C\uFF0Crust\u662F\u57FA\u4E8E\u8868\u8FBE\u5F0F\u7684\u8BED\u8A00\uFF0C\u51FD\u6570\u4E2D\u6700\u540E\u4E00\u4E2A\u8868\u8FBE\u5F0F\u7684\u503C\uFF0C\u9ED8\u8BA4\u4F5C\u4E3A\u8FD4\u56DE\u503C\u3002\u5F53\u7136\uFF0Crust\u4E2D\u4E5F\u6709\u8BED\u53E5\uFF0C\u5173\u4E8Erust\u7684\u8BED\u53E5\u548C\u8868\u8FBE\u5F0F\uFF0C\u8BF7\u770B"),J=n("\u4E0B\u4E00\u8282"),D=n("\u3002"),P=t(`<h2 id="return\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#return\u5173\u952E\u5B57" aria-hidden="true">#</a> return\u5173\u952E\u5B57</h2><p>rust\u4E5F\u6709<code>return</code>\u5173\u952E\u5B57\uFF0C\u4E0D\u8FC7\u4E00\u822C\u7528\u4E8E\u63D0\u524D\u8FD4\u56DE\u3002\u6765\u770B\u4E00\u4E2A\u7B80\u5355\u5730\u4F8B\u5B50\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;There is 7 in the array: {}&quot;</span><span class="token punctuation">,</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;There is 8 in the array: {}&quot;</span><span class="token punctuation">,</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">find</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> a<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> a <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token operator">*</span>i <span class="token operator">==</span> n <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,3),S=t("\u4E0A\u4F8B\u4E2D\uFF0C<code>find</code>\u51FD\u6570\uFF0C\u63A5\u53D7\u4E00\u4E2A<code>i32</code>\u7C7B\u578B<code>n</code>\u548C\u4E00\u4E2A<code>i32</code>\u7C7B\u578B\u7684\u5207\u7247(<code>slice</code>)<code>a</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A<code>bool</code>\u503C\uFF0C\u82E5n\u662Fa\u7684\u5143\u7D20\uFF0C\u5219\u8FD4\u56DE<code>true</code>\uFF0C\u5426\u5219\u8FD4\u56DE<code>false</code>\u3002\u53EF\u4EE5\u770B\u5230\uFF0C<code>return</code>\u5173\u952E\u5B57\uFF0C\u7528\u5728<code>for</code>\u5FAA\u73AF\u7684<code>if</code>\u8868\u8FBE\u5F0F\u4E2D\uFF0C\u82E5\u6B64\u65F6a\u7684\u5143\u7D20\u4E0En\u76F8\u7B49\uFF0C\u5219\u7ACB\u523B\u8FD4\u56DEtrue\uFF0C\u5269\u4E0B\u7684\u5FAA\u73AF\u4E0D\u5FC5\u518D\u8FDB\u884C\uFF0C\u5426\u5219\u4E00\u76F4\u5FAA\u73AF\u68C0\u6D4B\u5B8C\u6574\u4E2A\u5207\u7247(slice)\uFF0C\u6700\u540E\u8FD4\u56DEfalse\u3002\u5F53\u7136\uFF0Creturn\u8BED\u53E5\u4E5F\u53EF\u4EE5\u7528\u5728\u6700\u540E\u8FD4\u56DE\uFF0C\u50CFC/C++\u4E00\u6837\u4F7F\u7528\uFF1A\u628A<code>find</code>\u51FD\u6570\u6700\u540E\u4E00\u53E5<code>false</code>\u6539\u4E3A<code>return false;</code>\uFF08\u6CE8\u610F\u5206\u53F7\u4E0D\u53EF\u7701\u7565\uFF09\u4E5F\u662F\u53EF\u4EE5\u7684\uFF0C\u4E0D\u8FC7\u8FD9\u5C31\u4E0D\u662Frust\u7684\u7F16\u7A0B\u98CE\u683C\u4E86\u3002\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C<code>for</code>\u5FAA\u73AF\u4E2D\u7684<code>i</code>\uFF0C\u5176\u7C7B\u578B\u4E3A<code>&amp;i32</code>\uFF0C\u9700\u8981\u4F7F\u7528\u89E3\u5F15\u7528\u64CD\u4F5C\u7B26\u6765\u53D8\u6362\u4E3A<code>i32</code>\u7C7B\u578B\u3002\u53E6\u5916\uFF0C\u5207\u7247\uFF08slice\uFF09\u5728\u8FD9\u91CC\u53EF\u4EE5\u770B\u4F5C\u662F\u5BF9\u6570\u7EC4\u7684\u5F15\u7528\uFF0C\u5173\u4E8E\u5207\u7247\u4E0E\u6570\u7EC4\u7684\u8BE6\u7EC6\u89E3\u91CA\u53EF\u4EE5\u770B",39),W={href:"https://doc.rust-lang.org/reference.html#array-and-slice-types",target:"_blank",rel:"noopener noreferrer"},j=n("Rust Reference"),z=n("\u548C"),A={href:"http://rustbyexample.com/primitives/array.html",target:"_blank",rel:"noopener noreferrer"},G=n("rustbyexample"),H=n("\u4E2D\u7684\u76F8\u5173\u5185\u5BB9\u3002"),K=t(`<h2 id="\u8FD4\u56DE\u591A\u4E2A\u503C" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u591A\u4E2A\u503C" aria-hidden="true">#</a> \u8FD4\u56DE\u591A\u4E2A\u503C</h2><p>rust\u7684\u51FD\u6570\u4E0D\u652F\u6301\u591A\u8FD4\u56DE\u503C\uFF0C\u4F46\u662F\u6211\u4EEC\u53EF\u4EE5\u5229\u7528\u5143\u7EC4\u6765\u8FD4\u56DE\u591A\u4E2A\u503C\uFF0C\u914D\u5408rust\u7684\u6A21\u5F0F\u5339\u914D\uFF0C\u4F7F\u7528\u8D77\u6765\u5341\u5206\u7075\u6D3B\u3002\u5148\u770B\u4F8B\u5B50\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">let</span> <span class="token punctuation">(</span>p2<span class="token punctuation">,</span>p3<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">pow_2_3</span><span class="token punctuation">(</span><span class="token number">789</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;pow 2 of 789 is {}.&quot;</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;pow 3 of 789 is {}.&quot;</span><span class="token punctuation">,</span> p3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">pow_2_3</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">,</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">(</span>n<span class="token operator">*</span>n<span class="token punctuation">,</span> n<span class="token operator">*</span>n<span class="token operator">*</span>n<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u4E0A\u4F8B\u4E2D\uFF0C<code>pow_2_3</code>\u51FD\u6570\u63A5\u6536\u4E00\u4E2A<code>i32</code>\u7C7B\u578B\u7684\u503C\uFF0C\u8FD4\u56DE\u5176\u4E8C\u6B21\u65B9\u548C\u4E09\u6B21\u65B9\u7684\u503C\uFF0C\u8FD9\u4E24\u4E2A\u503C\u5305\u88C5\u5728\u4E00\u4E2A\u5143\u7EC4\u4E2D\u8FD4\u56DE\u3002\u5728<code>main</code>\u51FD\u6570\u4E2D\uFF0C<code>let</code>\u8BED\u53E5\u5C31\u53EF\u4EE5\u4F7F\u7528\u6A21\u5F0F\u5339\u914D\u5C06\u51FD\u6570\u8FD4\u56DE\u7684\u5143\u7EC4\u8FDB\u884C\u89E3\u6784\uFF0C\u5C06\u8FD9\u4E24\u4E2A\u8FD4\u56DE\u503C\u5206\u522B\u8D4B\u7ED9<code>p2</code>\u548C<code>p3</code>\uFF0C\u4ECE\u800C\u53EF\u4EE5\u5F97\u5230<code>789</code>\u4E8C\u6B21\u65B9\u7684\u503C\u548C\u4E09\u6B21\u65B9\u7684\u503C\u3002</p><h2 id="\u53D1\u6563\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u53D1\u6563\u51FD\u6570" aria-hidden="true">#</a> \u53D1\u6563\u51FD\u6570</h2><p>\u53D1\u6563\u51FD\u6570\uFF08diverging function\uFF09\u662Frust\u4E2D\u7684\u4E00\u4E2A\u7279\u6027\u3002\u53D1\u6563\u51FD\u6570\u4E0D\u8FD4\u56DE\uFF0C\u5B83\u4F7F\u7528\u611F\u53F9\u53F7<code>!</code>\u4F5C\u4E3A\u8FD4\u56DE\u7C7B\u578B\u8868\u793A\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">diverging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">diverging</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">!</span> <span class="token punctuation">{</span>
<span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">&quot;This function will never return&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,7),M=n("\u7531\u4E8E\u53D1\u6563\u51FD\u6570\u4E0D\u4F1A\u8FD4\u56DE\uFF0C\u6240\u4EE5\u5C31\u7B97\u5176\u540E\u518D\u6709\u5176\u4ED6\u8BED\u53E5\u4E5F\u662F\u4E0D\u4F1A\u6267\u884C\u7684\u3002\u5018\u82E5\u5176\u540E\u8FD8\u6709\u5176\u4ED6\u8BED\u53E5\uFF0C\u4F1A\u51FA\u73B0\u5982\u4E0B\u7F16\u8BD1\u8B66\u544A\uFF1A"),O=s("img",{src:d,alt:"error"},null,-1),Q=n("\u3002\u5F53\u7136\u4E86\uFF0C\u6211\u4EEC\u8981\u77E5\u9053\u7684\u662F\u4E0D\u53D1\u6563\u7684\u51FD\u6570\u4E5F\u662F\u53EF\u4EE5\u4E0D\u8FD4\u56DE\u7684\uFF0C\u6BD4\u5982\u65E0\u9650\u5FAA\u73AF\u4E4B\u7C7B\u7684\u3002 \u53D1\u6563\u51FD\u6570\u4E00\u822C\u90FD\u4EE5"),U=s("code",null,"panic!",-1),X=n("\u5B8F\u8C03\u7528\u6216\u5176\u4ED6\u8C03\u7528\u5176\u4ED6\u53D1\u6563\u51FD\u6570\u7ED3\u675F\uFF0C\u6240\u4EE5\uFF0C\u8C03\u7528\u53D1\u6563\u51FD\u6570\u4F1A\u5BFC\u81F4\u5F53\u524D\u7EBF\u7A0B\u5D29\u6E83\u3002"),Y={href:"http://doc.rust-lang.org/reference.html#diverging-functions",target:"_blank",rel:"noopener noreferrer"},Z=n("Rust Reference 6.1.3.2 Diverging functions"),$=n("\u4E2D\u7684\u63CF\u8FF0\u5982\u4E0B\uFF1A"),nn=s("blockquote",null,[s("p",null,'We call such functions "diverging" because they never return a value to the caller. Every control path in a diverging function must end with a panic!() or a call to another diverging function on every control path. The ! annotation does not denote a type.')],-1);function sn(an,tn){const e=p("ExternalLinkIcon"),o=p("RouterLink");return i(),c(l,null,[b,s("p",null,[m,_,h,f,g,s("a",v,[y,a(e)]),w]),x,s("p",null,[q,C,R,T,E,L,N,V,B,F,I,a(o,{to:"/RustPrimer/function/statement_expression.html"},{default:u(()=>[J]),_:1}),D]),P,s("p",null,[S,s("a",W,[j,a(e)]),z,s("a",A,[G,a(e)]),H]),K,s("p",null,[M,O,Q,U,X,s("a",Y,[Z,a(e)]),$]),nn],64)}var on=r(k,[["render",sn],["__file","return_value.html.vue"]]);export{on as default};
