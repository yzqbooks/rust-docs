import{c as n}from"./app.a489c551.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},e=n(`<h1 id="\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF" aria-hidden="true">#</a> \u5FAA\u73AF</h1><ul><li>for</li><li>while</li><li>loop</li><li>break \u4E0E continue</li><li>label</li></ul><h2 id="for" tabindex="-1"><a class="header-anchor" href="#for" aria-hidden="true">#</a> for</h2><p>for \u8BED\u53E5\u7528\u4E8E\u904D\u5386\u4E00\u4E2A\u8FED\u4EE3\u5668\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">for</span> var <span class="token keyword">in</span> iterator <span class="token punctuation">{</span>
    code
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Rust \u8FED\u4EE3\u5668\u8FD4\u56DE\u4E00\u7CFB\u5217\u7684\u5143\u7D20\uFF0C\u6BCF\u4E2A\u5143\u7D20\u662F\u5FAA\u73AF\u4E2D\u7684\u4E00\u6B21\u91CD\u590D\u3002\u7136\u540E\u5B83\u7684\u503C\u4E0E var \u7ED1\u5B9A\uFF0C\u5B83\u5728\u5FAA\u73AF\u4F53\u4E2D\u6709\u6548\u3002\u6BCF\u5F53\u5FAA\u73AF\u4F53\u6267\u884C\u5B8C\u540E\uFF0C\u6211\u4EEC\u4ECE\u8FED\u4EE3\u5668\u4E2D\u53D6\u51FA\u4E0B\u4E00\u4E2A\u503C\uFF0C\u7136\u540E\u6211\u4EEC\u518D\u91CD\u590D\u4E00\u904D\u3002\u5F53\u8FED\u4EE3\u5668\u4E2D\u4E0D\u518D\u6709\u503C\u65F6\uFF0Cfor \u5FAA\u73AF\u7ED3\u675F\u3002</p><p>\u6BD4\u5982\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span><span class="token number">10</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// x: i32</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8F93\u51FA</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>0
1
2
3
4
5
6
7
8
9
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E0D\u719F\u6089\u8FED\u4EE3\u5668\u6982\u5FF5\u7684\u540C\u5B66\u53EF\u80FD\u50BB\u773C\u4E86\uFF0C\u4E0B\u9762\u4E0D\u59A8\u7528 C \u5F62\u5F0F\u7684 for \u8BED\u53E5\u505A\u4E0B\u5BF9\u6BD4\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// C \u8BED\u8A00\u7684 for \u5FAA\u73AF\u4F8B\u5B50</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> x<span class="token operator">+</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span> <span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> x <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4E24\u8005\u8F93\u51FA\u662F\u76F8\u540C\u7684\uFF0C\u90A3\u4E48\uFF0C\u4E3A\u4F55 Rust \u8981\u8FD9\u6837\u6765\u8BBE\u8BA1 for \u8BED\u53E5\u5462\uFF1F</p><ol><li>\u7B80\u5316\u8FB9\u754C\u6761\u4EF6\u7684\u786E\u5B9A\uFF0C\u51CF\u5C11\u51FA\u9519\uFF1B</li><li>\u51CF\u5C11\u8FD0\u884C\u65F6\u8FB9\u754C\u68C0\u67E5\uFF0C\u63D0\u9AD8\u6027\u80FD\u3002</li></ol><p>\u5373\u4F7F\u5BF9\u4E8E\u6709\u7ECF\u9A8C\u7684 C \u8BED\u8A00\u5F00\u53D1\u8005\u6765\u8BF4\uFF0C\u8981\u624B\u52A8\u63A7\u5236\u8981\u5FAA\u73AF\u7684\u6BCF\u4E2A\u5143\u7D20\u4E5F\u90FD\u662F\u590D\u6742\u5E76\u4E14\u6613\u4E8E\u51FA\u9519\u7684\u3002</p><p>for \u8BED\u53E5\u5C31\u662F\u8FED\u4EE3\u5668\u904D\u5386\u7684\u8BED\u6CD5\u7CD6\u3002</p><p>\u4E0A\u8FF0\u8FED\u4EE3\u5668\u7684\u5F62\u5F0F\u867D\u597D\uFF0C\u4F46\u662F\u597D\u50CF\u5728\u5FAA\u73AF\u8FC7\u7A0B\u4E2D\uFF0C\u5C11\u4E86\u7D22\u5F15\u4FE1\u606F\u3002Rust \u8003\u8651\u5230\u4E86\u8FD9\u4E00\u70B9\uFF0C\u5F53\u4F60\u9700\u8981\u8BB0\u5F55\u4F60\u5DF2\u7ECF\u5FAA\u73AF\u4E86\u591A\u5C11\u6B21\u4E86\u7684\u65F6\u5019\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>.enumerate()</code> \u51FD\u6570\u3002\u6BD4\u5982\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">..</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enumerate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;i = {} and j = {}&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8F93\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>i = 0 and j = 5
i = 1 and j = 6
i = 2 and j = 7
i = 3 and j = 8
i = 4 and j = 9
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u518D\u6BD4\u5982\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> lines <span class="token operator">=</span> <span class="token string">&quot;Content of line one
Content of line two
Content of line three
Content of line four&quot;</span><span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>linenumber<span class="token punctuation">,</span> line<span class="token punctuation">)</span> <span class="token keyword">in</span> lines<span class="token punctuation">.</span><span class="token function">enumerate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}: {}&quot;</span><span class="token punctuation">,</span> linenumber<span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8F93\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>0: Content of line one
1: Content of line two
2: Content of line three
3: Content of line four
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5173\u4E8E\u8FED\u4EE3\u5668\u7684\u77E5\u8BC6\uFF0C\u8BE6\u89C1 <strong>\u8FED\u4EE3\u5668</strong> \u7AE0\u8282\u3002</p><h2 id="while" tabindex="-1"><a class="header-anchor" href="#while" aria-hidden="true">#</a> while</h2><p>Rust \u63D0\u4F9B\u4E86 while \u8BED\u53E5\uFF0C\u6761\u4EF6\u8868\u8FBE\u5F0F\u4E3A\u771F\u65F6\uFF0C\u6267\u884C\u8BED\u53E5\u4F53\u3002\u5F53\u4F60\u4E0D\u786E\u5B9A\u5E94\u8BE5\u5FAA\u73AF\u591A\u5C11\u6B21\u65F6\u53EF\u9009\u62E9 while\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">while</span> expression <span class="token punctuation">{</span>
    code
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6BD4\u5982\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> <span class="token keyword">mut</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// mut x: i32</span>
<span class="token keyword">let</span> <span class="token keyword">mut</span> done <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// mut done: bool</span>

<span class="token keyword">while</span> <span class="token operator">!</span>done <span class="token punctuation">{</span>
    x <span class="token operator">+=</span> x <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> x <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        done <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="loop" tabindex="-1"><a class="header-anchor" href="#loop" aria-hidden="true">#</a> loop</h2><p>\u6709\u4E00\u79CD\u60C5\u51B5\uFF0C\u6211\u4EEC\u7ECF\u5E38\u4F1A\u9047\u5230\uFF0C\u5C31\u662F\u5199\u4E00\u4E2A\u65E0\u9650\u5FAA\u73AF\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">while</span> <span class="token boolean">true</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u9488\u5BF9\u8FD9\u79CD\u60C5\u51B5\uFF0CRust \u4E13\u95E8\u4F18\u5316\u63D0\u4F9B\u4E86\u4E00\u4E2A\u8BED\u53E5 loop\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">loop</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>loop</code> \u4E0E <code>while true</code> \u7684\u4E3B\u8981\u533A\u522B\u5728\u7F16\u8BD1\u9636\u6BB5\u7684\u9759\u6001\u5206\u6790\u3002</p><p>\u6BD4\u5982\u8BF4\uFF0C\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> <span class="token keyword">mut</span> a<span class="token punctuation">;</span>
<span class="token keyword">loop</span> <span class="token punctuation">{</span>
     a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
     <span class="token comment">// ... break ...</span>
<span class="token punctuation">}</span>
<span class="token function">do_something</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5982\u679C\u662F<code>loop</code>\u5FAA\u73AF\uFF0C\u7F16\u8BD1\u5668\u4F1A\u6B63\u786E\u5206\u6790\u51FA\u53D8\u91CF<code>a</code>\u4F1A\u88AB\u6B63\u786E\u521D\u59CB\u5316\uFF0C\u800C\u5982\u679C\u6362\u6210<code>while true</code>\uFF0C\u5219\u4F1A\u53D1\u751F\u7F16\u8BD1\u9519\u8BEF\u3002\u8FD9\u4E2A\u5FAE\u5C0F\u7684\u533A\u522B\u4E5F\u4F1A\u5F71\u54CD\u751F\u547D\u5468\u671F\u5206\u6790\u3002</p><h2 id="break-\u548C-continue" tabindex="-1"><a class="header-anchor" href="#break-\u548C-continue" aria-hidden="true">#</a> break \u548C continue</h2><p>\u4E0E C \u8BED\u8A00\u7C7B\u4F3C\uFF0CRust \u4E5F\u63D0\u4F9B\u4E86 break \u548C continue \u4E24\u4E2A\u5173\u952E\u5B57\u7528\u6765\u63A7\u5236\u5FAA\u73AF\u7684\u6D41\u7A0B\u3002</p><ul><li>break \u7528\u6765\u8DF3\u51FA\u5F53\u524D\u5C42\u7684\u5FAA\u73AF\uFF1B</li><li>continue \u7528\u6765\u6267\u884C\u5F53\u524D\u5C42\u7684\u4E0B\u4E00\u6B21\u8FED\u4EE3\u3002</li></ul><p>\u50CF\u4E0A\u9762\u90A3\u4E2A while \u4F8B\u5B50\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> <span class="token keyword">mut</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token keyword">mut</span> done <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token operator">!</span>done <span class="token punctuation">{</span>
    x <span class="token operator">+=</span> x <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> x <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        done <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u53EF\u4EE5\u4F18\u5316\u6210\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> <span class="token keyword">mut</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

<span class="token keyword">loop</span> <span class="token punctuation">{</span>
    x <span class="token operator">+=</span> x <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> x <span class="token operator">%</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span> <span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u8FD9\u6837\u611F\u89C9\u66F4\u76F4\u89C2\u4E00\u70B9\u3002</p><p>\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u6F14\u793A continue \u7684\u7528\u6CD5\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span><span class="token number">10</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span> <span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5B83\u7684\u4F5C\u7528\u662F\u6253\u5370\u51FA <code>0~9</code> \u7684\u5947\u6570\u3002\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1
3
5
7
9
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="label" tabindex="-1"><a class="header-anchor" href="#label" aria-hidden="true">#</a> label</h2><p>\u4F60\u4E5F\u8BB8\u4F1A\u9047\u5230\u8FD9\u6837\u7684\u60C5\u5F62\uFF0C\u5F53\u4F60\u6709\u5D4C\u5957\u7684\u5FAA\u73AF\u800C\u5E0C\u671B\u6307\u5B9A\u4F60\u7684\u54EA\u4E00\u4E2A break \u6216 continue \u8BE5\u8D77\u4F5C\u7528\u3002\u5C31\u50CF\u5927\u591A\u6570\u8BED\u8A00\uFF0C\u9ED8\u8BA4 break \u6216 continue \u5C06\u4F1A\u4F5C\u7528\u4E8E\u5F53\u524D\u5C42\u7684\u5FAA\u73AF\u3002\u5F53\u4F60\u60F3\u8981\u4E00\u4E2A break \u6216 continue \u4F5C\u7528\u4E8E\u4E00\u4E2A\u5916\u5C42\u5FAA\u73AF\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u6807\u7B7E\u6765\u6307\u5B9A\u4F60\u7684 break \u6216 continue \u8BED\u53E5\u4F5C\u7528\u7684\u5FAA\u73AF\u3002</p><p>\u5982\u4E0B\u4EE3\u7801\u53EA\u4F1A\u5728 x \u548C y \u90FD\u4E3A\u5947\u6570\u65F6\u6253\u5370\u4ED6\u4EEC\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token lifetime-annotation symbol">&#39;outer</span><span class="token punctuation">:</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span><span class="token number">10</span> <span class="token punctuation">{</span>
    <span class="token lifetime-annotation symbol">&#39;inner</span><span class="token punctuation">:</span> <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span><span class="token number">10</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> x <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span> <span class="token keyword">continue</span> <span class="token lifetime-annotation symbol">&#39;outer</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment">// continues the loop over x</span>
        <span class="token keyword">if</span> y <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span> <span class="token keyword">continue</span> <span class="token lifetime-annotation symbol">&#39;inner</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment">// continues the loop over y</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;x: {}, y: {}&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,55);function p(t,o){return e}var r=s(a,[["render",p],["__file","repetition.html.vue"]]);export{r as default};
