import{r as p,a as e,b as n,d as t,F as o,c,e as s,o as l}from"./app.a489c551.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=c(`<h1 id="\u95ED\u5305\u4F5C\u4E3A\u53C2\u6570\u548C\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#\u95ED\u5305\u4F5C\u4E3A\u53C2\u6570\u548C\u8FD4\u56DE\u503C" aria-hidden="true">#</a> \u95ED\u5305\u4F5C\u4E3A\u53C2\u6570\u548C\u8FD4\u56DE\u503C</h1><h2 id="\u95ED\u5305\u4F5C\u4E3A\u53C2\u6570-taking-closures-as-arguments" tabindex="-1"><a class="header-anchor" href="#\u95ED\u5305\u4F5C\u4E3A\u53C2\u6570-taking-closures-as-arguments" aria-hidden="true">#</a> \u95ED\u5305\u4F5C\u4E3A\u53C2\u6570\uFF08Taking closures as arguments\uFF09</h2><p>\u73B0\u5728\u6211\u4EEC\u77E5\u9053\u4E86\u95ED\u5305\u662F trait\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u77E5\u9053\u4E86\u5982\u4F55\u63A5\u53D7\u548C\u8FD4\u56DE\u95ED\u5305\uFF1B\u5C31\u50CF\u4EFB\u4F55\u5176\u5B83\u7684 trait\uFF01</p><p>\u8FD9\u4E5F\u610F\u5473\u7740\u6211\u4EEC\u4E5F\u53EF\u4EE5\u9009\u62E9\u9759\u6001\u6216\u52A8\u6001\u5206\u53D1\u3002\u9996\u5148\uFF0C\u8BA9\u6211\u4EEC\u5199\u4E00\u4E2A\u83B7\u53D6\u53EF\u8C03\u7528\u7ED3\u6784\u7684\u51FD\u6570\uFF0C\u8C03\u7528\u5B83\uFF0C\u7136\u540E\u8FD4\u56DE\u7ED3\u679C\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">call_with_one</span><span class="token operator">&lt;</span><span class="token class-name">F</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>some_closure<span class="token punctuation">:</span> <span class="token class-name">F</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span>
    <span class="token keyword">where</span> <span class="token class-name">F</span> <span class="token punctuation">:</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>

    <span class="token function">some_closure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> answer <span class="token operator">=</span> <span class="token function">call_with_one</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>x<span class="token closure-punctuation punctuation">|</span></span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> answer<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6211\u4EEC\u4F20\u9012\u6211\u4EEC\u7684\u95ED\u5305\uFF0C<code>|x| x + 2</code>\uFF0C\u7ED9<code>call_with_one</code>\u3002\u5B83\u6B63\u505A\u4E86\u6211\u4EEC\u8BF4\u7684\uFF1A\u5B83\u8C03\u7528\u4E86\u95ED\u5305\uFF0C<code>1</code>\u4F5C\u4E3A\u53C2\u6570\u3002</p><p>\u8BA9\u6211\u4EEC\u66F4\u6DF1\u5C42\u7684\u89E3\u6790<code>call_with_one</code>\u7684\u7B7E\u540D\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">call_with_one</span><span class="token operator">&lt;</span><span class="token class-name">F</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>some_closure<span class="token punctuation">:</span> <span class="token class-name">F</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span>
#    <span class="token keyword">where</span> <span class="token class-name">F</span> <span class="token punctuation">:</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
#    <span class="token function">some_closure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6211\u4EEC\u83B7\u53D6\u4E00\u4E2A\u53C2\u6570\uFF0C\u800C\u5B83\u6709\u7C7B\u578B<code>F</code>\u3002\u6211\u4EEC\u4E5F\u8FD4\u56DE\u4E00\u4E2A<code>i32</code>\u3002\u8FD9\u4E00\u90E8\u5206\u5E76\u4E0D\u6709\u8DA3\u3002\u4E0B\u4E00\u90E8\u5206\u662F\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code># <span class="token keyword">fn</span> <span class="token function-definition function">call_with_one</span><span class="token operator">&lt;</span><span class="token class-name">F</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>some_closure<span class="token punctuation">:</span> <span class="token class-name">F</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span>
    <span class="token keyword">where</span> <span class="token class-name">F</span> <span class="token punctuation">:</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
#   <span class="token function">some_closure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u56E0\u4E3A<code>Fn</code>\u662F\u4E00\u4E2Atrait\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7528\u5B83\u9650\u5236\u6211\u4EEC\u7684\u6CDB\u578B\u3002\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u7684\u95ED\u5305\u53D6\u5F97\u4E00\u4E2A<code>i32</code>\u4F5C\u4E3A\u53C2\u6570\u5E76\u8FD4\u56DE<code>i32</code>\uFF0C\u6240\u4EE5\u6211\u4EEC\u7528\u6CDB\u578B\u9650\u5236\u662F<code>Fn(i32) -&gt; i32</code>\u3002</p><p>\u8FD8\u6709\u4E00\u4E2A\u5173\u952E\u70B9\u5728\u4E8E\uFF1A\u56E0\u4E3A\u6211\u4EEC\u7528\u4E00\u4E2Atrait\u9650\u5236\u6CDB\u578B\uFF0C\u5B83\u4F1A\u662F\u5355\u6001\u7684\uFF0C\u5E76\u4E14\u56E0\u6B64\uFF0C\u6211\u4EEC\u5728\u95ED\u5305\u4E2D\u4F7F\u7528\u9759\u6001\u5206\u53D1\u3002\u8FD9\u662F\u975E\u5E38\u7B80\u5355\u7684\u3002\u5728\u5F88\u591A\u8BED\u8A00\u4E2D\uFF0C\u95ED\u5305\u56FA\u5B9A\u5728\u5806\u4E0A\u5206\u914D\uFF0C\u6240\u4EE5\u603B\u662F\u8FDB\u884C\u52A8\u6001\u5206\u53D1\u3002\u5728Rust\u4E2D\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728\u6808\u4E0A\u5206\u914D\u6211\u4EEC\u95ED\u5305\u7684\u73AF\u5883\uFF0C\u5E76\u9759\u6001\u5206\u53D1\u8C03\u7528\u3002\u8FD9\u7ECF\u5E38\u53D1\u751F\u5728\u8FED\u4EE3\u5668\u548C\u5B83\u4EEC\u7684\u9002\u914D\u5668\u4E0A\uFF0C\u5B83\u4EEC\u7ECF\u5E38\u53D6\u5F97\u95ED\u5305\u4F5C\u4E3A\u53C2\u6570\u3002</p><p>\u5F53\u7136\uFF0C\u5982\u679C\u6211\u4EEC\u60F3\u8981\u52A8\u6001\u5206\u53D1\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u505A\u5230\u3002trait\u5BF9\u8C61\u5904\u7406\u8FD9\u79CD\u60C5\u51B5\uFF0C\u901A\u5E38\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">call_with_one</span><span class="token punctuation">(</span>some_closure<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
    <span class="token function">some_closure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> answer <span class="token operator">=</span> <span class="token function">call_with_one</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token operator">|</span>x<span class="token operator">|</span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> answer<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u73B0\u5728\u6211\u4EEC\u53D6\u5F97\u4E00\u4E2Atrait\u5BF9\u8C61\uFF0C\u4E00\u4E2A<code>&amp;Fn</code>\u3002\u5E76\u4E14\u5F53\u6211\u4EEC\u5C06\u6211\u4EEC\u7684\u95ED\u5305\u4F20\u9012\u7ED9<code>call_with_one</code>\u65F6\u6211\u4EEC\u5FC5\u987B\u83B7\u53D6\u4E00\u4E2A\u5F15\u7528\uFF0C\u6240\u4EE5\u6211\u4EEC\u4F7F\u7528<code>&amp;||</code>\u3002</p><h2 id="\u51FD\u6570\u6307\u9488\u548C\u95ED\u5305" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u6307\u9488\u548C\u95ED\u5305" aria-hidden="true">#</a> \u51FD\u6570\u6307\u9488\u548C\u95ED\u5305</h2><p>\u4E00\u4E2A\u51FD\u6570\u6307\u9488\u6709\u70B9\u50CF\u4E00\u4E2A\u6CA1\u6709\u73AF\u5883\u7684\u95ED\u5305\u3002\u56E0\u6B64\uFF0C\u4F60\u53EF\u4EE5\u4F20\u9012\u4E00\u4E2A\u51FD\u6570\u6307\u9488\u7ED9\u4EFB\u4F55\u51FD\u6570\u9664\u4E86\u4F5C\u4E3A\u95ED\u5305\u53C2\u6570\uFF0C\u4E0B\u9762\u7684\u4EE3\u7801\u53EF\u4EE5\u5DE5\u4F5C\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">call_with_one</span><span class="token punctuation">(</span>some_closure<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
    <span class="token function">some_closure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">add_one</span><span class="token punctuation">(</span>i<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
    i <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> f <span class="token operator">=</span> add_one<span class="token punctuation">;</span>

<span class="token keyword">let</span> answer <span class="token operator">=</span> <span class="token function">call_with_one</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> answer<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u5E76\u4E0D\u662F\u4E25\u683C\u7684\u9700\u8981\u8FD9\u4E2A\u4E2D\u95F4\u53D8\u91CF<code>f</code>\uFF0C\u51FD\u6570\u7684\u540D\u5B57\u5C31\u53EF\u4EE5\u4E86\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> answer <span class="token operator">=</span> <span class="token function">call_with_one</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>add_one<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="\u8FD4\u56DE\u95ED\u5305-returning-closures" tabindex="-1"><a class="header-anchor" href="#\u8FD4\u56DE\u95ED\u5305-returning-closures" aria-hidden="true">#</a> \u8FD4\u56DE\u95ED\u5305\uFF08Returning closures\uFF09</h2><p>\u5BF9\u4E8E\u51FD\u6570\u5F0F\u98CE\u683C\u4EE3\u7801\u6765\u8BF4\u5728\u5404\u79CD\u60C5\u51B5\u8FD4\u56DE\u95ED\u5305\u662F\u975E\u5E38\u5E38\u89C1\u7684\u3002\u5982\u679C\u4F60\u5C1D\u8BD5\u8FD4\u56DE\u4E00\u4E2A\u95ED\u5305\uFF0C\u4F60\u53EF\u80FD\u4F1A\u5F97\u5230\u4E00\u4E2A\u9519\u8BEF\u3002\u5728\u521A\u63A5\u89E6\u7684\u65F6\u5019\uFF0C\u8FD9\u770B\u8D77\u6765\u6709\u70B9\u5947\u602A\uFF0C\u4E0D\u8FC7\u6211\u4EEC\u4F1A\u641E\u6E05\u695A\u3002\u5F53\u4F60\u5C1D\u8BD5\u4ECE\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u95ED\u5305\u7684\u65F6\u5019\uFF0C\u4F60\u53EF\u80FD\u4F1A\u5199\u51FA\u7C7B\u4F3C\u8FD9\u6837\u7684\u4EE3\u7801\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token punctuation">(</span><span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

    <span class="token operator">|</span>x<span class="token operator">|</span> x <span class="token operator">+</span> num
<span class="token punctuation">}</span>

<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> answer <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> answer<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u7F16\u8BD1\u7684\u65F6\u5019\u4F1A\u7ED9\u51FA\u8FD9\u4E00\u957F\u4E32\u76F8\u5173\u9519\u8BEF\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>error: the trait \`core::marker::Sized\` is not implemented for the type
\`core::ops::Fn(i32) -&gt; i32\` [E0277]
fn factory() -&gt; (Fn(i32) -&gt; i32) {
                ^~~~~~~~~~~~~~~~
note: \`core::ops::Fn(i32) -&gt; i32\` does not have a constant size known at compile-time
fn factory() -&gt; (Fn(i32) -&gt; i32) {
                ^~~~~~~~~~~~~~~~
error: the trait \`core::marker::Sized\` is not implemented for the type \`core::ops::Fn(i32) -&gt; i32\` [E0277]
let f = factory();
    ^
note: \`core::ops::Fn(i32) -&gt; i32\` does not have a constant size known at compile-time
let f = factory();
    ^
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u4E3A\u4E86\u4ECE\u51FD\u6570\u8FD4\u56DE\u4E00\u4E9B\u4E1C\u897F\uFF0CRust \u9700\u8981\u77E5\u9053\u8FD4\u56DE\u7C7B\u578B\u7684\u5927\u5C0F\u3002\u4E0D\u8FC7<code>Fn</code>\u662F\u4E00\u4E2A trait\uFF0C\u5B83\u53EF\u4EE5\u662F\u5404\u79CD\u5927\u5C0F(size)\u7684\u4EFB\u4F55\u4E1C\u897F\u3002\u6BD4\u5982\u8BF4\uFF0C\u8FD4\u56DE\u503C\u53EF\u4EE5\u662F\u5B9E\u73B0\u4E86<code>Fn</code>\u7684\u4EFB\u610F\u7C7B\u578B\u3002\u4E00\u4E2A\u7B80\u5355\u7684\u89E3\u51B3\u65B9\u6CD5\u662F\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u5F15\u7528\u3002\u56E0\u4E3A\u5F15\u7528\u7684\u5927\u5C0F(size)\u662F\u56FA\u5B9A\u7684\uFF0C\u56E0\u6B64\u8FD4\u56DE\u503C\u7684\u5927\u5C0F\u5C31\u56FA\u5B9A\u4E86\u3002\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u8FD9\u6837\u5199\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

    <span class="token operator">|</span>x<span class="token operator">|</span> x <span class="token operator">+</span> num
<span class="token punctuation">}</span>

<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> answer <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> answer<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E0D\u8FC7\u8FD9\u6837\u4F1A\u51FA\u73B0\u53E6\u5916\u4E00\u4E2A\u9519\u8BEF\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>error: missing lifetime specifier [E0106]
fn factory() -&gt; &amp;(Fn(i32) -&gt; i32) {
                ^~~~~~~~~~~~~~~~~
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5BF9\u3002\u56E0\u4E3A\u6211\u4EEC\u6709\u4E00\u4E2A\u5F15\u7528\uFF0C\u6211\u4EEC\u9700\u8981\u7ED9\u5B83\u4E00\u4E2A\u751F\u547D\u5468\u671F\u3002\u4E0D\u8FC7\u6211\u4EEC\u7684<code>factory()</code>\u51FD\u6570\u4E0D\u63A5\u6536\u53C2\u6570\uFF0C\u6240\u4EE5\u7701\u7565\u4E0D\u80FD\u7528\u5728\u8FD9\u3002\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u4EC0\u4E48\u751F\u547D\u5468\u671F\u5462\uFF1F<code>&#39;static</code>\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;static</span> <span class="token punctuation">(</span><span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

    <span class="token operator">|</span>x<span class="token operator">|</span> x <span class="token operator">+</span> num
<span class="token punctuation">}</span>

<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> answer <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> answer<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E0D\u8FC7\u8FD9\u6837\u53C8\u4F1A\u51FA\u73B0\u53E6\u4E00\u4E2A\u9519\u8BEF\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>error: mismatched types:
 expected \`&amp;&#39;static core::ops::Fn(i32) -&gt; i32\`,
    found \`[closure@&lt;anon&gt;:7:9: 7:20]\`
(expected &amp;-ptr,
    found closure) [E0308]
         |x| x + num
         ^~~~~~~~~~~

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u8FD9\u4E2A\u9519\u8BEF\u8BA9\u6211\u4EEC\u77E5\u9053\u6211\u4EEC\u5E76\u6CA1\u6709\u8FD4\u56DE\u4E00\u4E2A<code>&amp;&#39;static Fn(i32) -&gt; i32</code>\uFF0C\u800C\u662F\u8FD4\u56DE\u4E86\u4E00\u4E2A<code>[closure &lt;anon&gt;:7:9: 7:20]</code>\u3002\u7B49\u7B49\uFF0C\u4EC0\u4E48\uFF1F</p><p>\u56E0\u4E3A\u6BCF\u4E2A\u95ED\u5305\u751F\u6210\u4E86\u5B83\u81EA\u5DF1\u7684\u73AF\u5883<code>struct</code>\u5E76\u5B9E\u73B0\u4E86<code>Fn</code>\u548C\u5176\u5B83\u4E00\u4E9B\u4E1C\u897F\uFF0C\u8FD9\u4E9B\u7C7B\u578B\u662F\u533F\u540D\u7684\u3002\u5B83\u4EEC\u53EA\u5728\u8FD9\u4E2A\u95ED\u5305\u4E2D\u5B58\u5728\u3002\u6240\u4EE5Rust\u628A\u5B83\u4EEC\u663E\u793A\u4E3A<code>closure &lt;anon&gt;</code>\uFF0C\u800C\u4E0D\u662F\u4E00\u4E9B\u81EA\u52A8\u751F\u6210\u7684\u540D\u5B57\u3002</p><p>\u8FD9\u4E2A\u9519\u8BEF\u4E5F\u6307\u51FA\u4E86\u8FD4\u56DE\u503C\u7C7B\u578B\u671F\u671B\u662F\u4E00\u4E2A\u5F15\u7528\uFF0C\u4E0D\u8FC7\u6211\u4EEC\u5C1D\u8BD5\u8FD4\u56DE\u7684\u4E0D\u662F\u3002\u66F4\u8FDB\u4E00\u6B65\uFF0C\u6211\u4EEC\u5E76\u4E0D\u80FD\u76F4\u63A5\u7ED9\u4E00\u4E2A\u5BF9\u8C61<code>&#39;static</code>\u58F0\u660E\u5468\u671F\u3002\u6240\u4EE5\u6211\u4EEC\u6362\u4E00\u4E2A\u65B9\u6CD5\u5E76\u901A\u8FC7<code>Box</code>\u88C5\u7BB1<code>Fn</code>\u6765\u8FD4\u56DE\u4E00\u4E2A trait \u5BF9\u8C61\u3002\u8FD9\u4E2A<em>\u51E0\u4E4E</em>\u53EF\u4EE5\u6210\u529F\u8FD0\u884C\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

    <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>x<span class="token closure-punctuation punctuation">|</span></span> x <span class="token operator">+</span> num<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
# <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> answer <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> answer<span class="token punctuation">)</span><span class="token punctuation">;</span>
# <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8FD9\u8FD8\u6709\u6700\u540E\u4E00\u4E2A\u95EE\u9898\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>error: closure may outlive the current function, but it borrows \`num\`,
which is owned by the current function [E0373]
Box::new(|x| x + num)
         ^~~~~~~~~~~
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u597D\u5427\uFF0C\u6B63\u5982\u6211\u4EEC\u4E0A\u9762\u8BA8\u8BBA\u7684\uFF0C\u95ED\u5305\u501F\u7528\u4ED6\u4EEC\u7684\u73AF\u5883\u3002\u800C\u4E14\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\u3002\u6211\u4EEC\u7684\u73AF\u5883\u57FA\u4E8E\u4E00\u4E2A\u6808\u5206\u914D\u7684<code>5</code>\uFF0C<code>num</code>\u53D8\u91CF\u7ED1\u5B9A\u3002\u6240\u4EE5\u8FD9\u4E2A\u501F\u7528\u6709\u8FD9\u4E2A\u6808\u5E27\u7684\u751F\u547D\u5468\u671F\u3002\u6240\u4EE5\u5982\u679C\u6211\u4EEC\u8FD4\u56DE\u4E86\u8FD9\u4E2A\u95ED\u5305\uFF0C\u8FD9\u4E2A\u51FD\u6570\u8C03\u7528\u5C06\u4F1A\u7ED3\u675F\uFF0C\u6808\u5E27\u4E5F\u5C06\u6D88\u5931\uFF0C\u90A3\u4E48\u6211\u4EEC\u7684\u95ED\u5305\u6307\u5411\u4E86\u88AB\u91CA\u653E\u7684\u5185\u5B58\u73AF\u5883\uFF01\u518D\u6709\u6700\u540E\u4E00\u4E2A\u4FEE\u6539\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u8BA9\u5B83\u8FD0\u884C\u4E86\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

    <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token keyword">move</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>x<span class="token closure-punctuation punctuation">|</span></span> x <span class="token operator">+</span> num<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
# <span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> answer <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property">assert_eq!</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> answer<span class="token punctuation">)</span><span class="token punctuation">;</span>
# <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u901A\u8FC7\u628A\u5185\u90E8\u95ED\u5305\u6DFB\u52A0<code>move</code>\u5173\u952E\u5B57\uFF0C\u6211\u4EEC\u5F3A\u5236\u95ED\u5305\u4F7F\u7528 move \u7684\u65B9\u5F0F\u6355\u83B7\u73AF\u5883\u53D8\u91CF\u3002\u56E0\u4E3A\u8FD9\u91CC\u7684 num \u7C7B\u578B\u662F i32\uFF0C\u5B9E\u9645\u4E0A\u8FD9\u91CC\u7684 move \u6267\u884C\u7684\u662F copy, \u8FD9\u6837\u4E00\u6765\uFF0C\u95ED\u5305\u5C31\u4E0D\u518D\u62E5\u6709\u6307\u5411\u73AF\u5883\u7684\u6307\u9488\uFF0C\u800C\u662F\u5B8C\u6574\u62E5\u6709\u4E86\u88AB\u6355\u83B7\u7684\u53D8\u91CF\u3002\u5E76\u5141\u8BB8\u5B83\u79BB\u5F00\u6211\u4EEC\u7684\u6808\u5E27\u3002</p>`,42),k={id:"\u8FD9\u90E8\u5206\u5F15\u7528\u81EAthe-rust-programming-language\u4E2D\u6587\u7248",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#\u8FD9\u90E8\u5206\u5F15\u7528\u81EAthe-rust-programming-language\u4E2D\u6587\u7248","aria-hidden":"true"},"#",-1),m=s(" \u8FD9\u90E8\u5206\u5F15\u7528\u81EA"),b={href:"https://github.com/KaiserY/rust-book-chinese/blob/master/content/Closures%20%E9%97%AD%E5%8C%85.md",target:"_blank",rel:"noopener noreferrer"},f=s("The Rust Programming Language\u4E2D\u6587\u7248");function g(w,y){const a=p("ExternalLinkIcon");return l(),e(o,null,[i,n("blockquote",null,[n("h3",k,[d,m,n("a",b,[f,t(a)])])])],64)}var v=u(r,[["render",g],["__file","as_argument_return_value.html.vue"]]);export{v as default};
