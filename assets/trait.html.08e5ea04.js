import{c as n}from"./app.a489c551.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="_10-1-trait\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#_10-1-trait\u5173\u952E\u5B57" aria-hidden="true">#</a> 10.1 trait\u5173\u952E\u5B57</h1><h2 id="trait\u4E0E\u5177\u4F53\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#trait\u4E0E\u5177\u4F53\u7C7B\u578B" aria-hidden="true">#</a> trait\u4E0E\u5177\u4F53\u7C7B\u578B</h2><p>\u4F7F\u7528<strong>trait</strong>\u5B9A\u4E49\u4E00\u4E2A\u7279\u5F81\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">trait</span> <span class="token type-definition class-name">HasArea</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">area</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">f64</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>trait</strong>\u91CC\u9762\u7684\u51FD\u6570\u53EF\u4EE5\u6CA1\u6709\u51FD\u6570\u4F53\uFF0C\u5B9E\u73B0\u4EE3\u7801\u4EA4\u7ED9\u5177\u4F53\u5B9E\u73B0\u5B83\u7684\u7C7B\u578B\u53BB\u8865\u5145\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Circle</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    y<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
    radius<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">HasArea</span> <span class="token keyword">for</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">area</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">f64</span> <span class="token punctuation">{</span>
        <span class="token namespace">std<span class="token punctuation">::</span></span><span class="token keyword">f64</span><span class="token punctuation">::</span><span class="token namespace">consts<span class="token punctuation">::</span></span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>radius <span class="token operator">*</span> <span class="token keyword">self</span><span class="token punctuation">.</span>radius<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span>
        x<span class="token punctuation">:</span> <span class="token number">0.0f64</span><span class="token punctuation">,</span>
        y<span class="token punctuation">:</span> <span class="token number">0.0f64</span><span class="token punctuation">,</span>
        radius<span class="token punctuation">:</span> <span class="token number">1.0f64</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;circle c has an area of {}&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p><strong>\u6CE8</strong>: <strong>&amp;self</strong>\u8868\u793A\u7684\u662F<strong>area</strong>\u8FD9\u4E2A\u51FD\u6570\u4F1A\u5C06\u8C03\u7528\u8005\u7684\u501F\u4EE3\u5F15\u7528\u4F5C\u4E3A\u53C2\u6570</p><p>\u8FD9\u4E2A\u7A0B\u5E8F\u4F1A\u8F93\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>circle c has an area of 3.141592653589793
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="trait\u4E0E\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#trait\u4E0E\u6CDB\u578B" aria-hidden="true">#</a> trait\u4E0E\u6CDB\u578B</h2><blockquote><p>\u6211\u4EEC\u4E86\u89E3\u4E86Rust\u4E2Dtrait\u7684\u5B9A\u4E49\u548C\u4F7F\u7528\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u4ECB\u7ECD\u4E00\u4E0B\u5B83\u7684\u4F7F\u7528\u573A\u666F\uFF0C\u4ECE\u4E2D\u6211\u4EEC\u53EF\u4EE5\u7AA5\u63A2\u51FA\u63A5\u53E3\u8FD9\u7279\u6027\u5E26\u6765\u7684\u60CA\u559C</p></blockquote><p>\u6211\u4EEC\u77E5\u9053\u6CDB\u578B\u53EF\u4EE5\u6307\u4EFB\u610F\u7C7B\u578B\uFF0C\u4F46\u6709\u65F6\u8FD9\u4E0D\u662F\u6211\u4EEC\u60F3\u8981\u7684\uFF0C\u9700\u8981\u7ED9\u5B83\u4E00\u4E9B\u7EA6\u675F\u3002</p><h4 id="\u6CDB\u578B\u7684trait\u7EA6\u675F" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B\u7684trait\u7EA6\u675F" aria-hidden="true">#</a> \u6CDB\u578B\u7684trait\u7EA6\u675F</h4><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>fmt<span class="token punctuation">::</span></span><span class="token class-name">Debug</span><span class="token punctuation">;</span>
<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Debug</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>Debug</code>\u662F<strong>Rust</strong>\u5185\u7F6E\u7684\u4E00\u4E2Atrait\uFF0C\u4E3A&quot;{:?}&quot;\u5B9E\u73B0\u6253\u5370\u5185\u5BB9\uFF0C\u51FD\u6570<code>foo</code>\u63A5\u53D7\u4E00\u4E2A\u6CDB\u578B\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5E76\u4E14\u7EA6\u5B9A\u5176\u9700\u8981\u5B9E\u73B0<code>Debug</code></p><h4 id="\u591Atrait\u7EA6\u675F" tabindex="-1"><a class="header-anchor" href="#\u591Atrait\u7EA6\u675F" aria-hidden="true">#</a> \u591Atrait\u7EA6\u675F</h4><p>\u53EF\u4EE5\u4F7F\u7528\u591A\u4E2Atrait\u5BF9\u6CDB\u578B\u8FDB\u884C\u7EA6\u675F\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>fmt<span class="token punctuation">::</span></span><span class="token class-name">Debug</span><span class="token punctuation">;</span>
<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Debug</span> <span class="token operator">+</span> <span class="token class-name">Clone</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    s<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>&lt;T: Debug + Clone&gt;</code>\u4E2D<code>Debug</code>\u548C<code>Clone</code>\u4F7F\u7528<code>+</code>\u8FDE\u63A5\uFF0C\u6807\u793A\u6CDB\u578B<code>T</code>\u9700\u8981\u540C\u65F6\u5B9E\u73B0\u8FD9\u4E24\u4E2Atrait\u3002</p><h4 id="where\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#where\u5173\u952E\u5B57" aria-hidden="true">#</a> where\u5173\u952E\u5B57</h4><p>\u7EA6\u675F\u7684trait\u589E\u52A0\u540E\uFF0C\u4EE3\u7801\u770B\u8D77\u6765\u5C31\u53D8\u5F97\u8BE1\u5F02\u4E86\uFF0C\u8FD9\u65F6\u5019\u9700\u8981\u4F7F\u7528<code>where</code>\u4ECE\u53E5\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>fmt<span class="token punctuation">::</span></span><span class="token class-name">Debug</span><span class="token punctuation">;</span>
<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Clone</span><span class="token punctuation">,</span> <span class="token class-name">K</span><span class="token punctuation">:</span> <span class="token class-name">Clone</span> <span class="token operator">+</span> <span class="token class-name">Debug</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token class-name">K</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    y<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// where \u4ECE\u53E5</span>
<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">K</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token class-name">K</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Clone</span><span class="token punctuation">,</span> <span class="token class-name">K</span><span class="token punctuation">:</span> <span class="token class-name">Clone</span> <span class="token operator">+</span> <span class="token class-name">Debug</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    y<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6216\u8005</span>
<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">K</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token class-name">K</span><span class="token punctuation">)</span>
    <span class="token keyword">where</span> <span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Clone</span><span class="token punctuation">,</span>
          <span class="token class-name">K</span><span class="token punctuation">:</span> <span class="token class-name">Clone</span> <span class="token operator">+</span> <span class="token class-name">Debug</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    y<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="trait\u4E0E\u5185\u7F6E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#trait\u4E0E\u5185\u7F6E\u7C7B\u578B" aria-hidden="true">#</a> trait\u4E0E\u5185\u7F6E\u7C7B\u578B</h2><p>\u5185\u7F6E\u7C7B\u578B\u5982\uFF1A<code>i32</code>, <code>i64</code>\u7B49\u4E5F\u53EF\u4EE5\u6DFB\u52A0trait\u5B9E\u73B0\uFF0C\u4E3A\u5176\u5B9A\u5236\u4E00\u4E9B\u529F\u80FD\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">trait</span> <span class="token type-definition class-name">HasArea</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">area</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">f64</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">HasArea</span> <span class="token keyword">for</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">area</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">f64</span> <span class="token punctuation">{</span>
        <span class="token operator">*</span><span class="token keyword">self</span> <span class="token keyword">as</span> <span class="token keyword">f64</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token number">5</span><span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8FD9\u6837\u7684\u505A\u6CD5\u662F\u6709\u9650\u5236\u7684\u3002Rust \u6709\u4E00\u4E2A\u201C\u5B64\u513F\u89C4\u5219\u201D\uFF1A\u5F53\u4F60\u4E3A\u67D0\u7C7B\u578B\u5B9E\u73B0\u67D0 trait \u7684\u65F6\u5019\uFF0C\u5FC5\u987B\u8981\u6C42\u7C7B\u578B\u6216\u8005 trait \u81F3\u5C11\u6709\u4E00\u4E2A\u662F\u5728\u5F53\u524D crate \u4E2D\u5B9A\u4E49\u7684\u3002\u4F60\u4E0D\u80FD\u4E3A\u7B2C\u4E09\u65B9\u7684\u7C7B\u578B\u5B9E\u73B0\u7B2C\u4E09\u65B9\u7684 trait \u3002</p><p>\u5728\u8C03\u7528 trait \u4E2D\u5B9A\u4E49\u7684\u65B9\u6CD5\u7684\u65F6\u5019\uFF0C\u4E00\u5B9A\u8981\u8BB0\u5F97\u8BA9\u8FD9\u4E2A trait \u53EF\u88AB\u8BBF\u95EE\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> <span class="token keyword">mut</span> f <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>fs<span class="token punctuation">::</span></span><span class="token class-name">File</span><span class="token punctuation">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;foo.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;Couldn\u2019t open foo.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> buf <span class="token operator">=</span> <span class="token string">b&quot;whatever&quot;</span><span class="token punctuation">;</span> <span class="token comment">//  buf: &amp;[u8; 8]</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
# result<span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u8FD9\u91CC\u662F\u9519\u8BEF\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>error: type \`std::fs::File\` does not implement any method in scope named \`write\`
let result = f.write(buf);
               ^~~~~~~~~~
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6211\u4EEC\u9700\u8981\u5148use\u8FD9\u4E2AWrite trait\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token class-name">Write</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> <span class="token keyword">mut</span> f <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>fs<span class="token punctuation">::</span></span><span class="token class-name">File</span><span class="token punctuation">::</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;foo.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;Couldn\u2019t open foo.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> buf <span class="token operator">=</span> <span class="token string">b&quot;whatever&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
# result<span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ignore the error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8FD9\u6837\u5C31\u80FD\u65E0\u9519\u8BEF\u5730\u7F16\u8BD1\u4E86\u3002</p><h2 id="trait\u7684\u9ED8\u8BA4\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#trait\u7684\u9ED8\u8BA4\u65B9\u6CD5" aria-hidden="true">#</a> trait\u7684\u9ED8\u8BA4\u65B9\u6CD5</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">trait</span> <span class="token type-definition class-name">Foo</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">is_valid</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span><span class="token punctuation">;</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">is_invalid</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span> <span class="token operator">!</span><span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>is_invalid</code>\u662F\u9ED8\u8BA4\u65B9\u6CD5\uFF0C<code>Foo</code>\u7684\u5B9E\u73B0\u8005\u5E76\u4E0D\u8981\u6C42\u5B9E\u73B0\u5B83\uFF0C\u5982\u679C\u9009\u62E9\u5B9E\u73B0\u5B83\uFF0C\u4F1A\u8986\u76D6\u6389\u5B83\u7684\u9ED8\u8BA4\u884C\u4E3A\u3002</p><h2 id="trait\u7684\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#trait\u7684\u7EE7\u627F" aria-hidden="true">#</a> trait\u7684\u7EE7\u627F</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">trait</span> <span class="token type-definition class-name">Foo</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">trait</span> <span class="token type-definition class-name">FooBar</span> <span class="token punctuation">:</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">foobar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u8FD9\u6837<code>FooBar</code>\u7684\u5B9E\u73B0\u8005\u4E5F\u8981\u540C\u65F6\u5B9E\u73B0<code>Foo</code>\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">struct</span> <span class="token type-definition class-name">Baz</span><span class="token punctuation">;</span>

<span class="token keyword">impl</span> <span class="token class-name">Foo</span> <span class="token keyword">for</span> <span class="token class-name">Baz</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">FooBar</span> <span class="token keyword">for</span> <span class="token class-name">Baz</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">foobar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;foobar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="derive\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#derive\u5C5E\u6027" aria-hidden="true">#</a> derive\u5C5E\u6027</h2><p><strong>Rust</strong>\u63D0\u4F9B\u4E86\u4E00\u4E2A\u5C5E\u6027<code>derive</code>\u6765\u81EA\u52A8\u5B9E\u73B0\u4E00\u4E9Btrait\uFF0C\u8FD9\u6837\u53EF\u4EE5\u907F\u514D\u91CD\u590D\u7E41\u7410\u5730\u5B9E\u73B0\u4ED6\u4EEC\uFF0C\u80FD\u88AB<code>derive</code>\u4F7F\u7528\u7684trait\u5305\u62EC\uFF1A<code>Clone</code>, <code>Copy</code>, <code>Debug</code>, <code>Default</code>, <code>Eq</code>, <code>Hash</code>, <code>Ord</code>, <code>PartialEq</code>, <code>PartialOrd</code></p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Foo</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Foo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="impl-trait" tabindex="-1"><a class="header-anchor" href="#impl-trait" aria-hidden="true">#</a> impl Trait</h2><p>\u5728\u7248\u672C1.26 \u5F00\u59CB\uFF0CRust\u63D0\u4F9B\u4E86<code>impl Trait</code>\u7684\u5199\u6CD5\uFF0C\u4F5C\u4E3A\u548CScala \u5BF9\u7B49\u7684<code>\u65E2\u5B58\u578B\u522B(Existential Type)</code>\u7684\u5199\u6CD5\u3002</p><p>\u5728\u4E0B\u9762\u8FD9\u4E2A\u5199\u6CD5\u4E2D\uFF0C<code>fn foo()</code>\u5C06\u8FD4\u56DE\u4E00\u4E2A\u5B9E\u4F5C\u4E86<code>Trait</code>\u7684trait\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">//before</span>
<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">Trait</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">//after</span>
<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">impl</span> <span class="token class-name">Trait</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u76F8\u8F83\u4E8E1.25 \u7248\u672C\u4EE5\u524D\u7684\u5199\u6CD5\uFF0C\u65B0\u7684\u5199\u6CD5\u4F1A\u5728\u5F88\u591A\u573A\u5408\u4E2D\u66F4\u6709\u5229\u4E8E\u5F00\u53D1\u548C\u6267\u884C\u6548\u7387\u3002</p><h4 id="impl-trait-\u7684\u666E\u904D\u7528\u4F8B" tabindex="-1"><a class="header-anchor" href="#impl-trait-\u7684\u666E\u904D\u7528\u4F8B" aria-hidden="true">#</a> impl Trait \u7684\u666E\u904D\u7528\u4F8B</h4><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">trait</span> <span class="token type-definition class-name">Trait</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">method</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Trait</span> <span class="token keyword">for</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
    <span class="token comment">// implementation goes here</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Trait</span> <span class="token keyword">for</span> <span class="token keyword">f32</span> <span class="token punctuation">{</span>
    <span class="token comment">// implementation goes here</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5229\u7528Box \u4F1A\u610F\u5473\uFF1A\u5373\u4FBF\u56DE\u4F20\u7684\u5185\u5BB9\u662F\u56FA\u5B9A\u7684\uFF0C\u4F46\u4E5F\u4F1A\u4F7F\u7528\u5230\u52A8\u6001\u5185\u5B58\u5206\u914D\u3002\u5229\u7528<code>impl Trait</code> \u7684\u5199\u6CD5\u53EF\u4EE5\u907F\u514D\u4FBF\u7528Box\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">//before</span>
<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">Trait</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">Trait</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span>

<span class="token comment">//after</span>
<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">impl</span> <span class="token class-name">Trait</span> <span class="token punctuation">{</span>
    <span class="token number">5</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="\u5176\u4ED6\u53D7\u76CA\u7684\u7528\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6\u53D7\u76CA\u7684\u7528\u4F8B" aria-hidden="true">#</a> \u5176\u4ED6\u53D7\u76CA\u7684\u7528\u4F8B</h4><p>\u95ED\u5305:</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// before</span>
<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>x<span class="token closure-punctuation punctuation">|</span></span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// after</span>
<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">impl</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
    <span class="token operator">|</span>x<span class="token operator">|</span> x <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4F20\u53C2\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// before</span>
<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Trait</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token comment">// after</span>
<span class="token keyword">fn</span> <span class="token function-definition function">foo</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token keyword">impl</span> <span class="token class-name">Trait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,57);function t(e,o){return p}var u=s(a,[["render",t],["__file","trait.html.vue"]]);export{u as default};
