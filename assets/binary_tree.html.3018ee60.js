import{c as n}from"./app.a489c551.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u4E8C\u53C9\u6811</h1><h2 id="\u4E8C\u53C9\u6811\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7B80\u4ECB" aria-hidden="true">#</a> \u4E8C\u53C9\u6811\u7B80\u4ECB</h2><p>\u5728\u8BA1\u7B97\u673A\u79D1\u5B66\u4E2D\uFF0C\u4E8C\u53C9\u6811\u662F\u6BCF\u4E2A\u8282\u70B9\u6700\u591A\u6709\u4E24\u4E2A\u5B50\u6811\u7684\u6811\u7ED3\u6784\u3002\u901A\u5E38\u5B50\u6811\u88AB\u79F0\u4F5C\u201C\u5DE6\u5B50\u6811\u201D\uFF08left subtree\uFF09\u548C\u201C\u53F3\u5B50\u6811\u201D\uFF08right subtree\uFF09\u3002\u4E8C\u53C9\u6811\u5E38\u88AB\u7528\u4E8E\u5B9E\u73B0\u4E8C\u53C9\u67E5\u627E\u6811\u548C\u4E8C\u53C9\u5806\u3002</p><blockquote><p>\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u5B50\u8282\u70B9\u4E0E\u7236\u8282\u70B9\u7684\u952E\u4E00\u822C\u6EE1\u8DB3\u4E00\u5B9A\u7684\u987A\u5E8F\u5173\u7CFB\uFF0C\u4E60\u60EF\u4E0A\uFF0C\u5DE6\u8282\u70B9\u7684\u952E\u5C11\u4E8E\u7236\u4EB2\u8282\u70B9\u7684\u952E\uFF0C\u53F3\u8282\u70B9\u7684\u952E\u5927\u4E8E\u7236\u4EB2\u8282\u70B9\u7684\u952E\u3002</p></blockquote><blockquote><p>\u4E8C\u53C9\u5806\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u5806\uFF0C\u4E8C\u53C9\u5806\u662F\u5B8C\u5168\u4E8C\u5143\u6811\uFF08\u4E8C\u53C9\u6811\uFF09\u6216\u8005\u662F\u8FD1\u4F3C\u5B8C\u5168\u4E8C\u5143\u6811\uFF08\u4E8C\u53C9\u6811\uFF09\u3002\u4E8C\u53C9\u5806\u6709\u4E24\u79CD\uFF1A\u6700\u5927\u5806\u548C\u6700\u5C0F\u5806\u3002\u6700\u5927\u5806\uFF1A\u7236\u7ED3\u70B9\u7684\u952E\u603B\u662F\u5927\u4E8E\u6216\u7B49\u4E8E\u4EFB\u4F55\u4E00\u4E2A\u5B50\u8282\u70B9\u7684\u952E\uFF1B\u6700\u5C0F\u5806\uFF1A\u7236\u7ED3\u70B9\u7684\u952E\u603B\u662F\u5C0F\u4E8E\u6216\u7B49\u4E8E\u4EFB\u4F55\u4E00\u4E2A\u5B50\u8282\u70B9\u7684\u952E\u3002</p></blockquote><blockquote><p>\u4E8C\u53C9\u6811\u7684\u6BCF\u4E2A\u7ED3\u70B9\u81F3\u591A\u53EA\u6709\u4E8C\u68F5\u5B50\u6811(\u4E0D\u5B58\u5728\u5EA6\u5927\u4E8E2\u7684\u7ED3\u70B9)\uFF0C\u4E8C\u53C9\u6811\u7684\u5B50\u6811\u6709\u5DE6\u53F3\u4E4B\u5206\uFF0C\u6B21\u5E8F\u4E0D\u80FD\u98A0\u5012\u3002\u4E8C\u53C9\u6811\u7684\u7B2Ci\u5C42\u81F3\u591A\u67092^{i-1}\u4E2A\u7ED3\u70B9\uFF1B\u6DF1\u5EA6\u4E3Ak\u7684\u4E8C\u53C9\u6811\u81F3\u591A\u67092^k-1\u4E2A\u7ED3\u70B9\uFF1B\u5BF9\u4EFB\u4F55\u4E00\u68F5\u4E8C\u53C9\u6811T\uFF0C\u5982\u679C\u5176\u7EC8\u7AEF\u7ED3\u70B9\u6570\u4E3An_0\uFF0C\u5EA6\u4E3A2\u7684\u7ED3\u70B9\u6570\u4E3An_2\uFF0C\u5219n_0=n_2+1\u3002</p></blockquote><blockquote><p>\u4E00\u68F5\u6DF1\u5EA6\u4E3Ak\uFF0C\u4E14\u67092^k-1\u4E2A\u8282\u70B9\u79F0\u4E4B\u4E3A\u6EE1\u4E8C\u53C9\u6811\uFF1B\u6DF1\u5EA6\u4E3Ak\uFF0C\u6709n\u4E2A\u8282\u70B9\u7684\u4E8C\u53C9\u6811\uFF0C\u5F53\u4E14\u4EC5\u5F53\u5176\u6BCF\u4E00\u4E2A\u8282\u70B9\u90FD\u4E0E\u6DF1\u5EA6\u4E3Ak\u7684\u6EE1\u4E8C\u53C9\u6811\u4E2D\uFF0C\u5E8F\u53F7\u4E3A1\u81F3n\u7684\u8282\u70B9\u5BF9\u5E94\u65F6\uFF0C\u79F0\u4E4B\u4E3A\u5B8C\u5168\u4E8C\u53C9\u6811\u3002</p></blockquote><h2 id="\u4E8C\u53C9\u6811\u4E0E\u6811\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811\u4E0E\u6811\u7684\u533A\u522B" aria-hidden="true">#</a> \u4E8C\u53C9\u6811\u4E0E\u6811\u7684\u533A\u522B</h2><p>\u4E8C\u53C9\u6811<em>\u4E0D\u662F</em>\u6811\u7684\u4E00\u79CD\u7279\u6B8A\u60C5\u5F62\uFF0C\u5C3D\u7BA1\u5176\u4E0E\u6811\u6709\u8BB8\u591A\u76F8\u4F3C\u4E4B\u5904\uFF0C\u4F46\u6811\u548C\u4E8C\u53C9\u6811\u6709\u4E24\u4E2A\u4E3B\u8981\u5DEE\u522B\uFF1A</p><ol><li>\u6811\u4E2D\u7ED3\u70B9\u7684\u6700\u5927\u5EA6\u6570\u6CA1\u6709\u9650\u5236\uFF0C\u800C\u4E8C\u53C9\u6811\u7ED3\u70B9\u7684\u6700\u5927\u5EA6\u6570\u4E3A2\u3002</li><li>\u6811\u7684\u7ED3\u70B9\u65E0\u5DE6\u3001\u53F3\u4E4B\u5206\uFF0C\u800C\u4E8C\u53C9\u6811\u7684\u7ED3\u70B9\u6709\u5DE6\u3001\u53F3\u4E4B\u5206\u3002</li></ol><h2 id="\u5B9A\u4E49\u4E8C\u53C9\u6811\u7684\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u4E8C\u53C9\u6811\u7684\u7ED3\u6784" aria-hidden="true">#</a> \u5B9A\u4E49\u4E8C\u53C9\u6811\u7684\u7ED3\u6784</h2><p>\u4E8C\u53C9\u6811\u7684\u6BCF\u4E2A\u8282\u70B9\u7531\u952Ekey\u3001\u503Cvalue\u4E0E\u5DE6\u53F3\u5B50\u6811left/right\u7EC4\u6210\uFF0C\u8FD9\u91CC\u6211\u4EEC\u628A\u8282\u70B9\u58F0\u660E\u4E3A\u4E00\u4E2A\u6CDB\u578B\u7ED3\u6784\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">type</span> <span class="token type-definition class-name">TreeNode</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">Node</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Node</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">:</span> <span class="token namespace">std<span class="token punctuation">::</span>fmt<span class="token punctuation">::</span></span><span class="token class-name">Display</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
   left<span class="token punctuation">:</span> <span class="token class-name">TreeNode</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
   right<span class="token punctuation">:</span> <span class="token class-name">TreeNode</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
   key<span class="token punctuation">:</span> <span class="token class-name">K</span><span class="token punctuation">,</span>
   value<span class="token punctuation">:</span> <span class="token class-name">V</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u5B9E\u73B0\u4E8C\u53C9\u6811\u7684\u521D\u59CB\u5316\u4E0E\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u63D2\u5165" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u4E8C\u53C9\u6811\u7684\u521D\u59CB\u5316\u4E0E\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u63D2\u5165" aria-hidden="true">#</a> \u5B9E\u73B0\u4E8C\u53C9\u6811\u7684\u521D\u59CB\u5316\u4E0E\u4E8C\u53C9\u67E5\u627E\u6811\u7684\u63D2\u5165</h2><p>\u7531\u4E8E\u4E8C\u53C9\u67E5\u627E\u6811\u8981\u6C42\u952E\u53EF\u6392\u5E8F\uFF0C\u6211\u4EEC\u8981\u6C42K\u5B9E\u73B0PartialOrd</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">trait</span> <span class="token type-definition class-name">BinaryTree</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">fn</span> <span class="token function-definition function">pre_order</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">fn</span> <span class="token function-definition function">in_order</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">fn</span> <span class="token function-definition function">pos_order</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">trait</span> <span class="token type-definition class-name">BinarySearchTree</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">:</span><span class="token class-name">PartialOrd</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;</span><span class="token punctuation">:</span><span class="token class-name">BinaryTree</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">fn</span> <span class="token function-definition function">insert</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span><span class="token class-name">K</span><span class="token punctuation">,</span>value<span class="token punctuation">:</span> <span class="token class-name">V</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">impl</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">:</span><span class="token namespace">std<span class="token punctuation">::</span>fmt<span class="token punctuation">::</span></span><span class="token class-name">Display</span><span class="token operator">&gt;</span> <span class="token class-name">Node</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">new</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token class-name">K</span><span class="token punctuation">,</span>value<span class="token punctuation">:</span> <span class="token class-name">V</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token punctuation">{</span>
            left<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            right<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
            value<span class="token punctuation">:</span> value<span class="token punctuation">,</span>
			key<span class="token punctuation">:</span> key<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">impl</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">:</span><span class="token class-name">PartialOrd</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">:</span><span class="token namespace">std<span class="token punctuation">::</span>fmt<span class="token punctuation">::</span></span><span class="token class-name">Display</span><span class="token operator">&gt;</span> <span class="token class-name">BinarySearchTree</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Node</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">insert</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span><span class="token class-name">K</span><span class="token punctuation">,</span>value<span class="token punctuation">:</span><span class="token class-name">V</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">self</span><span class="token punctuation">.</span>key <span class="token operator">&lt;</span> key <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token keyword">mut</span> right<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>right <span class="token punctuation">{</span>
                right<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">self</span><span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token keyword">mut</span> left<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>left <span class="token punctuation">{</span>
                left<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">self</span><span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="\u4E8C\u53C9\u6811\u7684\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811\u7684\u904D\u5386" aria-hidden="true">#</a> \u4E8C\u53C9\u6811\u7684\u904D\u5386</h2><ul><li>\u5148\u5E8F\u904D\u5386\uFF1A\u9996\u5148\u8BBF\u95EE\u6839\uFF0C\u518D\u5148\u5E8F\u904D\u5386\u5DE6\uFF08\u53F3\uFF09\u5B50\u6811\uFF0C\u6700\u540E\u5148\u5E8F\u904D\u5386\u53F3\uFF08\u5DE6\uFF09\u5B50\u6811\u3002</li><li>\u4E2D\u5E8F\u904D\u5386\uFF1A\u9996\u5148\u4E2D\u5E8F\u904D\u5386\u5DE6\uFF08\u53F3\uFF09\u5B50\u6811\uFF0C\u518D\u8BBF\u95EE\u6839\uFF0C\u6700\u540E\u4E2D\u5E8F\u904D\u5386\u53F3\uFF08\u5DE6\uFF09\u5B50\u6811\u3002</li><li>\u540E\u5E8F\u904D\u5386\uFF1A\u9996\u5148\u540E\u5E8F\u904D\u5386\u5DE6\uFF08\u53F3\uFF09\u5B50\u6811\uFF0C\u518D\u540E\u5E8F\u904D\u5386\u53F3\uFF08\u5DE6\uFF09\u5B50\u6811\uFF0C\u6700\u540E\u8BBF\u95EE\u6839\u3002</li></ul><p>\u4E0B\u9762\u662F\u4EE3\u7801\u5B9E\u73B0\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">:</span><span class="token namespace">std<span class="token punctuation">::</span>fmt<span class="token punctuation">::</span></span><span class="token class-name">Display</span><span class="token operator">&gt;</span> <span class="token class-name">BinaryTree</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Node</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">pre_order</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">self</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">ref</span> left<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>left <span class="token punctuation">{</span>
            left<span class="token punctuation">.</span><span class="token function">pre_order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">ref</span> right<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>right <span class="token punctuation">{</span>
            right<span class="token punctuation">.</span><span class="token function">pre_order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">in_order</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">ref</span> left<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>left <span class="token punctuation">{</span>
            left<span class="token punctuation">.</span><span class="token function">in_order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">self</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">ref</span> right<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>right <span class="token punctuation">{</span>
            right<span class="token punctuation">.</span><span class="token function">in_order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">pos_order</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">ref</span> left<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>left <span class="token punctuation">{</span>
            left<span class="token punctuation">.</span><span class="token function">pos_order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">ref</span> right<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>right <span class="token punctuation">{</span>
            right<span class="token punctuation">.</span><span class="token function">pos_order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">self</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="\u6D4B\u8BD5\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5\u4EE3\u7801" aria-hidden="true">#</a> \u6D4B\u8BD5\u4EE3\u7801</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">type</span> <span class="token type-definition class-name">BST</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token class-name">Node</span><span class="token operator">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">test_insert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> root <span class="token operator">=</span> <span class="token constant">BST</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token punctuation">,</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">ref</span> left<span class="token punctuation">)</span> <span class="token operator">=</span> root<span class="token punctuation">.</span>left <span class="token punctuation">{</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">ref</span> right<span class="token punctuation">)</span> <span class="token operator">=</span> root<span class="token punctuation">.</span>right <span class="token punctuation">{</span>
        <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>right<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">ref</span> right<span class="token punctuation">)</span> <span class="token operator">=</span> right<span class="token punctuation">.</span>right <span class="token punctuation">{</span>
            <span class="token macro property">assert_eq!</span><span class="token punctuation">(</span>right<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Pre Order traversal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span><span class="token function">pre_order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;In Order traversal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span><span class="token function">in_order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Pos Order traversal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span><span class="token function">pos_order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">test_insert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="\u7EC3\u4E60" tabindex="-1"><a class="header-anchor" href="#\u7EC3\u4E60" aria-hidden="true">#</a> \u7EC3\u4E60</h2><p>\u57FA\u4E8E\u4EE5\u4E0A\u4EE3\u7801\uFF0C\u4FEE\u6539\u6210\u4E8C\u53C9\u5806\u7684\u5F62\u5F0F\u3002</p>`,24);function t(e,o){return p}var u=s(a,[["render",t],["__file","binary_tree.html.vue"]]);export{u as default};
