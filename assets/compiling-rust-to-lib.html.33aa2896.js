import{c as n}from"./app.a489c551.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u5C06rust\u7F16\u8BD1\u6210\u5E93" tabindex="-1"><a class="header-anchor" href="#\u5C06rust\u7F16\u8BD1\u6210\u5E93" aria-hidden="true">#</a> \u5C06Rust\u7F16\u8BD1\u6210\u5E93</h1><p>\u4E0A\u4E00\u7AE0\u8BB2\u8FF0\u4E86\u5982\u4F55\u4ECErust\u4E2D\u8C03\u7528c\u5E93\uFF0C\u8FD9\u4E00\u7AE0\u6211\u4EEC\u8BB2\u5982\u4F55\u628Arust\u7F16\u8BD1\u6210\u5E93\u8BA9\u522B\u7684\u8BED\u8A00\u901A\u8FC7cffi\u8C03\u7528\u3002</p><h2 id="\u8C03\u7528\u7EA6\u5B9A\u548Cmangle" tabindex="-1"><a class="header-anchor" href="#\u8C03\u7528\u7EA6\u5B9A\u548Cmangle" aria-hidden="true">#</a> \u8C03\u7528\u7EA6\u5B9A\u548Cmangle</h2><p>\u6B63\u5982\u4E0A\u4E00\u7AE0\u8BB2\u8FF0\u7684\uFF0C\u4E3A\u4E86\u80FD\u8BA9rust\u7684\u51FD\u6570\u901A\u8FC7ffi\u88AB\u8C03\u7528\uFF0C\u9700\u8981\u52A0\u4E0A<code>extern &quot;C&quot;</code>\u5BF9\u51FD\u6570\u8FDB\u884C\u4FEE\u9970\u3002</p><p>\u4F46\u7531\u4E8Erust\u652F\u6301\u91CD\u8F7D\uFF0C\u6240\u4EE5\u51FD\u6570\u540D\u4F1A\u88AB\u7F16\u8BD1\u5668\u8FDB\u884C\u6DF7\u6DC6\uFF0C\u5C31\u50CFc++\u4E00\u6837\u3002\u56E0\u6B64\u5F53\u4F60\u7684\u51FD\u6570\u88AB\u7F16\u8BD1\u5B8C\u6BD5\u540E\uFF0C\u51FD\u6570\u540D\u4F1A\u5E26\u4E0A\u4E00\u4E32\u8868\u660E\u51FD\u6570\u7B7E\u540D\u7684\u5B57\u7B26\u4E32\u3002</p><p>\u6BD4\u5982\uFF1A<code>fn test() {}</code>\u4F1A\u53D8\u6210<code>_ZN4test20hf06ae59e934e5641haaE</code>. \u8FD9\u6837\u7684\u51FD\u6570\u540D\u4E3Affi\u8C03\u7528\u5E26\u6765\u4E86\u56F0\u96BE\uFF0C\u56E0\u6B64\uFF0Crust\u63D0\u4F9B\u4E86<code>#[no_mangle]</code>\u5C5E\u6027\u4E3A\u51FD\u6570\u4FEE\u9970\u3002 \u5BF9\u4E8E\u5E26\u6709<code>#[no_mangle]</code>\u5C5E\u6027\u7684\u51FD\u6570\uFF0Crust\u7F16\u8BD1\u5668\u4E0D\u4F1A\u4E3A\u5B83\u8FDB\u884C\u51FD\u6570\u540D\u6DF7\u6DC6\u3002\u5982\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5728nm\u4E2D\u89C2\u5BDF\u5230\u4E3A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>...
00000000001a7820 T test
...
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u81F3\u6B64\uFF0C<code>test</code>\u51FD\u6570\u5C06\u80FD\u591F\u88AB\u6B63\u5E38\u7684\u7531<code>cffi</code>\u8C03\u7528\u3002</p><h2 id="\u6307\u5B9Acrate\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6307\u5B9Acrate\u7C7B\u578B" aria-hidden="true">#</a> \u6307\u5B9A<code>crate</code>\u7C7B\u578B</h2><p><code>rustc</code>\u9ED8\u8BA4\u7F16\u8BD1\u4EA7\u751F<code>rust</code>\u81EA\u7528\u7684<code>rlib</code>\u683C\u5F0F\u5E93\uFF0C\u8981\u8BA9<code>rustc</code>\u4EA7\u751F\u52A8\u6001\u94FE\u63A5\u5E93\u6216\u8005\u9759\u6001\u94FE\u63A5\u5E93\uFF0C\u9700\u8981\u663E\u5F0F\u6307\u5B9A\u3002</p><ol><li>\u65B9\u6CD51: \u5728\u6587\u4EF6\u4E2D\u6307\u5B9A\u3002 \u5728\u6587\u4EF6\u5934\u52A0\u4E0A<code>#![crate_type = &quot;foo&quot;]</code>, \u5176\u4E2D<code>foo</code>\u7684\u53EF\u9009\u7C7B\u578B\u6709<code>bin</code>, <code>lib</code>, <code>rlib</code>, <code>dylib</code>, <code>staticlib</code>.\u5206\u522B\u5BF9\u5E94\u53EF\u6267\u884C\u6587\u4EF6\uFF0C \u9ED8\u8BA4(\u5C06\u7531<code>rustc</code>\u81EA\u5DF1\u51B3\u5B9A), <code>rlib</code>\u683C\u5F0F\uFF0C\u52A8\u6001\u94FE\u63A5\u5E93\uFF0C\u9759\u6001\u94FE\u63A5\u5E93\u3002</li><li>\u65B9\u6CD52: \u7F16\u8BD1\u65F6\u7ED9rustc \u4F20<code>--crate-type</code>\u53C2\u6570\u3002\u53C2\u6570\u5185\u5BB9\u540C\u4E0A\u3002</li><li>\u65B9\u6CD53: \u4F7F\u7528cargo\uFF0C\u6307\u5B9A<code>crate-type = [&quot;foo&quot;] </code>, <code>foo</code>\u53EF\u9009\u7C7B\u578B\u540C1</li></ol><h2 id="\u5C0F\u6280\u5DE7-any" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u6280\u5DE7-any" aria-hidden="true">#</a> \u5C0F\u6280\u5DE7: <code>Any</code></h2><p>\u7531\u4E8E\u5728\u8DE8\u8D8A<code>ffi</code>\u8FC7\u7A0B\u4E2D\uFF0C<code>rust</code>\u7C7B\u578B\u4FE1\u606F\u4F1A\u4E22\u5931\uFF0C\u6BD4\u5982\u5F53\u7528<code>rust</code>\u63D0\u4F9B\u4E00\u4E2A<code>OpaqueStruct</code>\u7ED9\u522B\u7684\u8BED\u8A00\u65F6\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span></span>transmute<span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Foo</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  t<span class="token punctuation">:</span> <span class="token class-name">T</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">new_foo_vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">*</span><span class="token keyword">const</span> c_void <span class="token punctuation">{</span>
    <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">into_raw</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Foo</span> <span class="token punctuation">{</span>t<span class="token punctuation">:</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">const</span> c_void
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">new_foo_int</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">*</span><span class="token keyword">const</span> c_void <span class="token punctuation">{</span>
    <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">into_raw</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Foo</span> <span class="token punctuation">{</span>t<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">const</span> c_void
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">push_foo_element</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">Foo</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    t<span class="token punctuation">.</span>t<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">push_foo_element_c</span><span class="token punctuation">(</span>foo<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> c_void<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> foo2 <span class="token operator">=</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
        <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token operator">*</span><span class="token punctuation">(</span>foo <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">Foo</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">)</span> <span class="token comment">// \u8FD9\u4E48\u786E\u5B9A\u662FFoo&lt;Vec&lt;i32&gt;&gt;? \u4E07\u4E00foo\u662FFoo&lt;i32&gt;\u600E\u4E48\u529E\uFF1F</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">push_foo_element</span><span class="token punctuation">(</span>foo3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>\u4EE5\u4E0A\u4EE3\u7801\u4E2D\u5B8C\u5168\u4E0D\u77E5\u9053<code>foo</code>\u662F\u4E00\u4E2A\u4EC0\u4E48\u4E1C\u897F\u3002\u5B89\u5168\u4E5F\u65E0\u4ECE\u8BF4\u8D77\u4E86\uFF0C\u53EA\u80FD\u9760\u6587\u6863\u3002 \u56E0\u6B64\u5728<code>ffi</code>\u8C03\u7528\u65F6\u5F80\u5F80\u4F1A\u4E27\u5931\u6389<code>rust</code>\u7C7B\u578B\u7CFB\u7EDF\u5E26\u6765\u7684\u65B9\u4FBF\u548C\u5B89\u5168\u3002\u5728\u8FD9\u91CC\u63D0\u4F9B\u4E00\u4E2A\u5C0F\u6280\u5DE7:\u4F7F\u7528<code>Box&lt;Box&lt;Any&gt;&gt;</code>\u6765\u5305\u88C5\u4F60\u7684\u7C7B\u578B\u3002</p><p><code>rust</code>\u7684<code>Any</code>\u7C7B\u578B\u4E3A<code>rust</code>\u5E26\u6765\u4E86\u8FD0\u884C\u65F6\u53CD\u5C04\u7684\u80FD\u529B\uFF0C\u4F7F\u7528<code>Any</code>\u8DE8\u8D8A<code>ffi</code>\u8FB9\u754C\u5C06\u6781\u5927\u63D0\u9AD8\u7A0B\u5E8F\u5B89\u5168\u6027\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>any<span class="token punctuation">::</span></span><span class="token class-name">Any</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Foo</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  t<span class="token punctuation">:</span> <span class="token class-name">T</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">new_foo_vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">*</span><span class="token keyword">const</span> c_void <span class="token punctuation">{</span>
    <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">into_raw</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Foo</span> <span class="token punctuation">{</span>t<span class="token punctuation">:</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">Any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">const</span> c_void
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">new_foo_int</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">*</span><span class="token keyword">const</span> c_void <span class="token punctuation">{</span>
    <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">into_raw</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Foo</span> <span class="token punctuation">{</span>t<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">Any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">const</span> c_void
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">push_foo_element</span><span class="token punctuation">(</span>t<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">Foo</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    t<span class="token punctuation">.</span>t<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token keyword">fn</span> <span class="token function-definition function">push_foo_element_c</span><span class="token punctuation">(</span>foo<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token keyword">mut</span> c_void<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> foo2 <span class="token operator">=</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
        <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token operator">*</span><span class="token punctuation">(</span>foo <span class="token keyword">as</span> <span class="token operator">*</span><span class="token keyword">mut</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">Any</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> foo3<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">Foo</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">=</span> foo2<span class="token punctuation">.</span><span class="token function">downcast_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5982\u679Cfoo2\u4E0D\u662F*const Box&lt;Foo&lt;Vec&lt;i32&gt;&gt;&gt;, \u5219foo3\u5C06\u4F1A\u662FNone</span>
    <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=</span> foo3 <span class="token punctuation">{</span>
      <span class="token function">push_foo_element</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u8FD9\u6837\u4E00\u6765\uFF0C\u5C31\u975E\u5E38\u4E0D\u5BB9\u6613\u51FA\u9519\u4E86\u3002</p>`,20);function t(o,e){return p}var u=s(a,[["render",t],["__file","compiling-rust-to-lib.html.vue"]]);export{u as default};
